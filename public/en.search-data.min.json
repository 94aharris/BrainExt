[{"id":0,"href":"/","title":"","parent":"","content":"This is a personal Wiki (aka Digital Gargen)\nInspired by - https://github.com/nikitavoloboev/knowledge/blob/master/SUMMARY.md\n"},{"id":1,"href":"/APM/AppDynamics/","title":"App Dynamics","parent":"APM","content":"Application Insights    Overview    APM and Metrics offering with an on-prem component. Enterprise licensed. Pay for Infra. Can be used on Isolated Environment. Tested and popular.\nLinks      General PDFs\n  Detailed On-Prem Architecture\n  "},{"id":2,"href":"/ArcGis/metrics/","title":"Metrics","parent":"ArcGis","content":"ArcGis Metrics    Steps     Either programatically or manually get a token to use in requests  http://server[:port]/arcgis/admin/generateToken Specify the web portal in the url field   Navigate to the server subsite admin page and test the token  Run https://127.0.0.1/\u0026lt;serversite\u0026gt;/\u0026lt;webadaptor\u0026gt;/admin/usagereports?f=json   Run a report to pull usage reports or logs  Usage reports can be used to see the site hits by product Logs can be used to see specific user hits per product Users may show as anonymous   Programatically pull the JSON with the token in order to evaluate Upsert the pulled data into a sql table and perform some analysis Enrich the pulled data with additional context (User info from AD, user location, etc.) Wire up a visualization tool (e.g. PowerBi, Tableau, etc.) to the table and then use that for visualizing results  Links    Arcgis usage reports\nArcgis Token Scripting PowerShell\n"},{"id":3,"href":"/Azure/AppInsights/","title":"App Insights","parent":"Azure","content":"App Insights    Links     Add App Insights to Angular SPA Application Insights to JavaScript Add App Insights to Angular ..different take Add App Insights to Angular yet another way  Got it working this way    Notes     \u0026lsquo;Workspace Based\u0026rsquo; requires log analytics workspace Buffers user sessions so data not sent back to MS until page is closed Can use trace and log analytics  Angular Single Page App (SPA) Notes      Add instrumentation key to environments constants\n  Add the application insights npm dependency\n  Create a folder app\\shared if it does not already exist\n  Create logger.service.ts and use as a typescript wrapper around teh application insights javascript api\n Make sure you import what\u0026rsquo;s needed from ngCore    Add the MonitoringService to the app constructor\n  Add the MonitoringService Provider to the module .ts\n  By default, application insights will not track state based routing changes must enable for angular in object creation (i.e. near the instrumentation key)\n enableAutoRouteTracking: true // option to log all route changes    Possibly best placed to start in the app-start.service.ts\n  Track and trace (in any place you want to track such at app.componant.ts ngoninit())\n  SeverityLevel can be imported or just omit that line\n // Log a diagnostic scenario such entering or leaving a function this.appInsights.trackTrace({ message: 'App initialised at ' + new Date().toString(), severityLevel: SeverityLevel.Information });    Then query Application Insights Logs with the following\n traces | limit 50      Custom Error Handler must be implemented to catch exceptions (so they aren\u0026rsquo;t swallowed by Angular)\n  SDK Reference with valid configs\n  Extracting Business Value     Continuous Export from App Insights to SQL DB  "},{"id":4,"href":"/Azure/AppService/","title":"App Service","parent":"Azure","content":"Azure App Service    Setup App Service    Getting Started Doc\nMake Sure your App Service plan is set to the Free Tier\n Login to Azure and create new App Service Set the App Service to Free Tier (May have to turn off \u0026lsquo;Always on\u0026rsquo; if you already pushed your app)  Open VSCode Install the Azure App Service Extension Open the Extension and Authenticate with Azure Create a new .net Core project Push the the Azure App Service   "},{"id":5,"href":"/Azure/RandomAzureResources/","title":"Random Azure Resources","parent":"Azure","content":"Random Azure Resources     Best Practices for Scaling Cloud Developer Basics  "},{"id":6,"href":"/Books/ReccomendedReading/","title":"Reccomended Reading","parent":"Books","content":"Reccomended Reading    Learning     A Mind for Numbers by Barbara Oakley  "},{"id":7,"href":"/Books/WayOfRockWarrior/","title":"Way of Rock Warrior","parent":"Books","content":"Way of Rock Warrior    Key Tenants    Ego is killing you (no better / worse)    Real vs Phantom Fear    "},{"id":8,"href":"/DevOpsTools/Ansible/","title":"Ansible","parent":"DevOpsTools","content":"Ansible    Ansible is for the repeatable configuration of a server. Not for deploying the Virtual Machine, but configuring the machine once it is a running virtual machine. For the deployment of the VM see Vagrant\n"},{"id":9,"href":"/DevOpsTools/Vagrant/","title":"Vagrant","parent":"DevOpsTools","content":"Vagrant    vagrant is for virtuals\nVagrant is a utility for provisioning and managing virtual machine environments. It does not do the configuration \u0026lsquo;inside\u0026rsquo; the VM. See Ansible\nResources     Tutorials from Hashicorp Vagrant Cheetsheet  Basics     Define a Vagrantfile cd into the folder with the file run execution with vagrant up  check for existing storage pools\n virsh pool-list --all  "},{"id":10,"href":"/Fitness/MealPrepBasics/","title":"Meal Prep Basics","parent":"Fitness","content":""},{"id":11,"href":"/Fitness/NutritionBasics/","title":"Nutrition Basics","parent":"Fitness","content":"Nutrition Basics    Things I\u0026rsquo;ve learned about nutrition for fitness and how I apply them.\nMy Key Tenants    1. This is a Lifestyle    This is not a diet. It is a lifestyle. Things may ebb and flow as you adjust to meet certain goals, but you must find something that works for you long term. Not long enough to lose 10 pounds. Feed your soul occasionally (e.g. holidays and birthdays) but NOT every weekend.\n2. Make what you eat work for you    If you beat yourself up for every slip or \u0026lsquo;being bad\u0026rsquo; you will hate yourself and it will lead back to bad habits. Make the food you eat work for you. Even if it is traditionally \u0026lsquo;bad\u0026rsquo;, make is work. Use that carbs and fat from the donut to push through a lift. Use the calcium and protein from ice cream or a burger post workout to fulfill protein needs. Don\u0026rsquo;t make it a habit, but also don\u0026rsquo;t feel like eating things you enjoy means you \u0026lsquo;failed\u0026rsquo;. Failing is letting those choices defeat you and cause you to slide.\n3. Reduce Processed Wherever Possible    4. Eat your Vegetables    Resources     New PowerEating  Macros    I enjoy \u0026lsquo;If it fits your macros\u0026rsquo;. It isn\u0026rsquo;t for everyone, but it works for me because I like to expiriment and see how changing ratios makes me feel.\nIf it fits your macros breaks all foods down into Carbs, Fats, and Protein. You have a set target for each every day. Make sure you hit your protein and get close on the others (but not over).\nCarbs     4 Calories per Gram \u0026lsquo;Snacky\u0026rsquo; type food  rice bread chips carrots   Your body uses this first as energy so it\u0026rsquo;s good before a workout Carbs are not evil, you need them for a good workout  Fats    Protein    Overall 10 Goals    Formulas    Fat Burn    Strength Gain    Cutting    Maintainence    My Observations    Carbs and Fiber     Gram for Gram carbs are typically about the same amount of calorie density (e.g. white vs brown rice) the problem is more processed / less fiberous carbs fill you up less and release sugars faster. Choose fiberous for meals, snacks, and fat loss. Use less fiberous before a workout for digestion  Caffine     I love caffine, and it does good for me when timed correctly. I use it in the morning to get up and also about 30 minutes before a workout to help get a bit of energy boost Affects ability to sleep. Avoid at least 3 hours before bed.  Alcohol     Alcohol means double the calories. Your body uses it first and it is empty from any nutritional value. It also leads me to eating more than I should. Abstain or moderate wherever possible. Affects the brainwaves that allow you to get good sleep. You need to sleep well to build muscle. Avoid alcohol at least 3 hours before bed.  "},{"id":12,"href":"/Fitness/Recipies/QuickSnacks/","title":"Quick Snacks","parent":"Fitness","content":""},{"id":13,"href":"/Fitness/Recipies/StandardBreakfast/","title":"Standard Breakfast","parent":"Fitness","content":""},{"id":14,"href":"/Fitness/Recipies/ThaiChicken/","title":"Thai Chicken","parent":"Fitness","content":""},{"id":15,"href":"/Fitness/WorkoutBasics/","title":"Workout Basics","parent":"Fitness","content":"Workout Basics    Strength    Strength Curve Basics    Hypertrophy (Big vs Strong)    The \u0026lsquo;Big 3\u0026rsquo;    The \u0026lsquo;Super 6\u0026rsquo;    Cardio    Aerobic - I Can Breath     Maximum Aerobic Heart Rate  Anaerobic - I Can\u0026rsquo;t Breath    "},{"id":16,"href":"/Fitness/WorkoutRoutines/","title":"Workout Routines","parent":"Fitness","content":""},{"id":17,"href":"/Formatting/HowToMarkdown/","title":"How to Markdown","parent":"Formatting","content":"How to Markdown    Useful Markdown Links     MarkdownCheatSheet Full Markdown Guide Markdown Fireball   This is done This is Not Done :(  Code    Use for bits of code\nbit of code\nUse for lots of code (include language)\nLot of code Oh it\u0026#39;s a lot Images    Table       Assesment Q1 Q2 Q3     RT 1 1 2   ER 2 3 3   MM 1 2 2    In Document Links to Headers    The IDs are generated from the content of the header according to the following rules:\n All text is converted to lowercase. All non-word text (e.g., punctuation, HTML) is removed. All spaces are converted to hyphens. Two or more hyphens in a row are converted to one. If a header with the same ID has already been generated, a unique incrementing number is appended, starting at 1.  link\nThis is my Header    From time to time I have encountered a unique header which is converted into an ID in some non-obvious way. A quick way to work out the ID is to use your browser\u0026rsquo;s view source and/or inspect tools to view the HTML source code. For example, you might find the following HTML for your example:\n\u0026lt;h3 id=\u0026quot;1-this-is-my-header\u0026quot;\u0026gt;1. This is my Header\u0026lt;/h3\u0026gt;  Then just use the contents of the id attribute with a hash to link to that header: #1-this-is-my-header.\nLine Breaks    * * *\n********\n=====\n-----\n Link Appendix    Use reference links to almost create an appendix of links. See up at the top of the page to see these in action\n"},{"id":18,"href":"/Formatting/Pandoc/","title":"Pandoc","parent":"Formatting","content":"Pandoc    Overview of how I install and use Pandoc for Markdown -\u0026gt; whatever conversion.\nResources     Pandoc Docs Install Tex  Usage      Convert from markdown to format\n pandoc \u0026lt;file\u0026gt;.md -f markdown -t \u0026lt;destformat\u0026gt; -o \u0026lt;outputfilename\u0026gt;\u0026lt;.extension\u0026gt;    PDF Specific Conversion\n To convert to pdf, you\u0026rsquo;ll need to install tex (Loooong time) pandoc .\\PythonBasics.md -f markdown -t pdf -o ..\\pandoc_output\\Python.pdf --pdf-engine C:\\texlive\\2021\\bin\\win32\\pdflatex.exe    Website Idea     Markdown files / images are the backing When a commit occurs, files are pushed through pandoc to create static html files Updated files are pushed to a hosting app server Each page has a \u0026lsquo;download as - docx, pdf, pptx, etc.\u0026rsquo; link at the bottom When a download is requested the backing .md is pushed through pandoc, the file returned, and the output placed in cache When updates occur to the backing .md, cached download versions are invalidated Some sort of search index for the output  Link References    "},{"id":19,"href":"/HomeLab/BlogSetup/","title":"Blog Setup","parent":"HomeLab","content":"Blog Setup    Resources     Homebrew on Linux Installing Hugo Hugo Quickstart  Blog Stack Overview     Using Netlify Using Hugo Using Centos 8  Setting up Hugo    Install Homebrew to the computer\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; Add brew command to path\ntest -d ~/.linuxbrew \u0026amp;\u0026amp; eval $(~/.linuxbrew/bin/brew shellenv) test -d /home/linuxbrew/.linuxbrew \u0026amp;\u0026amp; eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) test -r ~/.bash_profile \u0026amp;\u0026amp; echo \u0026#34;eval \\$($(brew --prefix)/bin/brew shellenv)\u0026#34; \u0026gt;\u0026gt;~/.bash_profile echo \u0026#34;eval \\$($(brew --prefix)/bin/brew shellenv)\u0026#34; \u0026gt;\u0026gt;~/.profile Install hugo\nbrew install hugo Start with hugo\ncreate a new directory, create the site, and add the learn theme\nmkdir hugosite cd hugosite hugo new site quickstart cd quickstart cd themes git clone https://github.com/matcornic/hugo-theme-learn.git "},{"id":20,"href":"/HomeLab/BrainExtApp/","title":"Brain Ext App","parent":"HomeLab","content":"BrainExt Application    Resources     Gatsby Digital Garden (example) RoamSearch (example) Gitbook(Example) Everything I Know (Example)  His other page Learn-Anything    Potential Design     Frontend  Main Page with center content, sidebar on left side, top nav / search bar Sidebar has everything organized by folder / files Like the idea of the on-page graph to navigate by   Build Process  Build service to translate .md files into content Build service to create left side nav Build service to generate graph Appendix generator based on any links that are mentioned on pages   Backend  FE web app  Converted .md to html file static content (for center pane) Some way to update or respond to content   Downloader  click to download as pdf, txt, md, docx, pptx converted at runtime from pandoc, cached, invalidated when necessary   Backend Search Service  Search content for terms   Backend Graph Service  Discover relationships between content where mentioned in other documents  Don\u0026rsquo;t key on every single word, maybe key terms? discovered by bold or headers?       Mobile App Component  "},{"id":21,"href":"/HomeLab/HomeLabOverview/","title":"Home Lab Overview","parent":"HomeLab","content":"Home Lab Overview    Big Server     Dell PowerEdge t605  User Manual Specs  24 GB RAM 4 TB Disk Space 2 Quad Core Processors OS: Centos 7   Notes  Memory is not optimally configured, future state would be to get it in a good configuration Windows Server 2012 is installed on a disconnected HDD Need to install NTFS reader to read the other drives (onto Centos 7) Need to bring up the ethernet interface by default as part of startup   Starting Up  Plug her in Boot her up F1 past the memory warning nmcli d - get the ethernet interface sudo ifup \u0026lt;ethdevice\u0026gt; - Bring up the ethernet      Laptop     Dell Something or other  Specs  6 GB RAM 1 TB Disk OS: Centos 8 with Dual boot to Windows 10   Notes  Disk is starting to fail\u0026hellip; Battery is starting to fail\u0026hellip; Possible drive failure on 1.4 TB drive (/dev/sdb2) failure to mount and several async I/O errors      Networking     Main internet from ISP to ONT to Router is hardwire Internet from router to Centos 8 Laptop is wireless Centos 8 Laptop shares internet via Ethernet connected to 1 GB switch Big server connects to 1GB switch and receives internet via bridge from Centos 8 Laptop  Future ToDos \u0026amp; Notes     Want to setup the Raspberry Pi (when I can find it) as a small single node Want to setup K8s (full kubernetes) maybe start with K3s to get feet wet Hardwire Internet to Lab switch from router (Maybe use over cable connection? 2.5 GB max but just the two nodes (router and endpoint switch)) Run through the iCondors Linux Sysadmin Learning cirriculum Setup a larger K8s cluster with additional Raspberry Pi Find a way to host the BrainExt as a browseable and searchable website  "},{"id":22,"href":"/HomeLab/KubernetesServer/","title":"Kubernetes Server","parent":"HomeLab","content":"Kubernetes Server    Overview    Get my big server running Kernel Virtual Machines (KVM) so I can use it to host Kubernetes / Docker. This will be so I can spin things up / blow them away without a ton of reconfiguration, ton of Azure spend, or bunch of RaspberryPi\u0026rsquo;s (currently).\nI would like everything to be repeatable as much as possible (e.g. Ansible config or other) so the server isn\u0026rsquo;t a snowflake. Essentially, I would like to wipe the server and repeat if needed.\n Kubernetes Lab with KVM Github Repo for Above Install KVM on CentOS/RHEL 7 Vagrant on Centos Setup Bridge on Centos  Everything is derived from the above gitrepo\u0026hellip; but we\u0026rsquo;re revising it for Centos as we go\nWe\u0026rsquo;re going to be converting this from Ubuntu to Centos Usage\u0026hellip;OFC\u0026hellip; LFG!\n  k8s-kvm    Upstream Kubernetes via KVM Vagrant and Ansible\nProject purpose    Create a \u0026ldquo;real\u0026rdquo; Kubernetes cluster on commodity hardware you might already have at home or in the lab. A lot of folks need something more substantial than than Mikiube ie distinct hosts for the control plane and worker nodes, but don\u0026rsquo;t want to pay for the cloud all day long when using the cluster a few times a month.\nAbout    KVM is highly efficient allowing for a \u0026ldquo;real\u0026rdquo; kubernetes cluster to run on a single machine given a decent bit of CPU and RAM\nThis installation is targeted for a bare metal install on a machine hooked into a lab or home network.\nThe master and worker nodes will have ip addresses on your network. This will allow you to interact with it like its a \u0026ldquo;real\u0026rdquo; cluster.\nThe cluster can be destroyed and created again easily as the networking configuration, Vagrantfile, and Ansible playbook only need to be configured once.\nPre-install requirements    Pick some hardware    A bare metal machine (the kind that will hurt you if you kick it barefoot). Do yourself a favor and plug it into a physical network too (using a cord).\nAn old workstation with multiple sockets is great (I used an seven year old Z600). A NUC with 32GB RAM will do as well.\nMake sure you have at least 4 cores (not threads) and preferably more than 16GB RAM. (16 will work, but just run two worker nodes). Used hardware is great for this project.\nLastly do a fresh OS install. NOT Tested with Ubuntu 18.04. Now with Centos 7!\nIdentify a block of contiguous free ip addresses.    Kubernetes is IP address hungry, so make sure you have some on your network.\nOne is needed for the master and must end in 0. Then one for each worker node starting with 1. In the example I used 192.168.11.120 through 192.168.11.123 for a total of four addresses.\n Install dependencies for KVM    Add Additional Releases Channel\nsudo yum install epel-release Install Python3\nsudo yum install python3 Install dependencies for headless KVM on CentOS 7\nyum install qemu-kvm libvirt libvirt-python libguestfs-tools virt-install virt-manager bridge-utils Install Vagrant and libvirt plugin\nNote : if this vagrant bug is still open you\u0026rsquo;ll need to use one of the resolution steps in the comments to get the vagrant-libvirt to work\nsudo yum install -y yum-utils sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo sudo yum -y install vagrant gcc libvirt-devel libxml2-devel make ruby-devel gcc-c++ libstdc++-devel systemctl enable --now libvirtd vagrant plugin install vagrant-libvirt Install git\nyum install git Install Ansible\nyum install ansible  Pull down the Ansible Files From Github    Perform a clone from the github repo\nmkdir /home/\u0026lt;uname\u0026gt;/Labfiles cd /home/\u0026lt;uname\u0026gt;/Labfiles git clone https://github.com/talbotfoundry/k8s-kvm.git cd k8s-kvm  Start Up and Verify KVM    Start the libvirtd service\nsystemctl enable libvirtd systemctl start libvertd Verify KVM Loaded with lsmod and grep\nlsmod | grep -i kvm Validate hardware with a virt host validation. Investigate any FAIL\nvirt-host-validate If you fail on the /dev/kvm exists\n verify you installed virt-manager double verify virtualization is enabled for the CPU in the bios  If you fail on \u0026lsquo;load the fuse module\u0026rsquo;\n yum reinstall fuse -y sudo modprobe fuse  Verify network bridge\nbrctl show virsh net-list Attempt to intall the virtual machine\nvirt-install \\ --virt-type=kvm \\ --name centos7 \\ --ram 2048 \\ --vcpus=1 \\ --os-variant=centos7.0 \\ --cdrom=/var/lib/libvirt/boot/CentOS-7-x86_64-Minimal-1708.iso \\ --network=bridge=br0,model=virtio \\ --graphics vnc \\ --disk path=/var/lib/libvirt/images/centos7.qcow2,size=40,bus=virtio,format=qcow2  Create a bridge    Create a file called \u0026ldquo;ifcfg-br0\u0026rdquo; in \u0026ldquo;/etc/sysconfig/network-scripts\u0026rdquo;\nnano /etc/sysconfig/network-scripts/ifcfg-br0 Place the following in the file\nDEVICE=\u0026quot;br0\u0026quot; BOOTPROTO=\u0026quot;static\u0026quot; IPADDR=\u0026quot;10.42.0.56\u0026quot; NETMASK=\u0026quot;255.255.255.0\u0026quot; GATEWAY=\u0026quot;10.42.0.1\u0026quot; DNS1=\u0026quot;10.42.0.1\u0026quot; ONBOOT=\u0026quot;yes\u0026quot; TYPE=\u0026quot;Bridge\u0026quot; NM_CONTROLLED=\u0026quot;no\u0026quot; determine the adapter you want to use for bridging\nnmcli d\nidentify an adapter with network connection (e.g. enp9s0)\nnano /etc/sysconfig/network-scripts/ifcfg-enp9s0\nAdd content\nDEVICE=enp9s0 TYPE=Ethernet BOOTPROTO=dhcp ONBOOT=yes NM_CONTROLLED=no BRIDGE=br0 Restart the network\nsystemctl restart network\nDouble check everything with ifconfig the server will now be communicating over the br0 interface and nmcli d will show the device as \u0026lsquo;unmanaged\u0026rsquo; since we set NM_CONTROLLED=no\nInstallation    KVM needs to run as root, so go ahead and make yourself root\nChange the network prefix to the free address block you chose    Open Vagrantfile with your favorite text editor.\ncd cd /home/\u0026lt;uname\u0026gt;/Labfiles/k8s-kvm nano Vagrantfile edit the following line. Make sure you choose a network block that\u0026rsquo;s good on your network.\nNETWORK_PREFIX=\u0026quot;192.168.11.12\u0026quot; Edit alloted resources if desired    Also in Vagrantfile.\nThe number of worker nodes can be changed by editing the following line. Total number of nodes will be the number of workers selected plus a master. Two or three is recommended.\nNUM_NODES = 3 You change the allotted number of CPU cores and memory. Be sure not to overallocate.\n config.vm.provider :libvirt do |libvirt| libvirt.cpus = 2 libvirt.memory = 4096 Run Vagrant    sudo vagrant up Note if you are using KVM, and have the vagrant libvert plugin installed, you may still get the libvirt provider not found error on vagrant up / halt if you forget to sudo. That\u0026rsquo;s because the libvirt plugin is only installed in the sudo context (e.g. run vagrant plugin list vs sudo vagrant plugin list)\nYour virtual machines should be created. It may take several minutes to download the image the first time, but it\u0026rsquo;ll cache it in case you wish to rebuild the cluster.\nto later stop your cluster run\nsudo vagrant halt If You get any screwy messages about image pool conflicts, try running:\nvirsh pool-destroy images virsh pool-delete images virsh pool-undefine images Configure hosts for ansible    Get Ips for the VMs\nvirsh net-list virsh net-info default virsh net-dhcp-leases default Look at this https://serverfault.com/questions/627238/kvm-libvirt-how-to-configure-static-guest-ip-addresses-on-the-virtualisation-ho\nEdit hosts file Make sure it has the correct ip address for the master starting with the ip address block you chose\nEach node is an incrment of 1 from the master. Add or delete worker nodes as needed depending on how many you chose.\n[kube-masters] master1.kube.local ansible_host=192.168.11.120 [kube-nodes] worker1.kube.local ansible_host=192.168.11.121 worker2.kube.local ansible_host=192.168.11.122 worker3.kube.local ansible_host=192.168.11.123 [ubuntu:children] kube-masters kube-nodes Run ansible    This step takes several minutes even on a powerful host. Initializing a kubernetes cluster is a non-trivial task.\nYou can run the tasks seperately recommended for first time:\nansible-playbook -i hosts bootstrap.yml ansible-playbook -i hosts kube-masters.yml ansible-playbook -i hosts kube-workers.yml Or run them all together\nansible-playbook -i hosts kubernetes.yml NOTE: you will have to type \u0026ldquo;yes\u0026rdquo; several times as prompted to accept the rsa fingerprint for ssh! Do it quick or its easy to get lost in the console\nOutput should look something like:\nPLAY RECAP *********************************************************************************************************************************************** master1.kube.local : ok=24 changed=19 unreachable=0 failed=0 worker1.kube.local : ok=19 changed=16 unreachable=0 failed=0 worker2.kube.local : ok=19 changed=16 unreachable=0 failed=0 worker3.kube.local : ok=19 changed=16 unreachable=0 failed=0 SSH to the master node    ssh kube@192.168.11.120\nChange the ip address to whatever you made the master. The default username / password is kube / kubernetes\nAdd kubernetes network plugin    kubectl get nodes The nodes will show not ready until you install a network plugin.\nkubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.11.0/Documentation/kube-flannel.yml Smoke testing cluster    kubectl get nodes kubectl create deployment nginx --image=nginx kubectl create service nodeport nginx --tcp=80:80 kubectl describe service nginx Rebooting the cluster    Building the VM\u0026rsquo;s with KVM and using a host bridge allows the cluster to be torn down and brought back up quite easily. This is great when you want to start fresh.\nKill the old cluster    Destroy VM\u0026rsquo;s through Vagrant vagrant destroy\nKill the host ssh key fingerprint cache rm ~/.ssh/known_hosts\nMake the cluster again    Run the vagrant up command\nRun ansible again\nInstall Kubernetes networking\nHousekeeping items    Setup kubectl on your machine    Grab the config and keys from the .kube/config file in the kube user\u0026rsquo;s home directory on the master. Add them to the .kube/config file on your machine with kubectl.\nCheck the status of your VM\u0026rsquo;s    root@z600:~/k8s-kvm# virsh list --all Id Name State ---------------------------------------------------- 1 k8s-kvm_worker-3 running 2 k8s-kvm_worker-1 running 3 k8s-kvm_worker-2 running 4 k8s-kvm_master1 running "},{"id":23,"href":"/Ideas/ShrugGuyApi/","title":"Shrug Guy API","parent":"Ideas","content":"ShrugGuyApi    Thoughts     Api to provide ShrugGuy Azure App Service Return a Shrug in html, json Add other ascii memes in other formats Add other content / pic / gif Add a /random option Add an option to get random based on mood Upload and get back sentiment of meme  Architecture    Web Queue Worker "},{"id":24,"href":"/Ideas/TransferStuff/","title":"Transfer Stuff","parent":"Ideas","content":"Transfer Stuff    Overview    How to move stuff from one place to another\nHugging Face    git bash\ncd d: cd workspaces mkdir huggingface git clone https://huggingface.co/repo D:\\\\workspaces\\\\huggingface\\\\reponame --depth 1  \u0026ndash;depth 1 is to save bandwidth and copies default main / master. Use \u0026ndash;branch \u0026lt;name\u0026gt; to otherwise specify\nScan, zip, transfer\nR Packages    from R-Studio on an internet connected computer\u0026hellip;\n\u0026gt;getPackages \u0026lt;- function(packs){ packages \u0026lt;- unlist( tools::package_dependencies(packs, available.packages(), which=c(\u0026quot;Depends\u0026quot;, \u0026quot;Imports\u0026quot;), recursive=TRUE) ) packages \u0026lt;- union(packs, packages) packages } packages \u0026lt;- getPackages(c(\u0026quot;packagename\u0026quot;)) download.packages(\u0026quot;packagename\u0026quot;, destdir=\u0026quot;C:\\\\users\\\\harrisal\\\\tidyverse_packages\u0026quot;,type=\u0026quot;win.binary\u0026quot;) download.packages(packages, destdir=\u0026quot;C:\\\\users\\\\harrisal\\\\tidyverse_packages\u0026quot;, type=\u0026quot;win.binary\u0026quot;)  save all the packages, move them to isolated computer then run R-Studio\nsetwd(\u0026quot;path/packages/\u0026quot;) #set the working directory to the path of the packages pkgs \u0026lt;- list.files() install.packages(c(print(as.character(pkgs), collapse=\u0026quot;\\\u0026quot;,\\\u0026quot;\u0026quot;)), repos = NULL, type = \u0026quot;win.binary\u0026quot;)  if you cannot run as admin then run something like the following\ninstall.packages(c(print(as.character(pkgs), collapse=\u0026quot;\\\u0026quot;,\\\u0026quot;\u0026quot;)), repos = NULL, type = \u0026quot;win.binary\u0026quot;, lib=c:\\\\users\\\\harrisal\\\\mypackages)  then copy all folders in mypackages to the rstudio folder (e.g. \\R\\win-library\\4.0)\nSpacy      Use pip download\n pip download https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.0.0/en_core_web_sm-3.0.0-py3-none-any.whl pip download https://github.com/explosion/spacy-models/releases/download/en_core_web_md-3.0.0/en_core_web_md-3.0.0-py3-none-any.whl https://github.com/explosion/spacy-models/releases/download/en_core_web_lg-3.0.0/en_core_web_lg-3.0.0-py3-none-any.whl https://github.com/explosion/spacy-models/releases/download/en_core_web_trf-3.0.0/en_core_web_trf-3.0.0-py3-none-any.whl   "},{"id":25,"href":"/InterviewPrep/00-StudyPlan/","title":"00 Study Plan","parent":"Interview Prep","content":"Study Plan    Overview    Leet Code Daily - Hacker Ranker\n System Design - 2 weeks (July 1 - 18)  Overview Topics Interview Question Steps Back of Envelope Calculation Scalability for Dummies High Level Tradeoffs Consistency Patterns Availability Patterns Non-Abstract Large System Design Distributed System Patterns Batch Computational Patterns DNS CDN Load Balancer Reverse Proxy Application Layer Database Cache Asynchronism Communication Security Non-Abstract Large System Design Possibly separate this into a separate section also (distributed systems)   Linux - 3 weeks (July 19 - August 7)  Shell CentOS Signals   Cloud Interview - 2 Weeks (August 9 - 20)  Concepts Azure Tools AWS Tools   Leet Code - 2 weeks (August 23 - September 3)  Practice Practice Practice   Algos / Data Struts - 2 weeks (August 23 - September 3)  Concepts Big-O Arrays and Strings Linked Lists Stacks and Queues Trees and Graphs Common Search Algorithms Recursion and Backtracking   DevOps - 1 Week (September 6 - 11)  Concepts / Operational Excellence Kubernetes Docker CI/CD Jenkins Ansible Vagrant   Networking Refresher - 1 week (September 13 - 18)  TCP/IP Common Ports and Protocols \u0026ldquo;What Happens When\u0026hellip;\u0026rdquo; Common Network Troubleshooting / Tools Common Network Topologies Practice Network Questions   Databases - 1 Week (September 20 - 25)  SQL Review No SQL DBs RDBMS and Other types of databases Database Reliability Engineering and Database Internals   Review / Practice Qs - 2 Weeks (September 26 - October 6)  Flash Cards Cheat Sheets Organize Notes    Job Hunt!\nHow to Study    Derived from Retaining Computer Science Knowledge\n Watch a few hours of videos / reading Implement the Algos, Data Struts, and Concepts Take Notes / Make flash cards for the important bits Move on to the next topic Reivew the flash cards / nottes laters After a few days go back and watch a short video on the old topic after another week watch a video about the old topic Keep reviewing flash cards / notes  Repetition is key, not reinforcing what you just learned\nGo back through all notes and turn them into flash cards\nPossibly look at Anki\n"},{"id":26,"href":"/InterviewPrep/01-SystemDesignInterview/","title":"01 System Design Interview","parent":"Interview Prep","content":"System Design     Remember Everything is a Tradeoff\n Contents     Resources Interview Question Steps Back of the Envelope Calculations Scalability for Dummies High Level Tradeoffs to Remember Non-Abstract Large System Design Important Tools to Know  Resources     System Design Primer Please stop calling databases CP or AP Transactions Across Datacenters How Google Serves Data From Multiple Datacenters Google Pro Back of Envelope Calculations Palantir - How to rock a systems design interview Numbers every programmer should know Powers of two table What Happens When\u0026hellip; SRE Cheat Sheets Distributed Systems Primer by Loyola SRE Flash Cards How to get into SRE My Path to Site Reliablity Management Google Book - Non Abstract Large System Design Big O Cheat Sheet You\u0026rsquo;re Doing it Wrong (server performance rethought) Scaling Instagram Infrastructure (video) Scalability, availability, stability patterns (slideshare) DNS Architecture 10 Scalable System Design Patterns No SQL Patterns BigTable Model with Cassandra and HBase NGINX Guide to Designing for Scale HAProxy Architecture Guide   Interview Question Steps    1. Outline Use Cases, Constraints and Assumptions [5-mins]     who are the users? how will they use? how many users? what will the system do what are the inputs and outputs how much data how many requests per second read to write ratio Usage Patterns  2. Estimations [5-mins]     Throughput (QPS for read and write queries) Latency expected from the system (for read and write queries) Read / Write Ratio Traffic Estimates  Write (QPS, Volume of data) Read (QPS, Volume of data)   Storage Estimates Memory estimates  if using a cache, what is the kind of data we want to store in cache How much RAM and how many machines do we need Amount of data you want to store in disk / ssd    3. Design Goals [5-mins]     Latency and Throughput requirments Consistency vs Availability  Weak / Strong / eventual -\u0026gt; Consistency Failover / Replication -\u0026gt; Availability    4. High level design [5-10 mins]     APIs for Read / Write scenarios for crucial components  Public APIs Private APIs   Database Schema Basic Algorithm High level design for Read/Write Scenario  5. Deep Dive [15 - 20 mins]      Scaling the algorithm\n  Scaling individual components\n Availabiity, Consistency and Scale story for each component Consistency and availabilty patterns    Think about following and how they would fit\n DNS CDN [Push Pull] Load Balancers [Active-Passive, Active-Active, Layer 4, Layer 7] Reverse Proxy Application Layer Scaling [Microservices, Service Discovery DB [RDBMS, NoSql]  RDBMS  Master-Slave, Master-Master, Federation, Sharding, Denormalization, SQL Tuning   NoSql  Key-Value, Wide-Column, Graph, Document Fast Lookups  RAM [Bounded Size] -\u0026gt; Redis, Memcached AP [Unbounded Size] -\u0026gt; Cassandra, RIAK, Voldemort CP [Unbounded Size] -\u0026gt; HBase, MongoDB, Couchbase, DynamoDB       Caches  Client Caching, CDN caching, Webserver caching, Database caching, Application caching, Cache @ Query level, Cache @Object LLevel Eviction policies  Cache aside Write Through Write Behind Refresh ahead     Asychronism  Message Queues Task Queues Backpressure   Communication  TCP UDP REST RPC      6. Justify [5-minutes]     Throughput of each layer Latency cacuse between each layer Overall latency justification  Bonus: Show back of the envelope calculations\n Back of the Envelope Calculations    Numbers Everyone Should Know\n L1 cache reference 0.5 ns Branch mispredict 5 ns L2 cache reference 7 ns Mutex lock/unlock 100 ns Main memory reference 100 ns Compress 1K bytes with Zippy 10,000 ns Send 2K bytes over 1 Gbps network 20,000 ns Read 1 MB sequentially from memory 250,000 ns Round trip within same datacenter 500,000 ns Disk seek 10,000,000 ns Read 1 MB sequentially from network 10,000,000 ns Read 1 MB sequentially from disk 30,000,000 ns Send packet CA-\u0026gt;Netherlands-\u0026gt;CA 150,000,000 ns  Keys about the numbers\n Memory is fast and disks are slow Even just cheap compression can save a lot of bandwidth Writes are 50 times more expensive than reads Architect for scaling writes Optimize for low contention Optimize wide. Make writes as parallel as you can   Scalability for Dummies    1. Clones    Overview     Every server contains the same codebase and does not store user related data Sessions need to be stored in a centralized data store  external database external persistent cache    2. Database    Database     After app grows and starts to get slower you can  (not great) Stick with same sql (e.g. MySQL) let is grow and start trying things like master-slave and upgrading RAM and sharding / denomalizing (better) denormalize from the start, no more joins in any database query. Use mysql like NoSQL or switch right away to nosql    3. Caches     Caches like Memcached and Redis Key value store as a buffering layer between application and storage  App should try to read from here first    Cache Patterns     Cached Database Queries   Most common used caching pattern Hash of query is key, value is returned value First check is in cache Hard to delete a cached result when you cache a complex query, when one piece of data changes you have to delete all cached queries who may contain cell  Cached Objects   Newer and recommended See your data as an object Let your class assemble a dataset from your database and store instance of the class in the cache Once a data object is assembled, store it directly in the cache (data array or better yet the object) Rid the object when something changes Worker processes can assemble the object and application never directly touches the database Good Objects to cach  User Sessions Fully rendered blog articles Activity streams User \u0026lt;-\u0026gt; friend relationships    Cache Types     Redis  allows for persistence and built in data structures with cleverness can use to completely remove a database   Memcached  better if just need a cache easy to setup and easy to scale    4. Async    Asynchronism allows work to be done bit by bit rather than waiting for the whole completed product to be dropped at once\nAsync Paradigms     Turn dynamic content into static content   Pages are pre-rendered and stored as static HTML Static pages can be stored to CDN to handle scale very well  Special requests can not be pre-rendered  user hits page and a request is sent to a job queue for work. User is shown loading signal. The frontend constantly checks for completed job and pulls content when ready    Async Tips     Look at RabbitMQ Look at Redis List Look at ActiveMQ Basic idea is to have a queue of tasks or jobs that a worker can process If you do something time-consuming try to do it asynchronously   High Level Tradeoffs to Remember    Performance vs Scalability      Scalable = performance increases proportional to resources added\n Can refer to serving more work or handling larger units of work (e.g. data)    If you have a performance problem, sthe system is slow for one user\n  If you have a scalability problem it is slow under load\n  Latency vs Throughput     Latency = time to performa an action Throughput = number of actions per unit of time Aim for max througput with acceptable latency  Availability vs Consistency    CAP Theorem You can pick 2 of the 3\n Consistency - Every read receives the most recent write or an err Availability - Every request receives a response, without guarantee it contains most recent information Partition Tolerance - System continues to operate despite arbitrary partitioning due to network failures  You can\u0026rsquo;t chose CA, Networks are unreliable\nSome Systems are not CP or AP\n CP - consistent and partition tolerance  waiting for a response might result in timeout. CP is good for atomic reads / writes example: MSSQL(sometimes), MariaDB, MySql(sometimes)   AP - Availability and Partition tolerance  Responses return most readily available version. Eventually consistent. example Cassandra     Consistency Patterns    Weak Consistency    After a write, reads may or may not see it\n uses  VoIP Realtime Multiplayer    Eventual Consistency    After a write, reads will eventually see it. Asynchronous Replication\n Uses  DNS, Email, Highly Available Systems    Strong Consistency    After a write, reads will see it. Data replicated synchronously. Across datacenters, multi-write is a better option but costs in latency\n Uses  RDBMSes Transactional DBs     Availability Patterns    Fail-over and Replication are complimentary\nFailover     Active Passive  one primary and one in hot standby (SQL AG) Changes are typically replicated as part of the replication log / change stream when the heartbeat goes away the standby takes over length of downtime determined by failover time You can see data loss depending on the replication pattern   Active-Active  both servers managing traffic with load balancera Could potentially lead to inconsistent state Also referred to as multi-master    Replication     Single-Leader  Single writable reader with follower(s) Asynchronous = leader does not wait for followers to catch up before considering actions a success  More risk of data loss if leader crashes Crashing / latent follower won\u0026rsquo;t block writes   Synchronous = action must be successful on follower before leader considers change successful  Less risk of data loss if leader crashes A lagging or unresponsive follower can block writes   You can have multiple followers some synchronous and others async   Multi-Leader  more than one node can accept writes Does not make sense for single data center Does make sense with multi-data center Pros  better write performance for users closer to far data center Tolerant of data center outages tolerant of network problems   Uses  Clients with offline communication (every device has local db) Collaborative editing (google docs)   Biggest con, have to handle for write confllicts  conflict avoidance (e.g. user assigned a datacenter) Convergence (e.g. last write wins) Resolve on read or resolve on write     Leaderless  All Nodes are Writeable  Cassandra Voldemort   Writes sent to multiple nodes Reads are sent to multiple nodes  used to detect and correct nodes with stale data   Multi-Datacenter  Writes sent to all nodes but client only waits for concensus from local datacenter       Non-Abstract Large System Design     Distributed System Patterns    Derived from Azure Designing Distributed Systems\nMicroservices     Multi-Node Distribued architectures Contrasted to Monolithic Systems Typically communicating over a defined API Benefits  Reliability Agility (quick and frequent deployments) Reduced team size Reliable API contracts remove need for tight synchronization Better Scaling   Downsides  Loosely coupled system can be difficult to debug Difficult to design and architect   Benefit from using well known patterns  Single Node Patterns     SideCar Pattern  Sits on the side of an existing application Extends functionality, sometimes transparently to the application Creeping legacy app or extension app (e.g. add https)      Ambassador Pattern\n Helps to adapt existing application to sharded backend The application code only knows it needs to talk to storage which it finds (ambassador) the ambassador then performs the necessary sharding Service Brokering is the act of having the ambassador introspect the environment and find appropriate service to connect Experimentation / Request Splitting can be handled by the ambassador (e.g. a/b testing)    Adapters\n adapter is used to modify the interface of the application container so it conforms to a predefined interface expected of all applications Can ensure application implements a consistent monitoring interface To effectively monitor and operate you need common interfaces Applows deployment of a single tool that uses this interface Useful for monitoring applications    Multi-Node Patterns     Replicated Load Balanced Services  **Stateless ** load balanced systems  static content middlewhare systems that aggregate responses   Session Tracked load balanced system  typically done via consistent hashing function (to account for node scaling) Deploy Cache using Sidecar Pattern is option but uses a lot of memory   provide redundancy and scale Need at least 3 nodes (2 replicas) for \u0026lsquo;Highly Available\u0026rsquo; Ability to horizontally scale Should have some type of health / Readiness probe     Sharded Services  Different requests go to different services Commonly used for sharding cache serving but useful for any service where more data needed than can fit on sigle machine     Scatter Gather Pattern  parallelism by servicing requests to different nodes then pulling the values back together With Root Distribution  User request to root App node Shards request to leaves Requests pulled back by root node and served back to user (e.g. Document search with Elastic Search)       Batch Computational Patterns     Work Queue Systems  simplest batch processing perform each piece of work processed within a certain period of time Worker nodes and queue manager node Can allow for dynamic scaling of workers     Event Driven  Chains the output of one queue to the input of the next queue Need an overall blueprint for how different event queues relate to each other Copier  Take single stream of work and dupllicate it multiple pieces of work to be done on same item   Filter  reduce stream to a smaller stream of work filter out items that don\u0026rsquo;t meet criteria   Splitter  sends different inputs to different queues   Sharder  divide a single queue into an evenly divided collection of work   Merger  turn multiple work queues and turn them into a single work queue       DNS (Domain Name System)    DNS Overview     DNS is how a device determines an IP address from a URL (i.e. website.com -\u0026gt; 22.12.2.12 ) Hierarchical, if the DNS server you query does not know, it will ask up a level Lower level servers will cache requests which can become stale. Staleness is determined by TTL (Time to Live)  Common DNS Record Types     A Record (address) - Most common, points a FQDN (Fully Qualified Domain Name) to IP address CNAME Records (canonical) - Points a name to another name (Like an alias) NS Record (Name Server) - Specifies the DNS server for your domain MX Record (Mail Exchange) - Specifies mail servers for accepting messages  DNS Services     Weighted Round Robin  send traffic to different servers   Latency-based Geolocation-based  DNS Costs     Accessing DNS introduces a delay, which is why results are cached DNS server managment is comples DNS services can come under attack   CDN (Content Delivery Network)    CDN Overview     Globally distributed network of proxy servers serving content from close to the user Generally static such as html, photos, videos, etc. Site DNS typically gets user to a CDN Users Receive data faster and less strain on App Servers  Push CDNs     Receive new content whenever changes occur You must expire content Works best for sites that do not change often or have small sets of data Uses a lot of data on the CDN  Pull CDN     Leave your content on the server until the first user requests the content You leave content on your server and rewrite URLs to point to the CDN Request is slower until content is cached on CDN TTL tells CDN when to pull again Pull CDNs minimize storage but can create redundancy Heavy traffic load sites work better with pull CDNs  CDN Disadvantages     CDN costs can be significant Content may become stale based on TTL CDNs require changing URLs for static content before Pointing to CDN   Load Balancers    Load Balancers Overview     Load balancers distribute incoming client requests to computing resources (e.g. applications and databases) Standard use case for Horizontal scaling Returns the response from the computing resource to the appropriate client Can be implemented with hardware, software, or cloud service Typically configured as multiple, either in active-passive or active-active  Load Balancer Effectiveness     General Benefits  Prevent requests from going to unhealthy servers Preventing overloading a single server (depending on balancing type) Help reduce single points of failure   Type dependant benefits  SSL termination - Decrypt incoming requests and encrypt responses so the operation does not have to be performed by backend servers (expensive action) and reduces the locations that SSL certificates need to be installed Session Persistence - Issue cookies and route a specific client request to the same instance    Load Balancer Algorithms     Random Least Loaded Session/cookies Round Robin Weighted Round Robin  Layer 4 Load Balancer     Only look at the transport layer to distribute packets (source / destination IP, and port information) Forward packets to and from upstream server performing Network Address Translation (NAT)  Layer 7 Load Balancer     Look at application layer to distribute traffic Can examine header, message, cookies, etc Terminate network traffic -\u0026gt; read message -\u0026gt; makes a LB decision -\u0026gt; opens a connection to the selected server Could direct video traffic to video servers or billing traffic to billing servers Can perform path sensitive redirection  Load Balancer Trade-Offs     Scaling horizontally introduces complexity  servers should be stateless: no user specific data Sessions will need to be stored in a centralized data store (SQL, NoSQL) or persistent cache (Redis, memcached) Downstream servers (e.g. caches and databases) will need to handle more connections as upstream servers scale out   LB can become a bottleneck or single point of failure Increased complexity  "},{"id":27,"href":"/InterviewPrep/02-LinuxInterview/","title":"02 Linux Interview","parent":"Interview Prep","content":"Linux Interview Study Guide    Resource     Linux HackerRank  Common Commands and Purpose    Bash    "},{"id":28,"href":"/InterviewPrep/03-CloudInterview/","title":"03 Cloud Interview","parent":"Interview Prep","content":"Cloud Interview    General    AWS    Azure    "},{"id":29,"href":"/InterviewPrep/04-LeetCode/","title":"04 Leet Code","parent":"Interview Prep","content":"Leet Code    Resources     HackerRanker Interview Prep Kit  Every Day!   Two Pointer Technique Cracking Coding Skills (Cheat Sheet) Soft Skills (Cheat Sheet) Cracking Google Interview Prep (Blog)  Overview     Use a dynamic programming language. My choice is Python  Maybe shake the rust off Java and C# just to say be able to \u0026lsquo;hello world\u0026rsquo; Would love to use PowerShell instead\u0026hellip; but oh well   Prioritize simplicity and readability over performance first then Optimize  Interview Overview      Different errors matter differently\n linkedlist.add() vs linkedlist.insert()  Not as bad, just means you don\u0026rsquo;t use linkedlist methods all the time   Mistaking = and ==  Bad, you don\u0026rsquo;t code often. Mistaking assignment vs comparison      Practice Whiteboard coding with someone in the room\n  If you notice you are quiet, take a step back and say your thought proccess, otherwise the interviewer may try to give you a hint\n  Say something, even if it is just mumbles\n  7 Steps to Solving Algorithm Problems     Listen Example Brute Force Optimize Walk Through Implement Test  STAR Method    Situation     Background and context Understand the problem  Task     Describe the problem and challenges Describe brute force solution  Action     Do the work Explain what you did  Results     State benefits, value, Big O, etc. State possible improvments  "},{"id":30,"href":"/InterviewPrep/05-Algos_DataStructs/","title":"05 Algos Data Structs","parent":"Interview Prep","content":"Algos and DataStructures    Resources     Big-O Simple Explanation  General Algorithmic Concepts    Big O    Space and time complexity of a solution as the input (n) gets larger. The \u0026lsquo;Worse Case\u0026rsquo;\nMulti-Part Algorithms     Multiply Big O when you do x for each y  Nested for loops Double Loop with complexity of O(n) each is a total of O(n*n) = O(n^2)   Add Big O when you do this then that  Do one thing after the other Sort the array O(n log n) then traverse O(n) is O((n log n) + n) = O(n log n)    O(1) - Constant Time     constant time to run algorithm Math equations Print statements Hash access  O(n) - Linear Time     Time increases at same pace as input foreach, map, and reduce  O(log n) - Logarithmic Time     Running time in proportion to the Log of the input size run time barelly increases as you exponentially increase the input Binary Search  O(n log n) - Asymptotic Time Complexity     when you need to do work O(log n) for each item building perfectly balanced binary tree or traversing a binary tree Mergesort / quicksort  O(n^2) - Quadratic Time     Time is squared size of the output commonly double loop Bubble Sort  Arrays and Strings    Hash Tables     Map key to value for efficient lookup Hashes the key into a code (int) Map the code (int) into an array index then use for lookup At each index is a linked list of values Assumed that lookup runtime is O(1) but high collision could theoretically be as high as O(n)  Array List     Resizable array Insertion is O(1) so inserting n items is O(n)  Strings     Immutable string copy can have bad performance Mutable strings or Stringbuilder is a better performance option  Linked Lists    Overview     Sequence of nodes Singly Linked - each node points to the next Doubly Linked - each node points to the next and the previous You can add and remove items from the start and end of list in constant time  Singly Linked List Example in Python    class Node: def __init__(self, data): self.data = data self.next = None def append(self, data): end = Node(data) currentNode = self while (currentNode.next != None) : currentNode = currentNode.next currentNode.next = end def express(self): print(self.data) Runner Technique     iterate through the linked list with two pointers simultaneously fast node and slow node  Recursive Problem     a number of linked list problems rely on recursion if you have problems solving a linked list problem, ctry exploring if a recursive approach will work  Stacks and Queues    Trees and Graphs    Common Search Algorithms    Recursion and Backtracking    "},{"id":31,"href":"/InterviewPrep/06-DevOpsInterview/","title":"06 Dev Ops Interview","parent":"Interview Prep","content":"DevOps Interview    Reading     Highly Effective Environments and Case Studies  Monitoring    Signals     Googles 4-Golden Signals  Latency Traffic Errors Saturation   RED  Rate Errors Duration   USE  Utilization Saturation Errors    OKR    Objectives and Key Results\n"},{"id":32,"href":"/InterviewPrep/07-Networking/","title":"07 Networking","parent":"Interview Prep","content":"Networking    Resources     Digital Ocean Networking Tutorials Primer to Computer Networking TCP/IP Illustrated Cloudflare Learning Center  "},{"id":33,"href":"/InterviewPrep/08-Databases/","title":"08 Databases","parent":"Interview Prep","content":"Databases    Resources     SQL HackerRank  "},{"id":34,"href":"/InterviewPrep/09-Review/","title":"09 Review","parent":"Interview Prep","content":""},{"id":35,"href":"/InterviewPrep/10-GeneralInterview/","title":"10 General Interview","parent":"Interview Prep","content":"General Interview    Resources     How to pass the engineering interview in 2021 Interview Cake (Programming Interview Tips)  "},{"id":36,"href":"/InterviewPrep/Extras/Checklist/","title":"Checklist","parent":"Interview Prep","content":""},{"id":37,"href":"/InterviewPrep/Extras/coding-interview-university/","title":"Coding Interview University","parent":"Interview Prep","content":"Copy Pastad from https://github.com/jwasham/coding-interview-university for ease of use    Coding Interview University     I originally created this as a short to-do list of study topics for becoming a software engineer, but it grew to the large list you see today. After going through this study plan, I got hired as a Software Development Engineer at Amazon! You probably won\u0026rsquo;t have to study as much as I did. Anyway, everything you need is here.\nI studied about 8-12 hours a day, for several months. This is my story: Why I studied full-time for 8 months for a Google interview\nThe items listed here will prepare you well for a technical interview at just about any software company, including the giants: Amazon, Facebook, Google, and Microsoft.\nBest of luck to you!\n  Translations:  中文版本 Tiếng Việt - Vietnamese Español Português Brasileiro Polish 繁體中文 Japanese (日本語) Russian German Bahasa Indonesia ខ្មែរ - Khmer Uzbek    Translations in progress:  हिन्दी עברית Arabic Turkish French Українська Korean(한국어) Telugu Urdu Thai Greek Italian Malayalam     Coding Interview University is supported by the community.   Special thanks to:    Founded in 2018, OSS Capital is the first and only venture capital platform focused\nexclusively on supporting early-stage COSS (commercial open source) startup founders.    What is it?    This is my multi-month study plan for going from web developer (self-taught, no CS degree) to software engineer for a large company.\nThis is meant for new software engineers or those switching from software/web development to software engineering (where computer science knowledge is required). If you have many years of experience and are claiming many years of software engineering experience, expect a harder interview.\nIf you have many years of software/web development experience, note that large software companies like Google, Amazon, Facebook and Microsoft view software engineering as different from software/web development, and they require computer science knowledge.\nIf you want to be a reliability engineer or operations engineer, study more from the optional list (networking, security).\n Table of Contents     Copy Pastad from https://github.com/jwasham/coding-interview-university for ease of use Coding Interview University  What is it? Table of Contents Additional Resources Why use it? How to use it Don\u0026rsquo;t feel you aren\u0026rsquo;t smart enough About Video Resources Interview Process \u0026amp; General Interview Prep Pick One Language for the Interview Book List  Interview Prep If you have tons of extra time: Language Specific C++ Java Python   Before you Get Started  1. You Won\u0026rsquo;t Remember it All 2. Use Flashcards 3. Start doing coding interview questions while you\u0026rsquo;re learning data structures and algorithms 4. Review, review, review 5. Focus   What you won\u0026rsquo;t see covered The Daily Plan Prerequisite Knowledge Algorithmic complexity / Big-O / Asymptotic analysis Data Structures More Knowledge Trees Sorting Graphs Even More Knowledge System Design, Scalability, Data Handling Final Review Coding Question Practice Coding exercises/challenges Once you\u0026rsquo;re closer to the interview Best way to find perfect career opportunities for you Your Resume Be thinking of for when the interview comes Have questions for the interviewer Once You\u0026rsquo;ve Got The Job Additional Books Additional Learning Additional Detail on Some Subjects Video Series Computer Science Courses Algorithms implementation Papers LICENSE    \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;- Everything below this point is optional \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;-\nAdditional Resources     Copy Pastad from https://github.com/jwasham/coding-interview-university for ease of use Coding Interview University  What is it? Table of Contents Additional Resources Why use it? How to use it Don\u0026rsquo;t feel you aren\u0026rsquo;t smart enough About Video Resources Interview Process \u0026amp; General Interview Prep Pick One Language for the Interview Book List  Interview Prep If you have tons of extra time: Language Specific C++ Java Python   Before you Get Started  1. You Won\u0026rsquo;t Remember it All 2. Use Flashcards 3. Start doing coding interview questions while you\u0026rsquo;re learning data structures and algorithms 4. Review, review, review 5. Focus   What you won\u0026rsquo;t see covered The Daily Plan Prerequisite Knowledge Algorithmic complexity / Big-O / Asymptotic analysis Data Structures More Knowledge Trees Sorting Graphs Even More Knowledge System Design, Scalability, Data Handling Final Review Coding Question Practice Coding exercises/challenges Once you\u0026rsquo;re closer to the interview Best way to find perfect career opportunities for you Your Resume Be thinking of for when the interview comes Have questions for the interviewer Once You\u0026rsquo;ve Got The Job Additional Books Additional Learning Additional Detail on Some Subjects Video Series Computer Science Courses Algorithms implementation Papers LICENSE     Why use it?    When I started this project, I didn\u0026rsquo;t know a stack from a heap, didn\u0026rsquo;t know Big-O anything, anything about trees, or how to traverse a graph. If I had to code a sorting algorithm, I can tell ya it wouldn\u0026rsquo;t have been very good. Every data structure I\u0026rsquo;ve ever used was built into the language, and I didn\u0026rsquo;t know how they worked under the hood at all. I\u0026rsquo;ve never had to manage memory unless a process I was running would give an \u0026ldquo;out of memory\u0026rdquo; error, and then I\u0026rsquo;d have to find a workaround. I\u0026rsquo;ve used a few multidimensional arrays in my life and thousands of associative arrays, but I\u0026rsquo;ve never created data structures from scratch.\nIt\u0026rsquo;s a long plan. It may take you months. If you are familiar with a lot of this already it will take you a lot less time.\nHow to use it    Everything below is an outline, and you should tackle the items in order from top to bottom.\nI\u0026rsquo;m using GitHub\u0026rsquo;s special markdown flavor, including tasks lists to track progress.\nCreate a new branch so you can check items like this, just put an x in the brackets: [x]\nFork a branch and follow the commands below  Fork the GitHub repo https://github.com/jwasham/coding-interview-university by clicking on the Fork button\nClone to your local repo  git clone git@github.com:\u0026lt;your_github_username\u0026gt;/coding-interview-university.git\ngit checkout -b progress\ngit remote add jwasham https://github.com/jwasham/coding-interview-university\ngit fetch --all\nMark all boxes with X after you completed your changes  git add .\ngit commit -m \u0026quot;Marked x\u0026quot;\ngit rebase jwasham/main\ngit push --set-upstream origin progress\ngit push --force\nMore about GitHub-flavored markdown\nDon\u0026rsquo;t feel you aren\u0026rsquo;t smart enough     Successful software engineers are smart, but many have an insecurity that they aren\u0026rsquo;t smart enough. The myth of the Genius Programmer It\u0026rsquo;s Dangerous to Go Alone: Battling the Invisible Monsters in Tech  About Video Resources    Some videos are available only by enrolling in a Coursera or EdX class. These are called MOOCs. Sometimes the classes are not in session so you have to wait a couple of months, so you have no access.\nI'd appreciate your help to add free and always-available public sources, such as YouTube videos to accompany the online course videos. I like using university lectures.  Interview Process \u0026amp; General Interview Prep     How to Pass the Engineering Interview in 2021 Whiteboarding Demystifying Tech Recruiting How to Get a Job at the Big 4:  How to Get a Job at the Big 4 - Amazon, Facebook, Google \u0026amp; Microsoft (video) How to Get a Job at the Big 4.1 (Follow-up video)   Cracking The Coding Interview Set 1:  Gayle L McDowell - Cracking The Coding Interview (video) Cracking the Coding Interview with Author Gayle Laakmann McDowell (video)   Cracking the Facebook Coding Interview:  The Approach Problem Walkthrough   Prep Course:  Software Engineer Interview Unleashed (paid course):  Learn how to make yourself ready for software engineer interviews from a former Google interviewer.   Python for Data Structures, Algorithms, and Interviews (paid course):  A Python centric interview prep course which covers data structures, algorithms, mock interviews and much more.   Intro to Data Structures and Algorithms using Python (Udacity free course):  A free Python centric data structures and algorithms course.   Data Structures and Algorithms Nanodegree! (Udacity paid Nanodegree):  Get hands-on practice with over 100 data structures and algorithm exercises and guidance from a dedicated mentor to help prepare you for interviews and on-the-job scenarios.   Grokking the Behavioral Interview (Educative free course):  Many times, it’s not your technical competency that holds you back from landing your dream job, it’s how you perform on the behavioral interview.      Pick One Language for the Interview    You can use a language you are comfortable in to do the coding part of the interview, but for large companies, these are solid choices:\n C++ Java Python  You could also use these, but read around first. There may be caveats:\n JavaScript Ruby  Here is an article I wrote about choosing a language for the interview: Pick One Language for the Coding Interview.\nYou need to be very comfortable in the language and be knowledgeable.\nRead more about choices:\n http://www.byte-by-byte.com/choose-the-right-language-for-your-coding-interview/ http://blog.codingforinterviews.com/best-programming-language-jobs/  See language resources here\nYou\u0026rsquo;ll see some C, C++, and Python learning included below, because I\u0026rsquo;m learning. There are a few books involved, see the bottom.\nBook List    This is a shorter list than what I used. This is abbreviated to save you time.\nInterview Prep     Programming Interviews Exposed: Coding Your Way Through the Interview, 4th Edition  answers in C++ and Java this is a good warm-up for Cracking the Coding Interview not too difficult, most problems may be easier than what you\u0026rsquo;ll see in an interview (from what I\u0026rsquo;ve read)   Cracking the Coding Interview, 6th Edition  answers in Java    If you have tons of extra time:    Choose one:\n Elements of Programming Interviews (C++ version) Elements of Programming Interviews in Python Elements of Programming Interviews (Java version)  book Companion Project - Method Stub and Test Cases for Every Problem in the Book    Language Specific    You need to choose a language for the interview (see above).\nHere are my recommendations by language. I don\u0026rsquo;t have resources for all languages. I welcome additions.\nIf you read through one of these, you should have all the data structures and algorithms knowledge you\u0026rsquo;ll need to start doing coding problems. You can skip all the video lectures in this project, unless you\u0026rsquo;d like a review.\nAdditional language-specific resources here.\nC++    I haven\u0026rsquo;t read these two, but they are highly rated and written by Sedgewick. He\u0026rsquo;s awesome.\n Algorithms in C++, Parts 1-4: Fundamentals, Data Structure, Sorting, Searching Algorithms in C++ Part 5: Graph Algorithms Open Data Structures in C++  Rich and detailed collection of Data Structures and Algorithms Great for first-timers    If you have a better recommendation for C++, please let me know. Looking for a comprehensive resource.\nJava     Algorithms (Sedgewick and Wayne)  videos with book content (and Sedgewick!) on coursera:  Algorithms I Algorithms II      OR:\n Data Structures and Algorithms in Java  by Goodrich, Tamassia, Goldwasser used as optional text for CS intro course at UC Berkeley see my book report on the Python version below. This book covers the same topics    Python     Data Structures and Algorithms in Python  by Goodrich, Tamassia, Goldwasser I loved this book. It covered everything and more Pythonic code my glowing book report: https://startupnextdoor.com/book-report-data-structures-and-algorithms-in-python/   Open Data Structures in Python  Before you Get Started    This list grew over many months, and yes, it kind of got out of hand.\nHere are some mistakes I made so you\u0026rsquo;ll have a better experience.\n1. You Won\u0026rsquo;t Remember it All    I watched hours of videos and took copious notes, and months later there was much I didn\u0026rsquo;t remember. I spent 3 days going through my notes and making flashcards, so I could review.\nPlease, read so you won\u0026rsquo;t make my mistakes:\nRetaining Computer Science Knowledge.\nA course recommended to me (haven\u0026rsquo;t taken it): Learning how to Learn.\n2. Use Flashcards    To solve the problem, I made a little flashcards site where I could add flashcards of 2 types: general and code. Each card has different formatting.\nI made a mobile-first website, so I could review on my phone and tablet, wherever I am.\nMake your own for free:\n Flashcards site repo My flash cards database (old - 1200 cards): My flash cards database (new - 1800 cards):  Keep in mind I went overboard and have cards covering everything from assembly language and Python trivia to machine learning and statistics. It\u0026rsquo;s way too much for what\u0026rsquo;s required.\nNote on flashcards: The first time you recognize you know the answer, don\u0026rsquo;t mark it as known. You have to see the same card and answer it several times correctly before you really know it. Repetition will put that knowledge deeper in your brain.\nAn alternative to using my flashcard site is Anki, which has been recommended to me numerous times. It uses a repetition system to help you remember. It\u0026rsquo;s user-friendly, available on all platforms and has a cloud sync system. It costs $25 on iOS but is free on other platforms.\nMy flashcard database in Anki format: https://ankiweb.net/shared/info/25173560 (thanks @xiewenya).\n3. Start doing coding interview questions while you\u0026rsquo;re learning data structures and algorithms    You need to apply what you\u0026rsquo;re learning to solving problems, or you\u0026rsquo;ll forget. I made this mistake. Once you\u0026rsquo;ve learned a topic, and feel comfortable with it, like linked lists, open one of the coding interview books and do a couple of questions regarding linked lists. Then move on to the next learning topic. Then later, go back and do another linked list problem, or recursion problem, or whatever. But keep doing problems while you\u0026rsquo;re learning. You\u0026rsquo;re not being hired for knowledge, but how you apply the knowledge. There are several books and sites I recommend. See here for more: Coding Question Practice.\n4. Review, review, review    I keep a set of cheat sheets on ASCII, OSI stack, Big-O notations, and more. I study them when I have some spare time.\nTake a break from programming problems for a half hour and go through your flashcards.\n5. Focus    There are a lot of distractions that can take up valuable time. Focus and concentration are hard. Turn on some music without lyrics and you\u0026rsquo;ll be able to focus pretty well.\nWhat you won\u0026rsquo;t see covered    These are prevalent technologies but not part of this study plan:\n SQL Javascript HTML, CSS, and other front-end technologies  The Daily Plan    Some subjects take one day, and some will take multiple days. Some are just learning with nothing to implement.\nEach day I take one subject from the list below, watch videos about that subject, and write an implementation in:\n C - using structs and functions that take a struct * and something else as args C++ - without using built-in types C++ - using built-in types, like STL\u0026rsquo;s std::list for a linked list Python - using built-in types (to keep practicing Python) and write tests to ensure I\u0026rsquo;m doing it right, sometimes just using simple assert() statements You may do Java or something else, this is just my thing  You don\u0026rsquo;t need all these. You need only one language for the interview.\nWhy code in all of these?\n Practice, practice, practice, until I\u0026rsquo;m sick of it, and can do it with no problem (some have many edge cases and bookkeeping details to remember) Work within the raw constraints (allocating/freeing memory without help of garbage collection (except Python or Java)) Make use of built-in types, so I have experience using the built-in tools for real-world use (not going to write my own linked list implementation in production)  I may not have time to do all of these for every subject, but I\u0026rsquo;ll try.\nYou can see my code here:\n C C++ Python  You don\u0026rsquo;t need to memorize the guts of every algorithm.\nWrite code on a whiteboard or paper, not a computer. Test with some sample inputs. Then test it out on a computer.\nPrerequisite Knowledge      Learn C\n C is everywhere. You\u0026rsquo;ll see examples in books, lectures, videos, everywhere while you\u0026rsquo;re studying The C Programming Language, Vol 2  This is a short book, but it will give you a great handle on the C language and if you practice it a little you\u0026rsquo;ll quickly get proficient. Understanding C helps you understand how programs and memory work Answers to questions      How computers process a program:\n How CPU executes a program (video) How computers calculate - ALU (video) Registers and RAM (video) The Central Processing Unit (CPU) (video) Instructions and Programs (video)    Algorithmic complexity / Big-O / Asymptotic analysis     Nothing to implement There are a lot of videos here. Just watch enough until you understand it. You can always come back and review If some lectures are too mathy, you can jump down to the bottom and watch the discrete mathematics videos to get the background knowledge Harvard CS50 - Asymptotic Notation (video) Big O Notations (general quick tutorial) (video) Big O Notation (and Omega and Theta) - best mathematical explanation (video) Skiena:  video slides   A Gentle Introduction to Algorithm Complexity Analysis Orders of Growth (video) Asymptotics (video) UC Berkeley Big O (video) UC Berkeley Big Omega (video) Amortized Analysis (video) Illustrating \u0026ldquo;Big O\u0026rdquo; (video) TopCoder (includes recurrence relations and master theorem):  Computational Complexity: Section 1 Computational Complexity: Section 2   Cheat sheet  Data Structures      Arrays     Implement an automatically resizing vector. Description:  Arrays (video) UC Berkeley CS61B - Linear and Multi-Dim Arrays (video) (Start watching from 15m 32s) Dynamic Arrays (video) Jagged Arrays (video)   Implement a vector (mutable array with automatic resizing):  Practice coding using arrays and pointers, and pointer math to jump to an index instead of using indexing. New raw data array with allocated memory  can allocate int array under the hood, just not use its features start with 16, or if starting number is greater, use power of 2 - 16, 32, 64, 128   size() - number of items capacity() - number of items it can hold is_empty() at(index) - returns item at given index, blows up if index out of bounds push(item) insert(index, item) - inserts item at index, shifts that index\u0026rsquo;s value and trailing elements to the right prepend(item) - can use insert above at index 0 pop() - remove from end, return value delete(index) - delete item at index, shifting all trailing elements left remove(item) - looks for value and removes index holding it (even if in multiple places) find(item) - looks for value and returns first index with that value, -1 if not found resize(new_capacity) // private function  when you reach capacity, resize to double the size when popping an item, if size is 1/4 of capacity, resize to half     Time  O(1) to add/remove at end (amortized for allocations for more space), index, or update O(n) to insert/remove elsewhere   Space  contiguous in memory, so proximity helps performance space needed = (array capacity, which is \u0026gt;= n) * size of item, but even if 2n, still O(n)      Linked Lists     Description:  Singly Linked Lists (video) CS 61B - Linked Lists 1 (video) CS 61B - Linked Lists 2 (video)   C Code (video) - not the whole video, just portions about Node struct and memory allocation Linked List vs Arrays:  Core Linked Lists Vs Arrays (video) In The Real World Linked Lists Vs Arrays (video)   why you should avoid linked lists (video) Gotcha: you need pointer to pointer knowledge: (for when you pass a pointer to a function that may change the address where that pointer points) This page is just to get a grasp on ptr to ptr. I don\u0026rsquo;t recommend this list traversal style. Readability and maintainability suffer due to cleverness.  Pointers to Pointers   Implement (I did with tail pointer \u0026amp; without):  size() - returns number of data elements in list empty() - bool returns true if empty value_at(index) - returns the value of the nth item (starting at 0 for first) push_front(value) - adds an item to the front of the list pop_front() - remove front item and return its value push_back(value) - adds an item at the end pop_back() - removes end item and returns its value front() - get value of front item back() - get value of end item insert(index, value) - insert value at index, so current item at that index is pointed to by new item at index erase(index) - removes node at given index value_n_from_end(n) - returns the value of the node at nth position from the end of the list reverse() - reverses the list remove_value(value) - removes the first item in the list with this value   Doubly-linked List  Description (video) No need to implement      Stack     Stacks (video) Will not implement. Implementing with array is trivial    Queue     Queue (video) Circular buffer/FIFO Implement using linked-list, with tail pointer:  enqueue(value) - adds value at position at tail dequeue() - returns value and removes least recently added element (front) empty()   Implement using fixed-sized array:  enqueue(value) - adds item at end of available storage dequeue() - returns value and removes least recently added element empty() full()   Cost:  a bad implementation using linked list where you enqueue at head and dequeue at tail would be O(n) because you\u0026rsquo;d need the next to last element, causing a full traversal each dequeue enqueue: O(1) (amortized, linked list and array [probing]) dequeue: O(1) (linked list and array) empty: O(1) (linked list and array)      Hash table      Videos:\n Hashing with Chaining (video) Table Doubling, Karp-Rabin (video) Open Addressing, Cryptographic Hashing (video) PyCon 2010: The Mighty Dictionary (video) (Advanced) Randomization: Universal \u0026amp; Perfect Hashing (video) (Advanced) Perfect hashing (video)    Online Courses:\n Core Hash Tables (video) Data Structures (video) Phone Book Problem (video) distributed hash tables:  Instant Uploads And Storage Optimization In Dropbox (video) Distributed Hash Tables (video)      Implement with array using linear probing\n hash(k, m) - m is size of hash table add(key, value) - if key already exists, update value exists(key) get(key) remove(key)      More Knowledge      Binary search     Binary Search (video) Binary Search (video) detail Implement:  binary search (on sorted array of integers) binary search using recursion      Bitwise operations     Bits cheat sheet - you should know many of the powers of 2 from (2^1 to 2^16 and 2^32) Get a really good understanding of manipulating bits with: \u0026amp;, |, ^, ~, \u0026raquo;, \u0026laquo;  words Good intro: Bit Manipulation (video) C Programming Tutorial 2-10: Bitwise Operators (video) Bit Manipulation Bitwise Operation Bithacks The Bit Twiddler The Bit Twiddler Interactive Bit Hacks (video) Practice Operations   2s and 1s complement  Binary: Plusses \u0026amp; Minuses (Why We Use Two\u0026rsquo;s Complement) (video) 1s Complement 2s Complement   Count set bits  4 ways to count bits in a byte (video) Count Bits How To Count The Number Of Set Bits In a 32 Bit Integer   Swap values:  Swap   Absolute value:  Absolute Integer      Trees      Trees - Notes \u0026amp; Background     Series: Trees (video) basic tree construction traversal manipulation algorithms BFS(breadth-first search) and DFS(depth-first search) (video)  BFS notes:  level order (BFS, using queue) time complexity: O(n) space complexity: best: O(1), worst: O(n/2)=O(n)   DFS notes:  time complexity: O(n) space complexity: best: O(log n) - avg. height of tree worst: O(n) inorder (DFS: left, self, right) postorder (DFS: left, right, self) preorder (DFS: self, left, right)        Binary search trees: BSTs     Binary Search Tree Review (video) Introduction (video) MIT (video) C/C++:  Binary search tree - Implementation in C/C++ (video) BST implementation - memory allocation in stack and heap (video) Find min and max element in a binary search tree (video) Find height of a binary tree (video) Binary tree traversal - breadth-first and depth-first strategies (video) Binary tree: Level Order Traversal (video) Binary tree traversal: Preorder, Inorder, Postorder (video) Check if a binary tree is binary search tree or not (video) Delete a node from Binary Search Tree (video) Inorder Successor in a binary search tree (video)   Implement:  insert // insert value into tree get_node_count // get count of values stored print_values // prints the values in the tree, from min to max delete_tree is_in_tree // returns true if given value exists in the tree get_height // returns the height in nodes (single node\u0026rsquo;s height is 1) get_min // returns the minimum value stored in the tree get_max // returns the maximum value stored in the tree is_binary_search_tree delete_value get_successor // returns next-highest value in tree after given value, -1 if none      Heap / Priority Queue / Binary Heap     visualized as a tree, but is usually linear in storage (array, linked list) Heap Introduction (video) Naive Implementations (video) Binary Trees (video) Tree Height Remark (video) Basic Operations (video) Complete Binary Trees (video) Pseudocode (video) Heap Sort - jumps to start (video) Heap Sort (video) Building a heap (video) MIT: Heaps and Heap Sort (video) CS 61B Lecture 24: Priority Queues (video) Linear Time BuildHeap (max-heap) Implement a max-heap:  insert sift_up - needed for insert get_max - returns the max item, without removing it get_size() - return number of elements stored is_empty() - returns true if heap contains no elements extract_max - returns the max item, removing it sift_down - needed for extract_max remove(i) - removes item at index x heapify - create a heap from an array of elements, needed for heap_sort heap_sort() - take an unsorted array and turn it into a sorted array in-place using a max heap or min heap      Sorting      Notes:\n Implement sorts \u0026amp; know best case/worst case, average complexity of each:  no bubble sort - it\u0026rsquo;s terrible - O(n^2), except when n \u0026lt;= 16   Stability in sorting algorithms (\u0026ldquo;Is Quicksort stable?\u0026quot;)  Sorting Algorithm Stability Stability In Sorting Algorithms Stability In Sorting Algorithms Sorting Algorithms - Stability   Which algorithms can be used on linked lists? Which on arrays? Which on both?  I wouldn\u0026rsquo;t recommend sorting a linked list, but merge sort is doable. Merge Sort For Linked List      For heapsort, see Heap data structure above. Heap sort is great, but not stable\n  Sedgewick - Mergesort (5 videos)\n 1. Mergesort 2. Bottom up Mergesort 3. Sorting Complexity 4. Comparators 5. Stability    Sedgewick - Quicksort (4 videos)\n 1. Quicksort 2. Selection 3. Duplicate Keys 4. System Sorts    UC Berkeley:\n CS 61B Lecture 29: Sorting I (video) CS 61B Lecture 30: Sorting II (video) CS 61B Lecture 32: Sorting III (video) CS 61B Lecture 33: Sorting V (video)    Bubble Sort (video)\n  Analyzing Bubble Sort (video)\n  Insertion Sort, Merge Sort (video)\n  Insertion Sort (video)\n  Merge Sort (video)\n  Quicksort (video)\n  Selection Sort (video)\n  Merge sort code:\n Using output array (C) Using output array (Python) In-place (C++)    Quick sort code:\n Implementation (C) Implementation (C) Implementation (Python)    Implement:\n Mergesort: O(n log n) average and worst case Quicksort O(n log n) average case Selection sort and insertion sort are both O(n^2) average and worst case For heapsort, see Heap data structure above    Not required, but I recommended them:\n Sedgewick - Radix Sorts (6 videos)  1. Strings in Java 2. Key Indexed Counting 3. Least Significant Digit First String Radix Sort 4. Most Significant Digit First String Radix Sort 5. 3 Way Radix Quicksort 6. Suffix Arrays   Radix Sort Radix Sort (video) Radix Sort, Counting Sort (linear time given constraints) (video) Randomization: Matrix Multiply, Quicksort, Freivalds' algorithm (video) Sorting in Linear Time (video)    As a summary, here is a visual representation of 15 sorting algorithms. If you need more detail on this subject, see \u0026ldquo;Sorting\u0026rdquo; section in Additional Detail on Some Subjects\nGraphs    Graphs can be used to represent many problems in computer science, so this section is long, like trees and sorting were.\n  Notes:\n There are 4 basic ways to represent a graph in memory:  objects and pointers adjacency matrix adjacency list adjacency map   Familiarize yourself with each representation and its pros \u0026amp; cons BFS and DFS - know their computational complexity, their trade offs, and how to implement them in real code When asked a question, look for a graph-based solution first, then move on if none    MIT(videos):\n Breadth-First Search Depth-First Search    Skiena Lectures - great intro:\n CSE373 2012 - Lecture 11 - Graph Data Structures (video) CSE373 2012 - Lecture 12 - Breadth-First Search (video) CSE373 2012 - Lecture 13 - Graph Algorithms (video) CSE373 2012 - Lecture 14 - Graph Algorithms (con\u0026rsquo;t) (video) CSE373 2012 - Lecture 15 - Graph Algorithms (con\u0026rsquo;t 2) (video) CSE373 2012 - Lecture 16 - Graph Algorithms (con\u0026rsquo;t 3) (video)    Graphs (review and more):\n 6.006 Single-Source Shortest Paths Problem (video) 6.006 Dijkstra (video) 6.006 Bellman-Ford (video) 6.006 Speeding Up Dijkstra (video) Aduni: Graph Algorithms I - Topological Sorting, Minimum Spanning Trees, Prim\u0026rsquo;s Algorithm - Lecture 6 (video) Aduni: Graph Algorithms II - DFS, BFS, Kruskal\u0026rsquo;s Algorithm, Union Find Data Structure - Lecture 7 (video) Aduni: Graph Algorithms III: Shortest Path - Lecture 8 (video) Aduni: Graph Alg. IV: Intro to geometric algorithms - Lecture 9 (video) CS 61B 2014 (starting at 58:09) (video) CS 61B 2014: Weighted graphs (video) Greedy Algorithms: Minimum Spanning Tree (video) Strongly Connected Components Kosaraju\u0026rsquo;s Algorithm Graph Algorithm (video)    Full Coursera Course:\n Algorithms on Graphs (video)    I\u0026rsquo;ll implement:\n DFS with adjacency list (recursive) DFS with adjacency list (iterative with stack) DFS with adjacency matrix (recursive) DFS with adjacency matrix (iterative with stack) BFS with adjacency list BFS with adjacency matrix single-source shortest path (Dijkstra) minimum spanning tree DFS-based algorithms (see Aduni videos above):  check for cycle (needed for topological sort, since we\u0026rsquo;ll check for cycle before starting) topological sort count connected components in a graph list strongly connected components check for bipartite graph      Even More Knowledge      Recursion     Stanford lectures on recursion \u0026amp; backtracking:  Lecture 8 | Programming Abstractions (video) Lecture 9 | Programming Abstractions (video) Lecture 10 | Programming Abstractions (video) Lecture 11 | Programming Abstractions (video)   When it is appropriate to use it? How is tail recursion better than not?  What Is Tail Recursion Why Is It So Bad? Tail Recursion (video)      Dynamic Programming     You probably won\u0026rsquo;t see any dynamic programming problems in your interview, but it\u0026rsquo;s worth being able to recognize a problem as being a candidate for dynamic programming. This subject can be pretty difficult, as each DP soluble problem must be defined as a recursion relation, and coming up with it can be tricky. I suggest looking at many examples of DP problems until you have a solid understanding of the pattern involved. Videos:  the Skiena videos can be hard to follow since he sometimes uses the whiteboard, which is too small to see Skiena: CSE373 2012 - Lecture 19 - Introduction to Dynamic Programming (video) Skiena: CSE373 2012 - Lecture 20 - Edit Distance (video) Skiena: CSE373 2012 - Lecture 21 - Dynamic Programming Examples (video) Skiena: CSE373 2012 - Lecture 22 - Applications of Dynamic Programming (video) Simonson: Dynamic Programming 0 (starts at 59:18) (video) Simonson: Dynamic Programming I - Lecture 11 (video) Simonson: Dynamic programming II - Lecture 12 (video) List of individual DP problems (each is short): Dynamic Programming (video)   Yale Lecture notes:  Dynamic Programming   Coursera:  The RNA secondary structure problem (video) A dynamic programming algorithm (video) Illustrating the DP algorithm (video) Running time of the DP algorithm (video) DP vs. recursive implementation (video) Global pairwise sequence alignment (video) Local pairwise sequence alignment (video)      Object-Oriented Programming     Optional: UML 2.0 Series (video) SOLID OOP Principles: SOLID Principles (video)    Design patterns     Quick UML review (video) Learn these patterns:  strategy singleton adapter prototype decorator visitor factory, abstract factory facade observer proxy delegate command state memento iterator composite flyweight   Chapter 6 (Part 1) - Patterns (video) Chapter 6 (Part 2) - Abstraction-Occurrence, General Hierarchy, Player-Role, Singleton, Observer, Delegation (video) Chapter 6 (Part 3) - Adapter, Facade, Immutable, Read-Only Interface, Proxy (video) Series of videos (27 videos) Head First Design Patterns  I know the canonical book is \u0026ldquo;Design Patterns: Elements of Reusable Object-Oriented Software\u0026rdquo;, but Head First is great for beginners to OO.   Handy reference: 101 Design Patterns \u0026amp; Tips for Developers Design patterns for humans    Combinatorics (n choose k) \u0026amp; Probability     Math Skills: How to find Factorial, Permutation and Combination (Choose) (video) Make School: Probability (video) Make School: More Probability and Markov Chains (video) Khan Academy:  Course layout:  Basic Theoretical Probability   Just the videos - 41 (each are simple and each are short):  Probability Explained (video)        NP, NP-Complete and Approximation Algorithms     Know about the most famous classes of NP-complete problems, such as traveling salesman and the knapsack problem, and be able to recognize them when an interviewer asks you them in disguise. Know what NP-complete means. Computational Complexity (video) Simonson:  Greedy Algs. II \u0026amp; Intro to NP Completeness (video) NP Completeness II \u0026amp; Reductions (video) NP Completeness III (Video) NP Completeness IV (video)   Skiena:  CSE373 2012 - Lecture 23 - Introduction to NP-Completeness (video) CSE373 2012 - Lecture 24 - NP-Completeness Proofs (video) CSE373 2012 - Lecture 25 - NP-Completeness Challenge (video)   Complexity: P, NP, NP-completeness, Reductions (video) Complexity: Approximation Algorithms (video) Complexity: Fixed-Parameter Algorithms (video) Peter Norvig discusses near-optimal solutions to traveling salesman problem:  Jupyter Notebook   Pages 1048 - 1140 in CLRS if you have it.    Caches     LRU cache:  The Magic of LRU Cache (100 Days of Google Dev) (video) Implementing LRU (video) LeetCode - 146 LRU Cache (C++) (video)   CPU cache:  MIT 6.004 L15: The Memory Hierarchy (video) MIT 6.004 L16: Cache Issues (video)      Processes and Threads     Computer Science 162 - Operating Systems (25 videos):  for processes and threads see videos 1-11 Operating Systems and System Programming (video)   What Is The Difference Between A Process And A Thread? Covers:  Processes, Threads, Concurrency issues  Difference between processes and threads Processes Threads Locks Mutexes Semaphores Monitors How they work? Deadlock Livelock   CPU activity, interrupts, context switching Modern concurrency constructs with multicore processors Paging, segmentation and virtual memory (video) Interrupts (video) Process resource needs (memory: code, static storage, stack, heap, and also file descriptors, i/o) Thread resource needs (shares above (minus stack) with other threads in the same process but each has its own pc, stack counter, registers, and stack) Forking is really copy on write (read-only) until the new process writes to memory, then it does a full copy. Context switching  How context switching is initiated by the operating system and underlying hardware?     threads in C++ (series - 10 videos) concurrency in Python (videos):  Short series on threads Python Threads Understanding the Python GIL (2010)  reference   David Beazley - Python Concurrency From the Ground Up: LIVE! - PyCon 2015 Keynote David Beazley - Topics of Interest (Python Asyncio) Mutex in Python      Testing     To cover:  how unit testing works what are mock objects what is integration testing what is dependency injection   Agile Software Testing with James Bach (video) Open Lecture by James Bach on Software Testing (video) Steve Freeman - Test-Driven Development (that’s not what we meant) (video)  slides   Dependency injection:  video Tao Of Testing   How to write tests    Scheduling     In an OS, how it works? Can be gleaned from Operating System videos    String searching \u0026amp; manipulations     Sedgewick - Suffix Arrays (video) Sedgewick - Substring Search (videos)  1. Introduction to Substring Search 2. Brute-Force Substring Search 3. Knuth-Morris Pratt 4. Boyer-Moore 5. Rabin-Karp   Search pattern in text (video)  If you need more detail on this subject, see \u0026ldquo;String Matching\u0026rdquo; section in Additional Detail on Some Subjects.\n  Tries     Note there are different kinds of tries. Some have prefixes, some don\u0026rsquo;t, and some use string instead of bits to track the path I read through code, but will not implement Sedgewick - Tries (3 videos)  1. R Way Tries 2. Ternary Search Tries 3. Character Based Operations   Notes on Data Structures and Programming Techniques Short course videos:  Introduction To Tries (video) Performance Of Tries (video) Implementing A Trie (video)   The Trie: A Neglected Data Structure TopCoder - Using Tries Stanford Lecture (real world use case) (video) MIT, Advanced Data Structures, Strings (can get pretty obscure about halfway through) (video)    Floating Point Numbers     simple 8-bit: Representation of Floating Point Numbers - 1 (video - there is an error in calculations - see video description) 32 bit: IEEE754 32-bit floating point binary (video)    Unicode     The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets What Every Programmer Absolutely, Positively Needs To Know About Encodings And Character Sets To Work With Text    Endianness     Big And Little Endian Big Endian Vs Little Endian (video) Big And Little Endian Inside/Out (video)  Very technical talk for kernel devs. Don\u0026rsquo;t worry if most is over your head. The first half is enough.      Networking     if you have networking experience or want to be a reliability engineer or operations engineer, expect questions Otherwise, this is just good to know Khan Academy UDP and TCP: Comparison of Transport Protocols (video) TCP/IP and the OSI Model Explained! (video) Packet Transmission across the Internet. Networking \u0026amp; TCP/IP tutorial. (video) HTTP (video) SSL and HTTPS (video) SSL/TLS (video) HTTP 2.0 (video) Video Series (21 videos) (video) Subnetting Demystified - Part 5 CIDR Notation (video) Sockets:  Java - Sockets - Introduction (video) Socket Programming (video)      System Design, Scalability, Data Handling    You can expect system design questions if you have 4+ years of experience.\n Scalability and System Design are very large topics with many topics and resources, since there is a lot to consider when designing a software/hardware system that can scale. Expect to spend quite a bit of time on this Considerations:  Scalability  Distill large data sets to single values Transform one data set to another Handling obscenely large amounts of data   System design  features sets interfaces class hierarchies designing a system under certain constraints simplicity and robustness tradeoffs performance analysis and optimization     START HERE: The System Design Primer System Design from HiredInTech How Do I Prepare To Answer Design Questions In A Technical Interview? 8 Things You Need to Know Before a System Design Interview Database Normalization - 1NF, 2NF, 3NF and 4NF (video) System Design Interview - There are a lot of resources in this one. Look through the articles and examples. I put some of them below How to ace a systems design interview Numbers Everyone Should Know How long does it take to make a context switch? Transactions Across Datacenters (video) A plain English introduction to CAP Theorem MIT 6.824: Distributed Systems, Spring 2020 (20 videos) Consensus Algorithms:  Paxos - Paxos Agreement - Computerphile (video) Raft - An Introduction to the Raft Distributed Consensus Algorithm (video)  Easy-to-read paper Infographic     Consistent Hashing NoSQL Patterns Scalability:  You don\u0026rsquo;t need all of these. Just pick a few that interest you. Great overview (video) Short series:  Clones Database Cache Asynchronism   Scalable Web Architecture and Distributed Systems Fallacies of Distributed Computing Explained Jeff Dean - Building Software Systems At Google and Lessons Learned (video) Introduction to Architecting Systems for Scale Scaling mobile games to a global audience using App Engine and Cloud Datastore (video) How Google Does Planet-Scale Engineering for Planet-Scale Infra (video) The Importance of Algorithms Sharding Engineering for the Long Game - Astrid Atkinson Keynote(video) 7 Years Of YouTube Scalability Lessons In 30 Minutes  video   How PayPal Scaled To Billions Of Transactions Daily Using Just 8VMs How to Remove Duplicates in Large Datasets A look inside Etsy\u0026rsquo;s scale and engineering culture with Jon Cowie (video) What Led Amazon to its Own Microservices Architecture To Compress Or Not To Compress, That Was Uber\u0026rsquo;s Question When Should Approximate Query Processing Be Used? Google\u0026rsquo;s Transition From Single Datacenter, To Failover, To A Native Multihomed Architecture The Image Optimization Technology That Serves Millions Of Requests Per Day A Patreon Architecture Short Tinder: How Does One Of The Largest Recommendation Engines Decide Who You\u0026rsquo;ll See Next? Design Of A Modern Cache Live Video Streaming At Facebook Scale A Beginner\u0026rsquo;s Guide To Scaling To 11 Million+ Users On Amazon\u0026rsquo;s AWS A 360 Degree View Of The Entire Netflix Stack Latency Is Everywhere And It Costs You Sales - How To Crush It What Powers Instagram: Hundreds of Instances, Dozens of Technologies Salesforce Architecture - How They Handle 1.3 Billion Transactions A Day ESPN\u0026rsquo;s Architecture At Scale - Operating At 100,000 Duh Nuh Nuhs Per Second See \u0026ldquo;Messaging, Serialization, and Queueing Systems\u0026rdquo; way below for info on some of the technologies that can glue services together Twitter:  O\u0026rsquo;Reilly MySQL CE 2011: Jeremy Cole, \u0026ldquo;Big and Small Data at @Twitter\u0026rdquo; (video) Timelines at Scale   For even more, see \u0026ldquo;Mining Massive Datasets\u0026rdquo; video series in the Video Series section   Practicing the system design process: Here are some ideas to try working through on paper, each with some documentation on how it was handled in the real world:  review: The System Design Primer System Design from HiredInTech cheat sheet flow:  Understand the problem and scope:  Define the use cases, with interviewer\u0026rsquo;s help Suggest additional features Remove items that interviewer deems out of scope Assume high availability is required, add as a use case   Think about constraints:  Ask how many requests per month Ask how many requests per second (they may volunteer it or make you do the math) Estimate reads vs. writes percentage Keep 80/20 rule in mind when estimating How much data written per second Total storage required over 5 years How much data read per second   Abstract design:  Layers (service, data, caching) Infrastructure: load balancing, messaging Rough overview of any key algorithm that drives the service Consider bottlenecks and determine solutions     Exercises:  Design a random unique ID generation system Design an online multiplayer card game Design a key-value database Design a picture sharing system Design a recommendation system Design a URL-shortener system: copied from above Design a cache system       Final Review    This section will have shorter videos that you can watch pretty quickly to review most of the important concepts. It's nice if you want a refresher often.   Series of 2-3 minutes short subject videos (23 videos)  Videos   Series of 2-5 minutes short subject videos - Michael Sambol (18 videos):  Videos   Sedgewick Videos - Algorithms I Sedgewick Videos - Algorithms II   Coding Question Practice    Now that you know all the computer science topics above, it\u0026rsquo;s time to practice answering coding problems.\nCoding question practice is not about memorizing answers to programming problems.\nWhy you need to practice doing programming problems:\n Problem recognition, and where the right data structures and algorithms fit in Gathering requirements for the problem Talking your way through the problem like you will in the interview Coding on a whiteboard or paper, not a computer Coming up with time and space complexity for your solutions Testing your solutions  There is a great intro for methodical, communicative problem solving in an interview. You\u0026rsquo;ll get this from the programming interview books, too, but I found this outstanding: Algorithm design canvas\nNo whiteboard at home? That makes sense. I\u0026rsquo;m a weirdo and have a big whiteboard. Instead of a whiteboard, pick up a large drawing pad from an art store. You can sit on the couch and practice. This is my \u0026ldquo;sofa whiteboard\u0026rdquo;. I added the pen in the photo for scale. If you use a pen, you\u0026rsquo;ll wish you could erase. Gets messy quick. I use a pencil and eraser.\nSupplemental:\n Mathematics for Topcoders Dynamic Programming – From Novice to Advanced MIT Interview Materials Exercises for getting better at a given language  Read and Do Programming Problems (in this order):\n Programming Interviews Exposed: Secrets to Landing Your Next Job, 2nd Edition  answers in C, C++ and Java   Cracking the Coding Interview, 6th Edition  answers in Java    See Book List above\nCoding exercises/challenges    Once you\u0026rsquo;ve learned your brains out, put those brains to work. Take coding challenges every day, as many as you can.\n How to Find a Solution How to Dissect a Topcoder Problem Statement  Coding Interview Question Videos:\n IDeserve (88 videos) Tushar Roy (5 playlists)  Super for walkthroughs of problem solutions   Nick White - LeetCode Solutions (187 Videos)  Good explanations of solution and the code You can watch several in a short time   FisherCoder - LeetCode Solutions  Challenge sites:\n LeetCode  My favorite coding problem site. It\u0026rsquo;s worth the subscription money for the 1-2 months you\u0026rsquo;ll likely be preparing LeetCode solutions from FisherCoder See Nick White Videos above for short code-throughs   HackerRank TopCoder InterviewCake Geeks for Geeks InterviewBit Project Euler (math-focused) Code Exercises  Language-learning sites, with challenges:\n Codewars Codility HackerEarth Sphere Online Judge (spoj) Codechef Codeforces  Challenge repos:\n Interactive Coding Interview Challenges in Python  Mock Interviews:\n Gainlo.co: Mock interviewers from big companies - I used this and it helped me relax for the phone screen and on-site interview Pramp: Mock interviews from/with peers - peer-to-peer model of practice interviews Refdash: Mock interviews and expedited interviews - also help candidates fast track by skipping multiple interviews with tech companies interviewing.io: Practice mock interview with senior engineers - anonymous algorithmic/systems design interviews with senior engineers from FAANG anonymously.  Once you\u0026rsquo;re closer to the interview     Cracking The Coding Interview Set 2 (videos):  Cracking The Code Interview Cracking the Coding Interview - Fullstack Speaker Series    Best way to find perfect career opportunities for you     If you are trying to find new job opportunities, or if you are trying to find internships, if want to know about the salary of a job role in any companies or want to just know about the company reputation before applying to that company, here are the list of platforms which can help you find the above answers and more. Best Websites for Careers \u0026amp; Jobs  Your Resume     See Resume prep items in Cracking The Coding Interview and back of Programming Interviews Exposed Very Important thing to remember while creating your resume, if you applying for big companies is that make it ATS Compliant. How to Create or Check if your Resume is ATS Compliant  Be thinking of for when the interview comes    Think of about 20 interview questions you\u0026rsquo;ll get, along with the lines of the items below. Have 2-3 answers for each. Have a story, not just data, about something you accomplished.\n  Why do you want this job?\n  What\u0026rsquo;s a tough problem you\u0026rsquo;ve solved?\n  Biggest challenges faced?\n  Best/worst designs seen?\n  Ideas for improving an existing product\n  How do you work best, as an individual and as part of a team?\n  Which of your skills or experiences would be assets in the role and why?\n  What did you most enjoy at [job x / project y]?\n  What was the biggest challenge you faced at [job x / project y]?\n  What was the hardest bug you faced at [job x / project y]?\n  What did you learn at [job x / project y]?\n  What would you have done better at [job x / project y]?\n  If you find hard to come up with good answers of this type interview questions, you can refer below link for some answer templates and have some idea.\n  General Interview Questions and their Answers\n  Have questions for the interviewer    Some of mine (I already may know answer to but want their opinion or team perspective):   How large is your team? What does your dev cycle look like? Do you do waterfall/sprints/agile? Are rushes to deadlines common? Or is there flexibility? How are decisions made in your team? How many meetings do you have per week? Do you feel your work environment helps you concentrate? What are you working on? What do you like about it? What is the work life like? How is work/life balance?  Once You\u0026rsquo;ve Got The Job    Congratulations!\nKeep learning.\nYou\u0026rsquo;re never really done.\n ***************************************************************************************************** ***************************************************************************************************** Everything below this point is optional. By studying these, you'll get greater exposure to more CS concepts, and will be better prepared for any software engineering job. You'll be a much more well-rounded software engineer. ***************************************************************************************************** *****************************************************************************************************   Additional Books    These are here so you can dive into a topic you find interesting.    The Unix Programming Environment\n An oldie but a goodie    The Linux Command Line: A Complete Introduction\n A modern option    TCP/IP Illustrated Series\n  Head First Design Patterns\n A gentle introduction to design patterns    Design Patterns: Elements of Reusable Object-Oriente​d Software\n AKA the \u0026ldquo;Gang Of Four\u0026rdquo; book, or GOF The canonical design patterns book    UNIX and Linux System Administration Handbook, 5th Edition\n  Algorithm Design Manual (Skiena)\n As a review and problem recognition The algorithm catalog portion is well beyond the scope of difficulty you\u0026rsquo;ll get in an interview This book has 2 parts:  Class textbook on data structures and algorithms  Pros:  Is a good review as any algorithms textbook would be Nice stories from his experiences solving problems in industry and academia Code examples in C   Cons:  Can be as dense or impenetrable as CLRS, and in some cases, CLRS may be a better alternative for some subjects Chapters 7, 8, 9 can be painful to try to follow, as some items are not explained well or require more brain than I have Don\u0026rsquo;t get me wrong: I like Skiena, his teaching style, and mannerisms, but I may not be Stony Brook material     Algorithm catalog:  This is the real reason you buy this book About to get to this part. Will update here once I\u0026rsquo;ve made my way through it     Can rent it on Kindle Answers:  Solutions Solutions   Errata    Write Great Code: Volume 1: Understanding the Machine\n The book was published in 2004, and is somewhat outdated, but it\u0026rsquo;s a terrific resource for understanding a computer in brief The author invented HLA, so take mentions and examples in HLA with a grain of salt. Not widely used, but decent examples of what assembly looks like These chapters are worth the read to give you a nice foundation:  Chapter 2 - Numeric Representation Chapter 3 - Binary Arithmetic and Bit Operations Chapter 4 - Floating-Point Representation Chapter 5 - Character Representation Chapter 6 - Memory Organization and Access Chapter 7 - Composite Data Types and Memory Objects Chapter 9 - CPU Architecture Chapter 10 - Instruction Set Architecture Chapter 11 - Memory Architecture and Organization      Introduction to Algorithms\n Important: Reading this book will only have limited value. This book is a great review of algorithms and data structures, but won\u0026rsquo;t teach you how to write good code. You have to be able to code a decent solution efficiently AKA CLR, sometimes CLRS, because Stein was late to the game    Computer Architecture, Sixth Edition: A Quantitative Approach\n For a richer, more up-to-date (2017), but longer treatment    Programming Pearls\n The first couple of chapters present clever solutions to programming problems (some very old using data tape) but that is just an intro. This a guidebook on program design and architecture    Additional Learning    I added them to help you become a well-rounded software engineer, and to be aware of certain technologies and algorithms, so you'll have a bigger toolbox.    Compilers     How a Compiler Works in ~1 minute (video) Harvard CS50 - Compilers (video) C++ (video) Understanding Compiler Optimization (C++) (video)    Emacs and vi(m)     Familiarize yourself with a unix-based code editor vi(m):  Editing With vim 01 - Installation, Setup, and The Modes (video) VIM Adventures set of 4 videos:  The vi/vim editor - Lesson 1 The vi/vim editor - Lesson 2 The vi/vim editor - Lesson 3 The vi/vim editor - Lesson 4   Using Vi Instead of Emacs   emacs:  Basics Emacs Tutorial (video) set of 3 (videos):  Emacs Tutorial (Beginners) -Part 1- File commands, cut/copy/paste, cursor commands Emacs Tutorial (Beginners) -Part 2- Buffer management, search, M-x grep and rgrep modes Emacs Tutorial (Beginners) -Part 3- Expressions, Statements, ~/.emacs file and packages   Evil Mode: Or, How I Learned to Stop Worrying and Love Emacs (video) Writing C Programs With Emacs (maybe) Org Mode In Depth: Managing Structure (video)      Unix command line tools     I filled in the list below from good tools. bash cat grep sed awk curl or wget sort tr uniq strace tcpdump    Information theory (videos)     Khan Academy More about Markov processes:  Core Markov Text Generation Core Implementing Markov Text Generation Project = Markov Text Generation Walk Through   See more in MIT 6.050J Information and Entropy series below    Parity \u0026amp; Hamming Code (videos)     Intro Parity Hamming Code:  Error detection Error correction   Error Checking    Entropy     Also see videos below Make sure to watch information theory videos first Information Theory, Claude Shannon, Entropy, Redundancy, Data Compression \u0026amp; Bits (video)    Cryptography     Also see videos below Make sure to watch information theory videos first Khan Academy Series Cryptography: Hash Functions Cryptography: Encryption    Compression     Make sure to watch information theory videos first Computerphile (videos):  Compression Entropy in Compression Upside Down Trees (Huffman Trees) EXTRA BITS/TRITS - Huffman Trees Elegant Compression in Text (The LZ 77 Method) Text Compression Meets Probabilities   Compressor Head videos (optional) Google Developers Live: GZIP is not enough!    Computer Security     MIT (23 videos)  Introduction, Threat Models Control Hijacking Attacks Buffer Overflow Exploits and Defenses Privilege Separation Capabilities Sandboxing Native Code Web Security Model Securing Web Applications Symbolic Execution Network Security Network Protocols Side-Channel Attacks      Garbage collection     GC in Python (video) Deep Dive Java: Garbage Collection is Good! Deep Dive Python: Garbage Collection in CPython (video)    Parallel Programming     Coursera (Scala) Efficient Python for High Performance Parallel Computing (video)    Messaging, Serialization, and Queueing Systems     Thrift  Tutorial   Protocol Buffers  Tutorials   gRPC  gRPC 101 for Java Developers (video)   Redis  Tutorial   Amazon SQS (queue) Amazon SNS (pub-sub) RabbitMQ  Get Started   Celery  First Steps With Celery   ZeroMQ  Intro - Read The Manual   ActiveMQ Kafka MessagePack Avro    A*     A Search Algorithm A* Pathfinding Tutorial (video) A* Pathfinding (E01: algorithm explanation) (video)    Fast Fourier Transform     An Interactive Guide To The Fourier Transform What is a Fourier transform? What is it used for? What is the Fourier Transform? (video) Divide \u0026amp; Conquer: FFT (video) Understanding The FFT    Bloom Filter     Given a Bloom filter with m bits and k hashing functions, both insertion and membership testing are O(k) Bloom Filters (video) Bloom Filters | Mining of Massive Datasets | Stanford University (video) Tutorial How To Write A Bloom Filter App    HyperLogLog     How To Count A Billion Distinct Objects Using Only 1.5KB Of Memory    Locality-Sensitive Hashing     Used to determine the similarity of documents The opposite of MD5 or SHA which are used to determine if 2 documents/strings are exactly the same Simhashing (hopefully) made simple    van Emde Boas Trees     Divide \u0026amp; Conquer: van Emde Boas Trees (video) MIT Lecture Notes    Augmented Data Structures     CS 61B Lecture 39: Augmenting Data Structures    Balanced search trees      Know at least one type of balanced binary tree (and know how it\u0026rsquo;s implemented):\n  \u0026ldquo;Among balanced search trees, AVL and 2/3 trees are now passé, and red-black trees seem to be more popular. A particularly interesting self-organizing data structure is the splay tree, which uses rotations to move any accessed key to the root.\u0026rdquo; - Skiena\n  Of these, I chose to implement a splay tree. From what I\u0026rsquo;ve read, you won\u0026rsquo;t implement a balanced search tree in your interview. But I wanted exposure to coding one up and let\u0026rsquo;s face it, splay trees are the bee\u0026rsquo;s knees. I did read a lot of red-black tree code\n Splay tree: insert, search, delete functions If you end up implementing red/black tree try just these: Search and insertion functions, skipping delete    I want to learn more about B-Tree since it\u0026rsquo;s used so widely with very large data sets\n  Self-balancing binary search tree\n  AVL trees\n In practice: From what I can tell, these aren\u0026rsquo;t used much in practice, but I could see where they would be: The AVL tree is another structure supporting O(log n) search, insertion, and removal. It is more rigidly balanced than red–black trees, leading to slower insertion and removal but faster retrieval. This makes it attractive for data structures that may be built once and loaded without reconstruction, such as language dictionaries (or program dictionaries, such as the opcodes of an assembler or interpreter) MIT AVL Trees / AVL Sort (video) AVL Trees (video) AVL Tree Implementation (video) Split And Merge    Splay trees\n In practice: Splay trees are typically used in the implementation of caches, memory allocators, routers, garbage collectors, data compression, ropes (replacement of string used for long text strings), in Windows NT (in the virtual memory, networking and file system code) etc CS 61B: Splay Trees (video) MIT Lecture: Splay Trees:  Gets very mathy, but watch the last 10 minutes for sure. Video      Red/black trees\n These are a translation of a 2-3 tree (see below). In practice: Red–black trees offer worst-case guarantees for insertion time, deletion time, and search time. Not only does this make them valuable in time-sensitive applications such as real-time applications, but it makes them valuable building blocks in other data structures which provide worst-case guarantees; for example, many data structures used in computational geometry can be based on red–black trees, and the Completely Fair Scheduler used in current Linux kernels uses red–black trees. In the version 8 of Java, the Collection HashMap has been modified such that instead of using a LinkedList to store identical elements with poor hashcodes, a Red-Black tree is used Aduni - Algorithms - Lecture 4 (link jumps to starting point) (video) Aduni - Algorithms - Lecture 5 (video) Red-Black Tree An Introduction To Binary Search And Red Black Tree    2-3 search trees\n In practice: 2-3 trees have faster inserts at the expense of slower searches (since height is more compared to AVL trees). You would use 2-3 tree very rarely because its implementation involves different types of nodes. Instead, people use Red Black trees. 23-Tree Intuition and Definition (video) Binary View of 23-Tree 2-3 Trees (student recitation) (video)    2-3-4 Trees (aka 2-4 trees)\n In practice: For every 2-4 tree, there are corresponding red–black trees with data elements in the same order. The insertion and deletion operations on 2-4 trees are also equivalent to color-flipping and rotations in red–black trees. This makes 2-4 trees an important tool for understanding the logic behind red–black trees, and this is why many introductory algorithm texts introduce 2-4 trees just before red–black trees, even though 2-4 trees are not often used in practice. CS 61B Lecture 26: Balanced Search Trees (video) Bottom Up 234-Trees (video) Top Down 234-Trees (video)    N-ary (K-ary, M-ary) trees\n note: the N or K is the branching factor (max branches) binary trees are a 2-ary tree, with branching factor = 2 2-3 trees are 3-ary K-Ary Tree    B-Trees\n Fun fact: it\u0026rsquo;s a mystery, but the B could stand for Boeing, Balanced, or Bayer (co-inventor). In Practice: B-Trees are widely used in databases. Most modern filesystems use B-trees (or Variants). In addition to its use in databases, the B-tree is also used in filesystems to allow quick random access to an arbitrary block in a particular file. The basic problem is turning the file block i address into a disk block (or perhaps to a cylinder-head-sector) address B-Tree B-Tree Datastructure Introduction to B-Trees (video) B-Tree Definition and Insertion (video) B-Tree Deletion (video) MIT 6.851 - Memory Hierarchy Models (video) - covers cache-oblivious B-Trees, very interesting data structures - the first 37 minutes are very technical, may be skipped (B is block size, cache line size)      k-D Trees     Great for finding number of points in a rectangle or higher dimension object A good fit for k-nearest neighbors Kd Trees (video) kNN K-d tree algorithm (video)    Skip lists     \u0026ldquo;These are somewhat of a cult data structure\u0026rdquo; - Skiena Randomization: Skip Lists (video) For animations and a little more detail    Network Flows     Ford-Fulkerson in 5 minutes — Step by step example (video) Ford-Fulkerson Algorithm (video) Network Flows (video)    Disjoint Sets \u0026amp; Union Find     UCB 61B - Disjoint Sets; Sorting \u0026amp; selection (video) Sedgewick Algorithms - Union-Find (6 videos)    Math for Fast Processing     Integer Arithmetic, Karatsuba Multiplication (video) The Chinese Remainder Theorem (used in cryptography) (video)    Treap     Combination of a binary search tree and a heap Treap Data Structures: Treaps explained (video) Applications in set operations    Linear Programming (videos)     Linear Programming Finding minimum cost Finding maximum value Solve Linear Equations with Python - Simplex Algorithm    Geometry, Convex hull (videos)     Graph Alg. IV: Intro to geometric algorithms - Lecture 9 Geometric Algorithms: Graham \u0026amp; Jarvis - Lecture 10 Divide \u0026amp; Conquer: Convex Hull, Median Finding    Discrete math     Computer Science 70, 001 - Spring 2015 - Discrete Mathematics and Probability Theory Discrete Mathematics by Shai Simonson (19 videos) Discrete Mathematics Part 1 by Sarada Herke (5 videos)    Machine Learning     Why ML?  How Google Is Remaking Itself As A Machine Learning First Company Large-Scale Deep Learning for Intelligent Computer Systems (video) Deep Learning and Understandability versus Software Engineering and Verification by Peter Norvig   Google\u0026rsquo;s Cloud Machine learning tools (video) Google Developers' Machine Learning Recipes (Scikit Learn \u0026amp; Tensorflow) (video) Tensorflow (video) Tensorflow Tutorials Practical Guide to implementing Neural Networks in Python (using Theano) Courses:  Great starter course: Machine Learning - videos only - see videos 12-18 for a review of linear algebra (14 and 15 are duplicates) Neural Networks for Machine Learning Google\u0026rsquo;s Deep Learning Nanodegree Google/Kaggle Machine Learning Engineer Nanodegree Self-Driving Car Engineer Nanodegree Metis Online Course ($99 for 2 months)   Resources:  Books:  Python Machine Learning Data Science from Scratch: First Principles with Python Introduction to Machine Learning with Python   Machine Learning for Software Engineers Data School: http://www.dataschool.io/       Additional Detail on Some Subjects    I added these to reinforce some ideas already presented above, but didn't want to include them above because it's just too much. It's easy to overdo it on a subject. You want to get hired in this century, right?    SOLID\n Bob Martin SOLID Principles of Object Oriented and Agile Design (video) S - Single Responsibility Principle | Single responsibility to each Object  more flavor   O - Open/Closed Principle | On production level Objects are ready for extension but not for modification  more flavor   L - Liskov Substitution Principle | Base Class and Derived class follow ‘IS A’ Principle  more flavor   I - Interface segregation principle | clients should not be forced to implement interfaces they don\u0026rsquo;t use  Interface Segregation Principle in 5 minutes (video) more flavor   D -Dependency Inversion principle | Reduce the dependency In composition of objects.  Why Is The Dependency Inversion Principle And Why Is It Important more flavor      Union-Find\n Overview Naive Implementation Trees Union By Rank Path Compression Analysis Options    More Dynamic Programming (videos)\n 6.006: Dynamic Programming I: Fibonacci, Shortest Paths 6.006: Dynamic Programming II: Text Justification, Blackjack 6.006: DP III: Parenthesization, Edit Distance, Knapsack 6.006: DP IV: Guitar Fingering, Tetris, Super Mario Bros. 6.046: Dynamic Programming \u0026amp; Advanced DP 6.046: Dynamic Programming: All-Pairs Shortest Paths 6.046: Dynamic Programming (student recitation)    Advanced Graph Processing (videos)\n Synchronous Distributed Algorithms: Symmetry-Breaking. Shortest-Paths Spanning Trees Asynchronous Distributed Algorithms: Shortest-Paths Spanning Trees    MIT Probability (mathy, and go slowly, which is good for mathy things) (videos):\n MIT 6.042J - Probability Introduction MIT 6.042J - Conditional Probability MIT 6.042J - Independence MIT 6.042J - Random Variables MIT 6.042J - Expectation I MIT 6.042J - Expectation II MIT 6.042J - Large Deviations MIT 6.042J - Random Walks    Simonson: Approximation Algorithms (video)\n  String Matching\n Rabin-Karp (videos):  Rabin Karps Algorithm Precomputing Optimization: Implementation and Analysis Table Doubling, Karp-Rabin Rolling Hashes, Amortized Analysis   Knuth-Morris-Pratt (KMP):  TThe Knuth-Morris-Pratt (KMP) String Matching Algorithm   Boyer–Moore string search algorithm  Boyer-Moore String Search Algorithm Advanced String Searching Boyer-Moore-Horspool Algorithms (video)   Coursera: Algorithms on Strings  starts off great, but by the time it gets past KMP it gets more complicated than it needs to be nice explanation of tries can be skipped      Sorting\n Stanford lectures on sorting:  Lecture 15 | Programming Abstractions (video) Lecture 16 | Programming Abstractions (video)   Shai Simonson, Aduni.org:  Algorithms - Sorting - Lecture 2 (video) Algorithms - Sorting II - Lecture 3 (video)   Steven Skiena lectures on sorting:  lecture begins at 26:46 (video) lecture begins at 27:40 (video) lecture begins at 35:00 (video) lecture begins at 23:50 (video)      Video Series    Sit back and enjoy.\n  List of individual Dynamic Programming problems (each is short)\n  x86 Architecture, Assembly, Applications (11 videos)\n  MIT 18.06 Linear Algebra, Spring 2005 (35 videos)\n  Excellent - MIT Calculus Revisited: Single Variable Calculus\n  CSE373 - Analysis of Algorithms (25 videos)\n Skiena lectures from Algorithm Design Manual    UC Berkeley 61B (Spring 2014): Data Structures (25 videos)\n  UC Berkeley 61B (Fall 2006): Data Structures (39 videos)\n  UC Berkeley 61C: Machine Structures (26 videos)\n  OOSE: Software Dev Using UML and Java (21 videos)\n  UC Berkeley CS 152: Computer Architecture and Engineering (20 videos)\n  MIT 6.004: Computation Structures (49 videos)\n  Carnegie Mellon - Computer Architecture Lectures (39 videos)\n  MIT 6.006: Intro to Algorithms (47 videos)\n  MIT 6.033: Computer System Engineering (22 videos)\n  MIT 6.034 Artificial Intelligence, Fall 2010 (30 videos)\n  MIT 6.042J: Mathematics for Computer Science, Fall 2010 (25 videos)\n  MIT 6.046: Design and Analysis of Algorithms (34 videos)\n  MIT 6.050J: Information and Entropy, Spring 2008 (19 videos)\n  MIT 6.824: Distributed Systems, Spring 2020 (20 videos)\n  MIT 6.851: Advanced Data Structures (22 videos)\n  MIT 6.854: Advanced Algorithms, Spring 2016 (24 videos)\n  Harvard COMPSCI 224: Advanced Algorithms (25 videos)\n  MIT 6.858 Computer Systems Security, Fall 2014\n  Stanford: Programming Paradigms (27 videos)\n  Introduction to Cryptography by Christof Paar\n Course Website along with Slides and Problem Sets    Mining Massive Datasets - Stanford University (94 videos)\n  Graph Theory by Sarada Herke (67 videos)\n  Computer Science Courses     Directory of Online CS Courses Directory of CS Courses (many with online lectures)  Algorithms implementation     Multiple Algorithms implementation by Princeton University  Papers     Love classic papers? 1978: Communicating Sequential Processes  implemented in Go   2003: The Google File System  replaced by Colossus in 2012   2004: MapReduce: Simplified Data Processing on Large Clusters  mostly replaced by Cloud Dataflow?   2006: Bigtable: A Distributed Storage System for Structured Data  An Inside Look at Google BigQuery   2006: The Chubby Lock Service for Loosely-Coupled Distributed Systems 2007: Dynamo: Amazon’s Highly Available Key-value Store  The Dynamo paper kicked off the NoSQL revolution   2007: What Every Programmer Should Know About Memory (very long, and the author encourages skipping of some sections) 2010: Dapper, a Large-Scale Distributed Systems Tracing Infrastructure 2010: Dremel: Interactive Analysis of Web-Scale Datasets 2012: Google\u0026rsquo;s Colossus  paper not available   2012: AddressSanitizer: A Fast Address Sanity Checker:  paper video   2013: Spanner: Google’s Globally-Distributed Database:  paper video   2014: Machine Learning: The High-Interest Credit Card of Technical Debt 2015: Continuous Pipelines at Google 2015: High-Availability at Massive Scale: Building Google’s Data Infrastructure for Ads 2015: TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems 2015: How Developers Search for Code: A Case Study 2016: Borg, Omega, and Kubernetes  LICENSE    CC-BY-SA-4.0\n"},{"id":38,"href":"/InterviewPrep/Extras/CrackingCodingInterviewNotes/","title":"Cracking Coding Interview Notes","parent":"Interview Prep","content":"Cracking the Coding Interview Notes    Big O    Technical Questions    Look for BUD    DIY    Simplify and Generalize    Base Case and Build    Data Structure Brainstorm    Best Conceivable Runtime    What Good Code Looks Like     Correct Efficient Simple Readable Maintainable  Data Structures    Arrays and Strings     Hash Tables ArrayList \u0026amp; ResizableArray StringBuilder  Linked Lists     Creating a Linked List Deleting a Node from a Singly Linked List \u0026ldquo;Runner\u0026rdquo; Technique Recursive Problem  Stacks and Queues     Implement a Stack Implement a Queue  Trees and Graphs     Types of Trees Binary Tree Traversal Binary Heaps (Min-Heaps / Max-Heaps) Tries (Prefix Trees) Graphs Graph Search  Concepts and Al    "},{"id":39,"href":"/InterviewPrep/Extras/Flashcards/","title":"Flashcards","parent":"Interview Prep","content":"FlashCards    Use Anki Decks\n"},{"id":40,"href":"/InterviewPrep/Extras/Glossary/","title":"Glossary","parent":"Interview Prep","content":""},{"id":41,"href":"/InterviewPrep/Extras/OperationalExcellenceAssesment/","title":"Operational Excellence Assesment","parent":"Interview Prep","content":"Operational Excellence Assessment    Overview    How to Use    An outline operational assessment for a technical organization. Derived from \u0026ldquo;The Practice of Cloud System Administration\u0026rdquo;\nExample Matrix\n   Assesment Q1 Q2 Q3     RT 1 1 2   ER 2 3 3   MM 1 2 2   \u0026hellip;       Contents     Regular Tasks (RT) Emergency Response (ER) Monitoring and Metrics (MM) Capacity Planning (CP) Change Management (CM) New Product Introduction and Removal (NPI/NPR) Service Deployment and Decommissioning (SDD) Performance and Efficiency (PE) Service Delivery: Build Phase (SDBP) Service Delivery: Deployment Phase (SDDP) Toil Reduction (TR) Disaster Preparedness (DP)  \u0026hellip;\nRegular Tasks (RT)    Level 1: Initial     No playbook or out of date and unused Results are inconsistent Different people do tasks differently Processes aren\u0026rsquo;t documented Requests get lost / stalled  Level 2: Repeatable     There is a finite list of services supported by the team Each end-to-end process has enumerated steps with dependencies Each end-to-end proces is documented Sadly, There is some duplication of effort Sadly, some information needed by multiple tasks may be re-created  Level 3: Defined     The team has an SLA defined for most Requests Each step has a QA checklist Teams learn of precess changes by other teams ahead of time There is no or minimal duplication of effort Ability to turn up new capacity is repeatable  Level 4: Managed     Defined SLA is measured There are feedback mechanisms for all Steps There is periodic review of defects / reworks (e.g. weeklly) Postmortems are broadly published within a given time period Periodic review of alerts by affected and cross functional teams Process change requests require data to measure the problem being fixed Dashboards report data in business terms (not just technical) Every \u0026lsquo;failover procedure\u0026rsquo; has a \u0026lsquo;date of last use\u0026rsquo; dashboard Capacity needs are predicted ahead of time  Level 5: Optimizing     After process changes are made, before / after data is compared to determine success Process changes are reverted if before / after data shows no imporovment Process changes that have been acted on come from a variety of sources Cycle time enjoys month over month improvement Decisions are supported by modeling \u0026ldquo;What if\u0026rdquo; scenarios using extracted actual data  Emergency Response (ER)    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    Monitoring and Metrics (MM)    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    Capacity Planning    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    Change Management    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    New Product Introduction and Removal    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    Service Deployment and Decommissioning    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    Performance and Efficiency    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    Service Delivery: Build Phase    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    Service Delivery: Deployment Phase    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    Toil Reduction    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    Disaster Preparedness    Level 1: Initial    Level 2: Repeatable    Level 3: Defined    Level 4: Managed    Level 5: Optimizing    "},{"id":42,"href":"/InterviewPrep/LinksToRead/","title":"Links to Read","parent":"Interview Prep","content":"Links To Read    Great read! - [ ] My Path to Site Reliability Management\nLinks that still need to be read, digested, and sorted\nSystem Design     https://blog.pramp.com/how-to-succeed-in-a-system-design-interview-27b35de0df26 System Design Checklist System Design Primer Scalable Web Architecture Distributed Systems Reading List  Direct PDF Designing Distributed Systems Labs Good K8S Resource!   Designing Distributed Systems Free Book High Scalability Best of All Time (Blog) System Design Interview Checklist System Design Interview in 8 Steps Cracking System Design Resources for System Design Interview Prep System Design for Advanced Beginners Acing your Architecture Interview Architecture Interview System Design Interview Concepts to Know All Things Distributed (Blog) Real Big Architecture Video Series  Read Designing Data Intensive Applications Book Get System Design Interview Book\nLinux     Linux Interview Prep 30 Things to Do After Centos Installation  Programming / General Interview Prep     Google Codding Interview Guide to Preping for the Google Technical Interview How to Prepare Yourself for an Interview with Google Microsoft Interview Tips Tech Interview Handbook Coding Interview University Teach Yourself CS   SRE     Preparing the SRE Interview SRE Interview SRE Interview Checklist How I got a google SRE Job Designing and Operating Highly Available Software Systems at Scale Distributed Log-Processing Design Workshop My Path to Site Reliability Management How to get into SRE SRE Interview Questions Follow up to my google SRE Interview SRE Flash Cards OpsSchool  Read the SRE Book READ THE SRE BOOK Practice Non-Abstract Large System Design\nSQL     SQL DBA Training Plan How Microsoft Scaled SQL Server in Cloud (PDF) Troubleshooting SQL Server: Guide for Accidental DBA (PDF) PostgreSQL Replication PostgreSQL: Database Tuning PostgreSQL: Future of Sharding  Hardware     SSD vs HDD  Roadmaps     Developer Roadmap  Labs     KataCoda (Different Linux and K8s labs)  Kubernetes     Certified Kubernetes Application Developer (CKAD)  Sysadmin     Sysadmin Questions  Security     Fundamentals of Modern Cryptography  "},{"id":43,"href":"/Javascript/Angular/","title":"Angular","parent":"Javascript","content":"Angular    Running the App     Do this stuff  npm install   Still Error? Try this instead if you are using a cache!  npm install --no-audits --prefer-offline   Next run  npm build   Next  ng build   Serve the app up  ng serve --configuration=xxxx    Testing Framework Using Jest     navigate to root of project Create jest.config.js run ng test --coverage Check the coverage output  "},{"id":44,"href":"/Javascript/beginner_stuff/","title":"Beginner Stuff","parent":"Javascript","content":"Beginner Javascript     Javascript loads before the page does, if you run into a lot of undefined use an onload or put the script down lower  Function      Use functions for help controlling code flow\n for (var i=0; i \u0026lt; myarr.length; i++) { doThisStuff(myarr[i]) } function doThisStuff(arrThing) { console.log(arrThing.innerHtml) }    Getting Elements Out of A Table     The below can add an ID to a table row based on a matching element in the table Then use and #id in the css to add specific styling  ~\n// Get All Tables var tables = document.getElementsByTagName(\u0026quot;table\u0026quot;); // Iterate through all tables and check statuses for (var i = 0; i \u0026lt; tables.length; i++) { checkStatus(tables[i]) } // Check Statuses function checkStatus(table) { // get all the table rows var tbody = table.getElementsByTagName(\u0026quot;tbody\u0026quot;)[0]; var rows = tbody.getElementsByTagName(\u0026quot;tr\u0026quot;); // Iterate through all rows, check last column for value for (i=0; i \u0026lt; rows.length; i++) { var elements = rows[i].getElementsByTagName(\u0026quot;td\u0026quot;); var value = elements[elements.length - 1]; // Skip undefined, the first row (headers) contain no TD so undefined throws if (value == undefined) { continue; } if (value.innerHTML == 'something') { rows[i].id = 'somethingId' } } } "},{"id":45,"href":"/Links/CoolLinks/","title":"Cool Links","parent":"Links","content":"Cool Links    Learning     How to Learn Stuff Quickly  Computer Stuff    Computer Funny     Falshoods CS Students Believe Lessons Ops Learns the Hard Way Fancy Pants  Cool Computer People     Netmeister ze cool architect #1 Coder in Sweden Bob Monjian (Postgresql creator Blog)  Individuals    Paul Graham     Makers Schedule, Managers Schedule Fierce Nerds Think for Yourself  Work     Embrace the Grind Career Planning Planning a High Impact Career Career Planning In Depth Always be Quitting Efficiency is the Enemy Are Beliefs Like Clothes? Programmer Comppetency Matrix Reactive Manifesto Surfing Complexity(blog) Habits of Expert Software Developers  Zen / Mental     Zen Habits Mnmist Principals for Adults  Tools     ISO Creation RUFUS  "},{"id":46,"href":"/Linux/LinuxCentos/","title":"Linux( Centos)","parent":"Linux","content":"Centos Linux    How do I learn to be a Linux sysAdmin (iConrads)\nCommands to know     systemctl nmcli lsmod grep yum  Modifying Folders and Files     mkdir  create directory   rm  removes item rm \u0026lt;filename\u0026gt; remove recursively rm \u0026lt;foldername\u0026gt; -r remove everything, no prompt rm \u0026lt;foldername\u0026gt; -r -d -f    Mounting Disk     Mount Disk  check disk mounts lsblk\ncheck if disk is formatted with blkid\nMount the disk mount /dev/sdb1 /mnt\nExplore the disk ls /mnt df -h - disk space overview\nUnmount unmount /mnt or unmount /dev/sdb1\nLoading Kernel Modules    Use modprobe to load in kernel modules\n Load  modprobe \u0026lt;name\u0026gt;   Remove  modprobe -r \u0026lt;name\u0026gt;    Use modinfo to check details of module\n modinfo \u0026lt;name\u0026gt;  Reading NTFS    install the extra packages for enterprise linux\nyum install epel-release\ninstall ntfs-3g\nyum install ntfs-3g\nNetworking    See Networking Interfaces and connected / disconnected state\nnmcli d\nGet detailed information about interface (IP, DNS, Gateway, etc.)\nnmcli dev show \u0026lt;devname\u0026gt;\nRestart an interface\n Disable  sudo ifdown \u0026lt;interfacename\u0026gt;   Enable  sudo ifup \u0026lt;interfacename\u0026gt;    Edit Network interface settings\nnano vi/etc/sysconfig/network-scripts/ifcfg-\\\u0026lt;interfaceName\\\u0026gt;\nRestart Network\nsystemctl restart network\nLaptop -\u0026gt; Server Bridge    Using a Centos Computer with a network connection to ethernet bridge one that does not have a network connection - Bridging with Centos\n Plug everything up from the laptop computer check the state of the network interfaces and get devicename of ethernet  nmcli device record device name for \u0026lsquo;ethernet\u0026rsquo; TYPE (e.g. enp5s0)   Enable shared IPv4 Mode  nmcli connection add type ethernet ifname \u0026lt;DEVICENAME\u0026gt; ipv4.method shared con-name local   Bring up the new local connection  nmcli connection up local nmcli device verify the Device Name now shows a \u0026lsquo;connected\u0026rsquo; state with the Conection Name \u0026lsquo;local\u0026rsquo;   On the receiving machine (e.g. server) bring up the ethernet interface  nmcli device record ethernet device name sudo ifup \u0026lt;devicename\u0026gt; nmcli device verify the interface is Connected    Updates / Installs    Check for updates\nyum check update\nUpdate all\nyum update\nVirtual Machines    Install KVM on CentOS 8 Headless Server Install KVM on CentOS 7 Headless Server\n"},{"id":47,"href":"/Linux/LinuxSignlals/","title":"Linux Signlals","parent":"Linux","content":"Linux Signals    Resources     Linux Signals Overview  "},{"id":48,"href":"/Mental/ComputationalThinking/","title":"Computational Thinking","parent":"Mental","content":"Computational Thinking    Overview     Abstraction Automation Analysis  "},{"id":49,"href":"/Mental/RandomTips/","title":"Random Tips","parent":"Mental","content":"Random Tips    IT Tips     Programming is a people problem more than an IT problem Remember Black Swan events Use \u0026lsquo;Boring\u0026rsquo; Tech Multi-tasking does not exist. Do one thing well or many things poorly \u0026ldquo;Whole Ass one thing don\u0026rsquo;t half ass many\u0026rdquo; - RS Perfect is the enemy of the Good. Worse is Better corralary \u0026lsquo;Good Enough\u0026rsquo; is the enemy of \u0026lsquo;actually good\u0026rsquo; Beware Dunning Kruger Murder your darlings Don\u0026rsquo;t be a jerk. People generally mean well Software Maintenance is 75% TCO, Ops is the remaining 75% First and foremost define your goal  Random Quotes     \u0026ldquo;Complex systems fail in complex ways\u0026rdquo; (Bellovin)  Avoid \u0026lsquo;Second System Syndrome\u0026rsquo;     Software is living and you can\u0026rsquo;t forsee all futures relentlessly cut design features you don\u0026rsquo;t need write enough to solve the problem, make it easy to test, then test the fsck out of it! Chase the MVP, create the basics and iterate Wherever possible, Refactor instead of rewrite Don\u0026rsquo;t try to make everything better at the same time, define an area to be improved in the next version and do that It is much better to underpromise and over DELIVER  "},{"id":50,"href":"/Mental/StressReduction/","title":"Stress Reduction","parent":"Mental","content":"Stress Reduction    Tips (Results May Vary)     Narccacistic Personality Reduce Evening Exercise Less Heavy Meals Create better sleep routine Meditate Stay Hydrated No Devices before bed Mindfullness  Pay Attention to the Now Move Slower Fagit about it Speak up   GTT  \u0026lsquo;next step\u0026rsquo; 2-min rule    Links     7 things to make life efforless Lazy Manifesto  "},{"id":51,"href":"/Microservices/Kubernetes/BasicKubernetes/","title":"Basic Kubernetes","parent":"Microservices","content":"Basic Kubernetes    Resources     KataCoda - Kubernetes Kubernetes 101 (learn Kubernetes in 10 Days) Kubernetes the Hard Way MiniKube Kubernetes Learning Path Kubernetes Tutorials(Interactive) Kubernetes Lab with KVM K8S on Centos 7 Getting Started with KVM and K8s Learn Kubernetes Basics   Overview    Kubernetes is an Orchestration and Control Plane for docker images. Similar to docker swarm.\nKey Terms    Pods     Basic unit for running containers inside of Kubernetes Provides a way to set environment variables, mount storage, and feed information into a container Pods are responsible for running the container and every pod holds at least one container and controls the execution of that container when all containers exit the pod dies  Replica Sets     Ensures that a set of identially configured Pods are running at the desired replica count Replaces one if one pod dies \u0026ldquo;low-level\u0026rdquo; type in kubernetes, less referred to than \u0026lsquo;Deployments\u0026rsquo; and DaemonSets  Secrets     Used to store non-public information such as tokens, certs, or passwords attached to Pods at runtime Base 64 encoded at rest but decoded when attached to a pod attached as files or environment variables Use add-on encryption for actual encryption (not just encoded)  Deployments     High level abstraction that controls deploying and maintaining a set of Pods Uses a ReplicaSet to keep the Pods running, but offers sophisticated logic for deploying, updating, and scaling a set of Pods Support rolling updates and rollbacks Rollouts can be paused  DaemonSets     Provide a way to ensure that a copy of a Pod is running on every node in the cluster Adjusts as a cluster grows / shrinks, DaemonSet spreads these specific Pods across all the nodes One frequent patterns is to install or configure software on each host node  Ingresses     Route traffic to and from the cluster declare that traffic ought to be channeled from the outside of the cluster into destinations inside the cluster Provide a single SSL endpoint for many applications Many different implementations for customization  CronJobs     Provide a method for scheduling execution of Pods Used for running periodic tasks like backups, reports, and automated tests Use common Cron syntax Part of the Batch API for creating short lived non-server tools  Custom Resource Definitions (CRD)     Provide an extension mechanism that cluster operators and developers can use to create own resource type Defines a new resource type, tells Kubernetes about it Once a new resource type is added, a new instance of that resource may be created Common pattern is to create a custom controller that watches for new CRD instances and responds accordingly   Launching Single Node Cluster    Uses Minikube\n Get Version  minikube version   Start Cluster  minikube start --wait=false   Enable Minikube dashboard  minikube addons enable dashboard    Kubectll is used as command line for K8s\n Get Cluster Details and Health  kubectl cluster-info   View Nodes  kubectl get nodes   Create Container, get status of deployment, and expose http port  kubectl create deployment first-deployment --image=katacoda/docker-http-server kubectl get pods kubectl expose deployment first-deployment --port=80 --type=NodePort    "},{"id":52,"href":"/Microservices/Microservices/","title":"Microservices","parent":"Microservices","content":"Microservices    Resources     What I Wish I Knew About Microservices  What I Wish I Knew Notes     Costs of Microservices  You are using a distributed system (complex) Everything is an RPC Everything is a tradeoff You end up building around problems rather than solving them You trade complexity for politics You keep your biases (I like this language / tool / framework)   RPC  HTTP / REST Gets complicated quickly  Why are you using HTTP symantics?   JSON needs a schema (lacks types) RPCs are slower than PCs Servers are not browsers   Many Repositories Operational Issues Monitoring  Require a standarized dashboard for services from the start and build them in for free (created on initial service creation) Want to be able to perform traces   Performance  Doesn\u0026rsquo;t matter until it does \u0026lsquo;Good\u0026rsquo; not required but \u0026lsquo;known\u0026rsquo; is   Fanout  Need distributed tracing   Failure Testing  You don\u0026rsquo;t opt in, like it or not we failure test your service    "},{"id":53,"href":"/OldNotes/2019July_GreenNotebook/","title":"2019 July Green Notebook","parent":"OldNotes","content":"July 2019 - July 2020 Notebook    Oct    Alerting     4 Golden signals  Latency Traffic Errors Saturation   Actional Alerts   "},{"id":54,"href":"/PowerShell/PowerShell_BestPractices/","title":"Power Shell Best Practices","parent":"PowerShell","content":"PowerShell Best Practices    General Best Practices     Verb-Noun Common Verbs from get-verb Singular Noun What-If Outbuffer Measure-command Allow Empty Collection Test with Pester Make use of metadata to validate (e.g. Parameter Sets)  Done create code to perform actions you can get the metadata to perform. Use your time to develop code that benefits your organization CmdletBinding specifies function level metadata and explicitly creates an advanced function [Paarameter] specifies param level metadata and implicitly creates an advanced function    Get Error Info    get type for catching\n$error[0].exception.getType().FullName  Strict Script Running    Best to develop scripts with strict checks on\nset-strict -version latest  Version meanings\n 1.0  Prohibits references to uninitialized variables, except for uninitialized variables in strings.   2.0  Prohibits references to uninitialized variables. This includes uninitialized variables in strings. Prohibits references to non-existent properties of an object. Prohibits function calls that use the syntax for calling methods.   3.0  Prohibits references to uninitialized variables. This includes uninitialized variables in strings. Prohibits references to non-existent properties of an object. Prohibits function calls that use the syntax for calling methods. Prohibit out of bounds or unresolvable array indexes.   Latest  Selects the latest version available. The latest version is the most strict. Use this value to make sure that scripts use the strictest available version, even when new versions are added to PowerShell.    Performance     PowerShell is quirky If you\u0026rsquo;re aware of multiple techniques to accomplish something, and you\u0026rsquo;re writing a production script that will be dealing with large data sets (meaning performance will become a cumulative factor), then test the performance using Measure-Command or some other tool.  Function Begin,Process,End    Functions can accept multiple values down a pipeline, begin, process, and end are used to perform function tasks. Begin - done once before any processing on objects down the pipeline Process - done for each of the objects pushed down the pipeline End - done for cleanup at the end\nget-childitem | write-logstuff\nfunction write-logstuff { param { # parameters here } begin { # do setup like making sure the output file for the log exists } process { # write each of the items into the log we confirmed exists } end { # close out the file or do final processing } } Use CIM not WMI      WMI is being depreciated :/\n  WMI Depreciation\n$vols = Get-CimInstance -ClassName Win32_Volume $vols[0].CimInstanceProperties | Select-Object Name,Value\n  "},{"id":55,"href":"/PowerShell/PowerShell_IseTips/","title":"Power Shell Ise Tips","parent":"PowerShell","content":"PowerShell Ise Tips    Shortcuts     Shift+Alt - Multiline ctrl+k - comment ctrl+j - structures #region \u0026hellip; #endregion  "},{"id":56,"href":"/PowerShell/PowerShell_Links/","title":"Power Shell Links","parent":"PowerShell","content":"PowerShell Links    PowerShell Blogs     Kevin Marquette PowerShell \u0026lsquo;Explained\u0026rsquo; Blog  Best Practices     PowerShell Functions Best Practices MS DevBlog Functions Best Practices PowerShell Gallery Publishing Guidelines and Best Practices PSScript Analyzer Settings PS Best Practices and Style Guide Using Plaster to Quickly Template Projects About Splatting Parameters   Module Building     Module Basics Building PS Module Manifest Json Config Files  Flow Functions     Add What-If and Confirm Support to PS Scripts  Pester Testing     Pester Quickstart Pester Syntax and File Setup Pester Setup / Teardown Temp Environments Mock-ing Commands to Shim Data Layer Pester Tests \u0026lsquo;Dos and Donts\u0026rsquo; (at bottom) Beyond Pester 101: Unit Tests \u0026amp; Beyond Pester 102: Acceptance Tests Pester In Action: Playlist Operation Validation Framework  Debugging     Debugging PowerShell in VSCode  CIM     Details on all WMI/CIM Properties and Writables  PSObjects     Everything you Wanted to Know About PSObjects  Credentials with PowerShell     Supporting Credentials with PowerShell  "},{"id":57,"href":"/PowerShell/PowerShell_ModuleBuilding/","title":"Power Shell Module Building","parent":"PowerShell","content":"PowerShell Module Building    Directory Setup    ProjectRoot -DoStuffPro --Private ---format-stuff.ps1 ---calculate-stuff.ps1 --Public ---Get-Stuff.ps1 ---Set-Stuff.ps1 --DoStuffPro.psd1 --DoStuffPro.psm1 --config.json *optional -Tests --Get-Stuff.Tests.ps1 --Set-Stuff.Tests.ps1 -README.MD   Under the root folder setup the following folders  Project Name folder - for the contents Tests - for the pester tests README.md - for the info about the project   Under the Project Name Folder setup the following folders  Public - For the functions to make visible Private - For the functions to use internally projectname.psd1 - Manifest file to use for import projectname.psm1 - Defines how to handle imports config.json - hold default project config    Simple .psm1 Example    Simple Example of the .psm1\n#Get public and private function definition files. $Public = @( Get-ChildItem -Path $PSScriptRoot\\Public\\*.ps1 -ErrorAction SilentlyContinue ) $Private = @( Get-ChildItem -Path $PSScriptRoot\\Private\\*.ps1 -ErrorAction SilentlyContinue ) #Dot source the files Foreach($import in @($Public + $Private)) { Try { . $import.fullname } Catch { Write-Error -Message \u0026#34;Failed to import function $($import.fullname): $_\u0026#34; } } # Here I might... # Read in or create an initial config file and variable # Export Public functions ($Public.BaseName) for WIP modules # Set variables visible to the module and its functions only Export-ModuleMember -Function $Public.Basename Manifest (.psd1) File     These are a bit more complicated but can generally be created with a template Make sure the .psm1 is referenced Good Example  How to Do an Import     For a simple module like this just Import the .psd1 Import-Module .\\projectname.psd1  Using Config Files     Use config files under the directory of the imported module to hold configs Have a public Get / Set  "},{"id":58,"href":"/PowerShell/PowerShell_Pester/","title":"Power Shell Pester","parent":"PowerShell","content":"PowerShell Pester    About    Pester is for testing Powershell scripts\n Test files are written in form filetotest.Tests.ps1  Get-Stuff.Tests.Ps1 Catagorization works like Get-Stuff.Unit.Tests.ps1 / Get-Stuff.Acceptance.Tests.ps1   Tests should be placed in the same directory as the files they are testing  Setup    Make Sure The File You Are dot Sourcing Contains a Function with the name you are calling\u0026hellip;\n Use a BeforeAll block to dot source the necessary files Use a Describe block to name and specify a test  BeforeAll { . $PSScriptRoot/Get-DrsDisk.ps1 } Describe \u0026#39;Get-DrsDisk\u0026#39; { It \u0026#34;Given no parameters, it lists local disk space\u0026#34; { $diskSpace = Get-DrsDisk $diskSpace.count | Should -Be 2 } } If you are testing a module then use Import-Module .. -Force to make sure all dependencies are captured\n Use Context blocks to segment different tests  A BeforeAll Block can be used within a Context   Pester has it\u0026rsquo;s own special foreach syntax  Running     Run with Invoke-Pester while in the directory of the tests (will find all *.tests.ps1 files) or explicitly specify a tests file See all test details with Invoke-Pester -Output Detailed See Code Coverage with Invoke-Pester .\\get-stuff.Tests.ps1 -CodeCoverage .\\get-stuff.ps1  Mock     Use mock to shim the data layer for running tests by overriding functions. This may not always work (see links)  BeforeAll { # Import Get-STuff . $PSScriptRoot\\Get-Stuff.ps1 # Mock Data Layer Mock Get-ChildItem { \u0026#34;Hello There\u0026#34; } } Describe \u0026#39;Get-Stuff\u0026#39; { Context \u0026#34;Get stuff under current dir (implements get-childitem)\u0026#34; { It \u0026#34;Given no parameters, it gets stuff\u0026#34; { $a = Get-Stuff $a | Should -Be \u0026#34;Hello There\u0026#34; } } } When using deeply linked commands try to do serialize the content out to xml using export-clixml then deserialize it back into an object to return.. example\n# Serialize the result of \u0026#39;Get-Adapter\u0026#39; to xml Get-Adapter | Export-Clixml -Path \u0026#39;C:\\tmp\\adatperxml.xml\u0026#39; ... # inside the test copy the contents from the xml as a string $getAdapterMockObject = @\u0026#34; \u0026lt;Objs Version=\u0026#34;1.1.0.1\u0026#34; xmlns=\u0026#34;http://schemas.microsoft.com/powershell/2004/04\u0026#34;\u0026gt; \u0026lt;Obj RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;TN RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;T\u0026gt;Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapter\u0026lt;/T\u0026gt; ... #etc etc \u0026lt;S N=\u0026#34;ifDesc\u0026#34;\u0026gt;Hyper-V Virtual Ethernet Adapter\u0026lt;/S\u0026gt; \u0026lt;S N=\u0026#34;ifName\u0026#34;\u0026gt;ethernet_32771\u0026lt;/S\u0026gt; \u0026lt;S N=\u0026#34;DriverVersion\u0026#34;\u0026gt;10.0.14393.0\u0026lt;/S\u0026gt; \u0026lt;S N=\u0026#34;LinkLayerAddress\u0026#34;\u0026gt;00-15-5D-02-0F-00\u0026lt;/S\u0026gt; \u0026lt;/MS\u0026gt; \u0026lt;/Obj\u0026gt; \u0026lt;/Objs\u0026gt; \u0026#34;@ # Deserialize it back into an object $myobj = [System.Management.Automation.PSSerializer]::Deserialize($getAdapterMockObject) # Mock the cmdlet with the object Mock Get-NetAdapter { return $myobj } PSDrive / Registry     Pester sets up a temp drive on run, store anything here as it is cleaned up Pester sets up a temp registry, make any changes there  Testing Production     Pester could also be used to perform Acceptance and post deployment work in Production  "},{"id":59,"href":"/PowerShell/PowerShell_TipsTricks/","title":"Power Shell Tips Tricks","parent":"PowerShell","content":"Generally Useful Commands    Quick PowerShell Hop Into Another Computer    Enter-PsSession ServerName01 #Alias etsn ServerName01 [\u0026lt;servername01\u0026gt;]: exit See All Commands from Session    get-history\nSee all available keybindings    ctrl+shift+alt+? \nTab Completion     Tab Completion with Wild Cards*  *keyword* + TAB   Tab Completion with Menu  get-adl + ctrl+space    See Results Before Assigning to Variable    Get-ChildItem | Tee-Object -Variable var ...output... $var ...output again... Get-ChildItem | Tee-Object -FilePath C:\\temp\\output.txt Trace-Command to debug    Trace-Command * -Expression {\u0026lt;thing to run i.e. script or cmdlet\u0026gt;} -PSHost Pivot to Drive With Alternate Creds    net use \\\\server\\share /user:\u0026lt;domain\\username\u0026gt; \u0026lt;password\u0026gt; copy \\\\server\\share\\file.txt c:\\temp\\file.txt Remote COAF Fix    Get-Item -Path HKLM:\\system\\CurrentControlSet\\Control\\Lsa\\\tSet-ItemProperty -Path HKLM:\\system\\CurrentControlSet\\Control\\Lsa\\ -Name \u0026#39;crashonauditfail\u0026#39; -Value 1 Open explorer in current path    invoke-item . ii. Enumerate Dictionary / Hash Table    $hash = @{ \u0026#39;key\u0026#39; = \u0026#39;value\u0026#39; } foreach ($key in $hash.getEnumerator()) { Write-Host \u0026#34;$($key.name)= $($key.value)\u0026#34; } See Current Session Variables    Get-Variable Get-Variable | Out-String Manage Certificates    Complete CSR Request    Get-ChildItem Cert:\\LocalMachine\\My Import-Certificate -filepath \u0026#34;....\\certname.cer\u0026#34; -CertStoreLocation Cert:\\LocalMachine\\My Export and Import Pub/Priv Key Pair    $cert = Get-ChildItem Cert:\\LocalMachine\\My | Where {$_.FriendlyName -match \u0026#39;friendlyname\u0026#39;} Export-PfxCertificate -cert $cert -FilePath c:\\temp\\cert.pfx -Password (Read-Host \u0026#34;enter pw\u0026#34; -AsSecureString) Copy c:\\temp\\cert.pfx \\\\remotesrv\\c$\\temp\\cert.pfx etsn remotesrv Import-PfxCertificate -FilePath c:\\temp\\cert.pfx -CertStoreLocation Cert:\\LocalMachine\\My -Password (Read-Host \u0026#34;enter pw\u0026#34; -AsSecureString) General Admin    DNS    see how long a dns name has before ttl expires\nResolve-Dns \u0026lt;name\u0026gt; Tail a File    Get the tail of a file\nGet-Content -tail 100 # continues to wait for new input Get-Content -tail 100 -wait Remote Session Stuff    $session = new-pssession \u0026lt;computer\u0026gt; copy-item \u0026lt;source\u0026gt; \u0026lt;dest_on_remote\u0026gt; -tosession $session invoke-command $session {command} icm $session {command} Get available Aliases    get-alias\nVerify script is run as admin    # Requires-RunAsAdministrator Record Everything    start-transcript\nParam Stuff     Inherit all the -debug, -verbose, param goodness  [CmdletBinding()]   Make a param Mandatory  [Parameter(Mandatory=$true)]   Param must match a defined set of values  [ValidateSet('value','value2')]   Make sure param not null  [ValidateNotNullOrEmpty()]   Create Parameter Sets  Use a \u0026lsquo;DefaultParameterSetName\u0026rsquo; that doesn\u0026rsquo;t exist to allow an empty set    [CmdletBinding(DefaultParameterSetName=\u0026#34;ScriptBlock\u0026#34;)] param ( # Script block to test the performance of [Parameter(Mandatory=$true,ParameterSetName=\u0026#34;ScriptBlock\u0026#34;)] [ScriptBlock] $Command, [Parameter(ParameterSetName=\u0026#34;ScriptBlock\u0026#34;)] [ValidateRange(1,10000)] [Int32] $Iterations = 100 ) swtich ($PsCmdlet.ParameterSetName) { \u0026#34;ScriptBlock\u0026#34; { # Do This Stuff } }  Allow Param to be passed in the pipeline  [Parameter(ValueFromPipeline=$true)]   Add Alias for additional support  [Parameter(Mandatory=$true,ParameterSetName=\u0026#39;ComputerSpecified\u0026#39;,ValueFromPipeline=$True)] [Alias(\u0026#34;Computer\u0026#34;)] [String[]]$ComputerName  Use Splatting for passing param sets  $cimParams = @{ ClassName = Win32_Volume ComputerName = $Computer } Get-CimInstance @cimParams Lets make an object    Note Do NOT USE New-Object, considered depreciated\nMake a dictionary of properties and values and use to create a powershell object\n$obj.color \u0026gt; blue # Same Same but different $myobj = [pscustomobject]@{ location = \u0026#39;USA\u0026#39; color = \u0026#39;blue\u0026#39; } You can also set a custom object type, helpful when validating in custom modules by passing around\n$obj.color \u0026gt; blue # Same Same but different $myobj = [pscustomobject]@{ TypeName = \u0026#39;My.Object\u0026#39; location = \u0026#39;USA\u0026#39; color = \u0026#39;blue\u0026#39; } If you need to add additional properties you can\nSee all Object Properties     See all properties on an object \\\u0026lt;theobject\\\u0026gt;.psobject.Properties  Save an Object for later then get it back    Save an object into json, then get it back\n# make the object $myobj = [pscustomobject]@{ location = \u0026#39;usa\u0026#39; color = \u0026#39;blue\u0026#39; favorites = @{ food = \u0026#39;pizza\u0026#39; drink = \u0026#39;tea\u0026#39; } } # Drop into a json file $myobj | convertto-json -depth 5 | out-file \u0026#39;obj.json\u0026#39; # Get it back, -raw is critical $newObj = get-content \u0026#39;obj.json\u0026#39; -raw | convertfrom-json $newObj.favorites.food \u0026gt; pizza Object Properties and Converting to Hashtable    Look at detailed object properties\n$myObject.psobject.psobject.properties\nconvert to hashtable\n# Create a PSCustomObject (ironically using a hashtable) $ht1 = @{ A = \u0026#39;a\u0026#39;; B = \u0026#39;b\u0026#39;; DateTime = Get-Date } $theObject = new-object psobject -Property $ht1 # Convert the PSCustomObject back to a hashtable $ht2 = @{} $theObject.psobject.properties | Foreach { $ht2[$_.Name] = $_.Value } Get Drives     use Get-PSDrive to get all drives and virtual drives use Get-PSDrive -PSProvider 'FileSystem' to only get file drives  Measure command time     When you know multiple implementations of something, check the performance using Measure-Command  Measure-Command { Get-PSDrive -PSProvider \u0026#39;FileSystem\u0026#39;} #output here Measure-Command { Get-Drive } # output here Get CIM Values     You have to get into the CIM Properties and specifically extract the name and value  $vols = Get-CimInstance -ClassName Win32_Volume $vols[0].CimInstanceProperties | Select-Object Name,Value Passing Creds / Multiple computers    $comps = @(\u0026lsquo;comp1.contoso.com\u0026rsquo;,\u0026lsquo;comp2.contoso.com\u0026rsquo;) $cred = get-credential $cimSessions = New-CimSession -Credential $cred -ComputerName $comps $volumes = Get-CimInstance -CimSession $cimSessions -ClassName Win32_Volume\n Get specifics on all CIM Properties at PowerShell one You can also add filter queries on using WSQL, helps to reduce data returned for post-processing  # Query by process name without specifying class outside query Get-CimInstance -Query \u0026#34;SELECT * from Win32_Process WHERE name LIKE \u0026#39;P%\u0026#39;\u0026#34; # Query to filter out optical drives while specifying classname Get-CimInstance -ClassName Win32_Volume -Filter \u0026#34;DriveType != 5\u0026#34; Debugging     From VSCode Launch the Debugger targeting the terminal  Switch Statments     Use for control flow of multiple conditions  switch ($value) { 1 { write-host \u0026#34;value is 1\u0026#34;} 2 { write-host \u0026#34;value is 2\u0026#34;} Default { write-host \u0026#34;value is not 1 or 2\u0026#34;} }  Can compare for multiple values  switch ($value) { {1,\u0026#34;one\u0026#34; -contains $_} {write-host \u0026#34;value is one\u0026#34;} {2,\u0026#34;two\u0026#34; -contains $_} {write-host \u0026#34;value is two\u0026#34;} Default {write-host \u0026#34;value is not one or two\u0026#34;} } HTML Oddness     Chrome Requires that HTML and CSS matches the file encodings exactly When outputting HTML default to UTF8 using the following Otherwise you will bang your head on the wall with CSS not applying correctly  $HtmltoOutput | Out-File \u0026#34;page.html\u0026#34; -encoding utf8 Pop location     Quickly set and go back to a location  PS c:\\temp\u0026gt; push-location PS c:\\temp\u0026gt; cd .. PS c:\\\u0026gt; pop-location PS c:\\temp\u0026gt; Serialize a PowerShell Object to XML for Later Use    Export-CliXml\n# Serialize the result of \u0026#39;Get-Adapter\u0026#39; to xml Get-Adapter | Export-Clixml -Path \u0026#39;C:\\tmp\\adatperxml.xml\u0026#39; ... # inside the test copy the contents from the xml as a string $getAdapterMockObject = @\u0026#34; \u0026lt;Objs Version=\u0026#34;1.1.0.1\u0026#34; xmlns=\u0026#34;http://schemas.microsoft.com/powershell/2004/04\u0026#34;\u0026gt; \u0026lt;Obj RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;TN RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;T\u0026gt;Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapter\u0026lt;/T\u0026gt; ... #etc etc \u0026lt;S N=\u0026#34;ifDesc\u0026#34;\u0026gt;Hyper-V Virtual Ethernet Adapter\u0026lt;/S\u0026gt; \u0026lt;S N=\u0026#34;ifName\u0026#34;\u0026gt;ethernet_32771\u0026lt;/S\u0026gt; \u0026lt;S N=\u0026#34;DriverVersion\u0026#34;\u0026gt;10.0.14393.0\u0026lt;/S\u0026gt; \u0026lt;S N=\u0026#34;LinkLayerAddress\u0026#34;\u0026gt;00-15-5D-02-0F-00\u0026lt;/S\u0026gt; \u0026lt;/MS\u0026gt; \u0026lt;/Obj\u0026gt; \u0026lt;/Objs\u0026gt; \u0026#34;@ # Deserialize it back into an object $myobj = [System.Management.Automation.PSSerializer]::Deserialize($getAdapterMockObject) # Mock the cmdlet with the object Mock Get-NetAdapter { return $myobj } Register Scheduled Task     Create a scheduled task then export the XML Copy over the xml to another computer (d:\\temp\\task.xml) import the task on the other computer  enter-pssession computer2 [computer2]: PS c:\\user\u0026gt; Register-ScheduledTask -Xml (get-content d:\\temp\\task.xml -Raw) -TaskName \u0026#39;Task 1\u0026#39; -User \u0026#39;NT Authority\\System\u0026#39; Setting and Getting Variables    Basics     $ is the PowerShell indicator for \u0026lsquo;what follows is variable\u0026quot; $temp is the variable named temp  Multi-Setting     $tempOne = $tempTwo = \u0026quot;Hello\u0026quot; both $tempOne and $tempTwo directly equal \u0026ldquo;Hello\u0026rdquo;, $tempOne is not a reference to the other variable  Hash Variables     $hashOne = @{} $hashTwo = $hashOne the variable $hashTwo is NOT a copy of $hashOne, both reference the same object use $hashOne.Copy() to copy the hash  Getters / Setters     You can get and set variables with cmdlets rather than using the $ ref, this can be handy  $temp = \u0026#34;Hello\u0026#34; write-host $temp \u0026gt; \u0026#34;Hello\u0026#34; $ref = Get-Variable -Name temp $ref \u0026gt; Name Value --- ----- temp hello Set-Variable -Name temp -Value \u0026#34;goodbye\u0026#34; $ref \u0026gt; Name Value --- ------ temp goodbye Funkiness    .where vs Where-Object     Where-Object can be up to 10x slower than .where since it evaluates cmdlet binding  Get Functions    Function Virtual Drive     Functions are stored in a virtual drive  Get-ChildItem -Path function:\\ # See alll  Get-ChildItem -Path function:\\Format-Hex | select -property * # see specific (Get-ChildItem -Path function:\\Format-Hex).Definition # See code    Get-Command      Get-Command returns information about available commands\n Get-Command Format-Hex -syntax will return valid param sets Get-Command Format-Hex -ShowCommandInfo will return all information about the command (definition, name, module, etc.)    Get-Member retuns information about a variable\n Get-Member -InputObject $var returns information    Path Object From Get-ChildItem    [CmdletBinding()]\tParam ( [Parameter(Mandatory = $true, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true)] [Alias(\u0026#39;FullName\u0026#39;)] [string] $InputObject ) Start new PowerShell as Admin from existing non-admin PowerShell    \u0026gt; Start-Process Powershell -verb runas\n"},{"id":60,"href":"/PowerShell/PowerShell_ToolMaking/","title":"Power Shell Tool Making","parent":"PowerShell","content":"PowerShell ToolMaking    Tips     Remember Single Responsibility Principal  Make use of the pipeline You do not have Get-Service -Format HTML you have Get-Service | ConvertTo-Html Your functions shouldn\u0026rsquo;t handle for everything Remember how a pipeline behaves    Best Practices Style Guide     MS Encouraged Parameter Names MS Strongly Encouraged Guidelines Posh Powershell Style Guide PowerShell Gallery Publishing Guidelines MS PowerShell Docs Style Guide  "},{"id":61,"href":"/Python/Pip_Tips/","title":"Pip Tips","parent":"Python","content":"Pip Tips    Downloading Packages     Pip Download Docs downloading packages and dependencies  pip download \\\u0026lt;packageName\\\u0026gt;   downloading packages for specific platform  must use \u0026ndash;only-binary:all: as well pip download --platform manylinux1_x86_64 --only-binary=:all: --python 38 SomePackage   valid platforms  linux_x86_64 manylinux1_x86_64 win32 win_amd64   specify python version  --python-version 37   specify package version  SomePackage==1.0    Errors and Resolutions     On pip install \u0026ldquo;ERROR: Cannot uninstall \u0026lsquo;PyYAML\u0026rsquo;. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall\u0026rdquo;  Resolution: pip install --ignore-installed PyYAML This will attempt to install the newer version of PyYAML on top of the existing installation without uninstalling the old version. Once that completes, then try installing the other package.    "},{"id":62,"href":"/Python/PythonBasics/","title":"Python Basics","parent":"Python","content":"Python Basics    Links     W3 Schools Python Python Zero to Mastery HackerRank Python  Learning Checklist     Simple Logic, Function setup, Error Handling, Flow Control Objects and Polymorphism Network Interfaces All the methods of the 4 data types  Python \u0026lsquo;Gotchas\u0026rsquo;     Indentation\u0026hellip; remember the : Case Sensitive Methods and Functions  Some Info      All Built in Data Types\n Text  str   Numeric  int, float, complex   Sequence  list, tuple, range   Mapping  dict   Set  set, frozenset   Boolian  bool   Binary  bytes, bytearray, memoryview      4 Colllection Types\n Set  Store single multiple items in a single variable unorderd, unindexed, do not allow duplicates (see unordered) written with {} braces   List (array)  ordered, changeable, and allow duplicates written with [] brackets   Dictionary (hashtable)  key value pairs ordered, changeable, and does not allow duplicates   Tuple  ordered, unchangeable, and allow duplicates written with () brackets      Type-Specific Methods     type specific method operations generally only work on that type (e.g. strings) and nothing else As a rule of thumb the toolset is layered:  Generic operations that span multiple types are built-in functions (len(strvar) and len(arrvar)) Type-specific operations are method calls (srtvar.upper())    Logic Parsing    def isMyName(name): if (name.lower() == \u0026#34;Anthony\u0026#34;) : return True else : return False  if statements are evaluated left first then (if false) the right is evaluated. thats why something like the below will not work (you will get an exception)  if not person or person.name == \u0026#39;bob\u0026#39; Error Raising    raise Exception(\u0026#39;This is a Generic Exception Which is bad\u0026#39;) raise ValueError(\u0026#39;This is a specific Exception which is better\u0026#39;) Incrent Operators     Python does not use ++ or \u0026ndash; Use var += 1 and var -= 1 instead  Comparison Operators     Assignment = Equality == Less Than \u0026lt; Greater Than \u0026gt; And and or or  Strings     length  len(stringvar)   lower / uppercase  string.lower() string.upper()   Convert an integer to a string  use str()    a = [1,2,3,4] strvar = \u0026#34;\u0026#34; for i in a strvar += str(a[i]) strvar += \u0026#34; \u0026#34; i += 1 print(strvar)  String interpolation with fstrings  stringvar = f\u0026quot;My Name Is {namevar}\u0026quot;   String Trimming  remove leading and trailing whitespace  stringvar.strip()   remove leading (left) whitespace  stringvar.lstrip()   remove trailing (right) whitespace  stringvar.rstrip()      Math     Basic Rounding  general rounding Math.round(numvar) round down to whole Math.floor(numvar) round up to whole Math.ceil(numvar)   Sum of Array containing integers  sum(arrvar)   Min/Max  Return the max or min of passed values (good for preventing array overrun) max(i-2,0) - prevent an iterator from going below 0 on an array (out of bounds)    Loops    While\nwhile (i \u0026lt; len(arrvar)) : print(i) For\nfor x in range(6): print(x) else: print(\u0026#34;Finally finished!\u0026#34;) List (Arrays)      Add to an array\n at end  arrvar.append(\u0026quot;value\u0026quot;)   at given index (i)  arrvar.insert(i,\u0026quot;value\u0026quot;)   add list to list  arrvar.extend([1,2,3])      Array Splicing\n  a = [1,2,3,4,5] shift = 4 a[shift:] \u0026gt;\u0026gt;[5] a[:shift] \u0026gt;\u0026gt;[1, 2, 3, 4] a[shift:] + a[:shift] \u0026gt;\u0026gt;[5, 1, 2, 3, 4] +---+---+---+---+---+---+ | P | y | t | h | o | n | +---+---+---+---+---+---+ 0 1 2 3 4 5 6 -6 -5 -4 -3 -2 -1  Compare Arrays for Intersections  Convert to a \u0026lsquo;Set\u0026rsquo; then compare    arrvar1 = [1,2,3,4,5] arrvar2 = [5,6,7,8,9] set(arrvar1) \u0026amp; set(arrvar2) \u0026gt;\u0026gt; {5} s1 = \u0026#34;anthony\u0026#34; s2 = \u0026#34;hello\u0026#34; set(s1) \u0026amp; set(s2) \u0026gt;\u0026gt; {\u0026#39;h\u0026#39;,\u0026#39;o\u0026#39;}  List Sorting  listvar.sort() This does not have to be assigned to anything, python lists are mutable    Sets     Used to store multiple items in single varible Unordered Unindexed Do NOT allow duplicates Unchangable  thisset = {\u0026quot;apple\u0026quot;,\u0026quot;banana\u0026quot;,\u0026quot;cherry\u0026quot;}   Methods  add() clear() copy() difference() difference_update() discard() intersection() intersection_update() isdisjoint() issubset() issuperset() pop() remove() symmetric_difference() symmectric_difference_update() union() update()    Tuple    Dictionary (Hashtable)    leet code tip - Dictionaries are case sensitive, if a question mentions case sensitive lookups specifically, may be wanting a dictionary\n Key Value Pairs  dict = {'key1': 'Valuex'}    Classes    Note: if you get \u0026ldquo;takes 1 positional argument but 2 were given\u0026rdquo; often raised when you try to pass an argument through a method in a class without adding self as an argument\n  Pros\n Provide Inheritance Provide Composition Multiple instances customization via inheritance Operator overloading    Methods\n Made sure you have self as an input or you\u0026rsquo;ll get an error    class Dog: kind = \u0026#39;canine\u0026#39; # class variable shared by all instances def __init__(self, name): self.name = name # new name for each dog self.tricks = [] # new empty listing for each dog def add_trick(self, trick): self.tricks.append(trick) \u0026gt;\u0026gt; d = Dog(\u0026#39;Fido\u0026#39;) \u0026gt;\u0026gt; d.add_trick(\u0026#39;roll over\u0026#39;) \u0026gt;\u0026gt; d.tricks [\u0026#39;roll over\u0026#39;] Important Python Statements     Assignment  intvar = 1   Calls and expressions  log.write(\u0026quot;blah\u0026quot;)   print calls  print (f\u0026quot;hello {name}\u0026quot;)   if/elif/else for/else while/else pass break continue def return yield global nonlocal import from class try/except/finally raise assert with/as del  Null     Python does not have null it uses None  "},{"id":63,"href":"/Quotes/Quotes/","title":"Quotes","parent":"Quotes","content":"Quotes     Customers don\u0026rsquo;t measure you on how hard you tried, they measure you on what you delivered\n ~Steve Jobs\n You\u0026rsquo;ve got to start with the customer experience and work back toward the technology - not the other way around\n ~ Steve Jobs\n Every man has two lives, and the second one starts when he realizes that he only has one.\n ~ Confucius\n May the queries flow, and the pager stay silent\n ~ Traditional SRE blessing\n “According to Buddhism, the root of suffering is neither the feeling of pain nor of sadness nor even of meaninglessness. Rather, the real root of suffering is this never-ending and pointless pursuit of ephemeral feelings, which causes us to be in a constant state of tension, restlessness and dissatisfaction. Due to this pursuit, the mind is never satisfied. Even when experiencing pleasure, it is not content, because it fears this feeling might soon disappear, and craves that this feeling should stay and intensify. People are liberated from suffering not when they experience this or that fleeting pleasure, but rather when they understand the impermanent nature of all their feelings, and stop craving them. This is the aim of Buddhist meditation practices. In meditation, you are supposed to closely observe your mind and body, witness the ceaseless arising and passing of all your feelings, and realise how pointless it is to pursue them. When the pursuit stops, the mind becomes very relaxed, clear and satisfied. All kinds of feelings go on arising and passing – joy, anger, boredom, lust – but once you stop craving particular feelings, you can just accept them for what they are. You live in the present moment instead of fantasising about what might have been. The resulting serenity is so profound that those who spend their lives in the frenzied pursuit of pleasant feelings can hardly imagine it. It is like a man standing for decades on the seashore, embracing certain ‘good’ waves and trying to prevent them from disintegrating, while simultaneously pushing back ‘bad’ waves to prevent them from getting near him. Day in, day out, the man stands on the beach, driving himself crazy with this fruitless exercise. Eventually, he sits down on the sand and just allows the waves to come and go as they please. How peaceful!”\n ~ Yuval Noah Harari, Sapiens: A Brief History of Humankind\n \u0026ldquo;The pursuit of an easier life resulted in much hardship, and not for the last time. It happens to us today. How many young college graduates have taken demanding jobs in high-powered firms, vowing that they will work hard to earn money that will enable them to retire and pursue their real interests when they are thirty-five? But by the time they reach that age, they have large mortgages, children to school, houses in the suburbs that necessitate at least two cars per family, and a sense that life is not worth living without really good wine and expensive holidays abroad. are they supposed to do, go back to digging up roots? No, they double their efforts and keep slaving away\u0026rdquo;\n ~ Yuval Noah Harari, Sapiens: A Brief History of Humankind\n"},{"id":64,"href":"/README/","title":"Readme","parent":"","content":"This is a personal Wiki (aka Digital Gargen)\nInspired by - https://github.com/nikitavoloboev/knowledge/blob/master/SUMMARY.md\n"},{"id":65,"href":"/Resume/ResumeTips/","title":"Resume Tips","parent":"Resume","content":"Resume Tips    Resources     45 Quick Resume Changes Every Question about Every Skill on your Resume Powerful Action Verbs for your Resume Make Sure Resume Bullets Matter   "},{"id":66,"href":"/ReverseEngineering/Ghidra/","title":"Ghidra","parent":"Reverse Engineering","content":"Ghidra Software Reverse Engineering    Resources     Ghidra Homepage  "},{"id":67,"href":"/SQL/DesignConsiderations/","title":"Design Considerations","parent":"SQL","content":"Design Considerations    General Database Design    Links     Microsoft SQL Server Index Architecture and Design Guide Checklist for Designing and Reviewing SQL Server Architecture SQL Server Database Design Best Practices Tutorial Microsoft Database Engine Tuning Advisor  One Database with Multiple Schema or Multiple Databases    Links     Multiple Schema Versus Multiple Databases  Considerations     Are most users in the same location or using the same access path? Do the applications have the same administrative support staff? Do the applications have compatible availability requirements? Do the applications have compatible database and OS version requirements and upgrade paths? Are the applications reasonably similar in functionality and load characteristics? Do the appllications have the same usage level (e.g QA, development, production, maintenance, etc.)  "},{"id":68,"href":"/SQL/Postgresql/","title":"Postgresql","parent":"SQL","content":"Postgresql    Links     PostgreSQL: Introduction and Concepts PostgreSQL: Database Tuning PostgreSQL: Future of Sharding Other momjian presentations(tuning) Other momjian presentations (Administration)  "},{"id":69,"href":"/SQL/RenameSqlServer/","title":"Rename SQL Server","parent":"SQL","content":"Renaming a Server Hosting SQL    Links    MS Docs\nSteps      Ensure that a certificate has been requested and updated containing the new name for secure SQL comms\n  Have DNS create the new A Record\n  Rename the Server\n  Have DNS drop the old A Record\n  Have DNS create the CNAME pointing to the New A Record\n  Check the old name using the SQL SELECT @@SERVERNAME AS 'Server Name';\n  Run the following SQL\n EXEC sp_dropserver '\u0026lt;old_name\u0026gt;'; GO EXEC sp_addserver '\u0026lt;new_name\u0026gt;', local; GO    Restart SQL Server (service)\n  Verify the new name with SELECT @@SERVERNAME AS 'Server Name';\n  "},{"id":70,"href":"/SQL/SSPI_for_AG/","title":"Sspi for Ag","parent":"SQL","content":"SSPI for Availability Group    Link     Configure Kerberos for Avvailability Groupos  Notes    BLUF: To allow kerberos auth you need to create Server Principal Names for the SQL Servers and the AG listener for both the instance name and the listening ports for the service account\n assumptions  SQL Server 2016 SQL is running on 1433 Listener is running on 5100   Create SPN for  domain\\sqlserviceacct  MSSQLSvc/node1.domain.com:1433 MSSQLSvc/node2.domain.com:MSSQL2016 MSSQLSvc/node2.domain.com:1433 MSSQLSvc/node2.domain.com:1433 MSSQLSvc/SQLAG:1433 MSSQLSvc/SQLAG.domain.com:1433 MSSQLSvc/SQLAG:MSSQL2016 MSSQLSvc/SQLAG:5100 MSSQLSvc/SQLAG.domain.com:5100 MSSQLSvc/SQLAG.domain.com:MSSQL2016      "},{"id":71,"href":"/SQL/TroubleshootingSql/","title":"Troubleshooting SQL","parent":"SQL","content":"Throubleshooting SQL    Resources     RedGate TroubleShooting SQL Server  Early Analysis    sys.dm_os_wait_stats     Identify any major resource waits in the system and os level  sys.dm_io_virtual_file_stats     Evidence of high latency associated with read / write operations Tell how much I/O is being performed by SQL How the I/O load is distributed Can be used with Physical Disk\\Avg. Disk Reads/sec and Physical Disk Avg  sys.dm_exec_query_stats     Investigate execution statistics for queries against database in plan cache Determine queries with highest accumulative reads, review associated execution plans  Page Life Expectancy     constant fluctuation in this an non-zero values for Free List Stalls/sec can indicate inadequately sized memory or queries are reading far too much data  Symptoms    high PAGEIOLATCH_SH waits     indicates sessions are experiencing delays in obtaining a latch for a buffer page lots of sessions or one in particular are requesting a lot of data pages not available in the buffer pool I/O is needed to retrieve the data Does not neccessarily mean slow disk is the bottleneck it may just be the victim of excessive I/O caused elsewhere  Locks    Schema-m     Schema modification Locks everything for the schema (Lifegaurds rotating shift everyone out of the pool)  "},{"id":72,"href":"/SRE/SRE_Links/","title":"Sre Links","parent":"SRE","content":"Links    SRE Teams     How to get Started / Organize your SRE Team Start and Asses your SRE Journey Building Blocks for SRE Implementing SLOs On-Call SRE Team Lifecycles SRE Reaching Beyond Walls SRE Documentation Organizing an SRE Team SRE Team Lifecycle Amazon Principles 12 -Factor App Overview of SRE Best Practices Google SRE Book Google SRE Workbook Dropbox SRE Career Ladder  Tools     List of Awsome SRE Tools  Random      Cascading Failures(Video)\n Cascading failures are at risk of requiring intervention during problem spike  Take down entire service don\u0026rsquo;t self heal no warning   Any system that is designed to failure is at risk of cascading failure Example: AWS DynamoDB outage in 2015 CLD (Causal Loop Diagram)  system dynamics modeling to identify potential cascading failures All +\u0026rsquo;s can cause cascade   Recovery  Can\u0026rsquo;t just scale out (get overstated) Reduce load until you can get sufficient capacity in place Disabling health checks temporarily help   Avoid Cascading Failures  Avoid accepting unbounded numbers of incoming requests Avoid dangerous client retry behavior (when you have control) Avoid crashing on bad input (poison pill) Avoid proximity-based failover without imposing maximum capacities (potential over-provisioning) Avoid work prompted by failure Avoid long startup times (makes autoscaling difficult)      Need for systems observability (blog)\n Everyday questions in war room  What other services are impacted? What is going wrong? Is this happening somewhere else? Did we deploy something? Is the impacting us? It’s Kafka. Right? What’s the reason for this increased error rate? Did we get a page? Something is wrong. We had a massive spike of alerts   How to Answer  Ingest all sorts of observability pillars  logs metrics traces   Use dashboards and cross-hairs to detect correlations Build correlations and reliably inform the stakeholders on contextual information       Troubleshooting a journey into the unknown (blog) How SREs Prepared for Black Friday  "},{"id":73,"href":"/SRE/SRE_WhitePaper/","title":"Sre White Paper","parent":"SRE","content":"SRE Whitepaper / PPT Outline    Generate SRE WhitePaper / PPT    Generate Docs     Service Overview Charter Playbook Service Documentation Best Practices Doc Postmortem Framework Production Readiness Review  Document Repository     Where would they go? DevOps would be good (wiki and repo) but not in prod A share would be good, but there is not an easy way to search A wiki would be good, but there is not a good way to store long scripts (would have to link) Should be able to replicate to other environments for ease of access  Key Tenants     Blameless Postmortems Management Buy-In Eliminate Toil Defined SLOs Defined Monitoring and Metrics \u0026lsquo;Operational Excellence\u0026rsquo; Public facing metrics (status Dashboard)  Team Organization     1 Week On-Call Kitchen Sink Type Org  TimeLine     Create plan pending mgmt buy in  Devils Advocate     What is Bad / What could go wrong? Why does this suck?  "},{"id":74,"href":"/SystemDesign/DevOps_OrgThoughts/","title":"Dev Ops Org Thoughts","parent":"System Design","content":"DevOps Thoughts    Links     Continuous Integration (Martin Fowler Blog)  CALMS     Devops summarized as CALMS  Culture Automation Lean Measurement Sharing    Culture     DevOps is a Tao  You can\u0026rsquo;t be it You can\u0026rsquo;t buy it You can package it It is a way It is a practice   You have to start small, and achieve buy in with wins  Scorecard your organization and re-evaluate every quarter   The first and formost priority is to align Managers, Development, and Operations teams to the same set of objectives, the #1 of which being improving the scorecard standing  The teams self score and not based on metrics (that could be gamed) BLAMELESS environment, the goal is not to establish blame but to improve the teams and organizations   Do you need SRE? It might be overkill for your org. It is hard do do correctly without a high degree of competency  Automation     Everything in Source Code Dev -\u0026gt; Test -\u0026gt; Production Infrastructure as code Grid of \u0026lsquo;Develop\u0026rsquo; / \u0026lsquo;Manually do\u0026rsquo; / \u0026lsquo;Purchase Software\u0026rsquo; / \u0026lsquo;Outsource\u0026rsquo;  Lean     Eliminate Low Value Activities and move quickly Continuous Integration Embracing faillure Blameless PostMortems  Measurement     Measuring Use and Outcomes are Key Suggested Metrics  Typical SRE Infrastructure Metrics Time from Dev to Prod Bug / Failure Rate MTBF (Mean Time Between Failure) / MTTR (Mean Time to Repair) / MTTF (Mean Time To Failure)    Sharing     Share responsibility and success The people who build an application should be involved in shipping and running it  Team Structures    Traditional DevOps    SRE Teams    Phases    Level 0 Org    Level 1 Org    Level 2 Org    "},{"id":75,"href":"/SystemDesign/DistributedComputing/","title":"Distributed Computing","parent":"System Design","content":"Distributed Computing    Fallacies of distributed computing     The network is reliable Latency is zero Bandwidth is infinite The network is secure Topology doesn\u0026rsquo;t change There is one administrator Transport cost is zero The network is homogeneous  CAP Theorem    It is impossible for a distributed data store to simultaneously provide more than 2 of the following\n Consistency  Every Read receives the most recent write or error   Availability  Every request receives a (non-error) response, without the guarantee that it contains the most recent write   Partition Tolerance  The system continues to operate despite an arbitrary number of messages being dropped (or delayed) by the network between nodes    You Cant Sacrifice Partition Tolerance Because the network is unreliable\n"},{"id":76,"href":"/SystemDesign/SystemDesignLinks/","title":"System Design Links","parent":"System Design","content":"System Design Links    General     System Design Primer Ops School Cirriculum Design System Checklist Numbers and Calculations Everyone Should Know  DevOps     Atlassian DevOps Framework DevOps Patterns and Anti-Patterns 12 DevOps Anti-Patterns Hacking Culture (building DevOps Culture) IT Revolution What is DevOps? (Agile Admins) Implement SRE in your organization in one year Cross Functional DevOps Teams Generate System Documentation Using Python We Don\u0026rsquo;t Use Kubernetes  Microsoft     Best Practices in Cloud Applications Application Architecture Design  Distributed Systems     Distributed Systems Lecture Distributed Computing for Young Bloods CAP - You Can\u0026rsquo;t Sacrifice Partition Tolerance PACELC Theorem (extended CAP) Parrallel Processing in Distributed Systems Intro to Big Data Processing  Microservices     Microservices Criticisms and Concerns Raspberry-pi-dramble Uber Engineering Microservices Architecture  Examples     Reddit System Design Following WSB Incident p1 Reddit System Design Following WSB Incident p2 Caching at Reddit  Heavy use of memcached  Key Value Store Slab allocation - certain sized chunks of memory   Workload Based Pools  scale pools independently based on utilization make reasonable failure predictions   Issues  consistency issues / race conditions No TTLs on warmup routes causing stale data Specify a TTL when warming up if your app relies on it      "},{"id":77,"href":"/WindowsTshoot/GroupPolicy/","title":"Group Policy","parent":"Windows TShoot","content":"Group Policy    GPResult    See existing group policy from a computer\n# User and computer policy in console gpresult /r  # Computer onlly policy gpresult /r /scope computer # save as html to file gpresult /r /h gpreport.html "},{"id":78,"href":"/WindowsTshoot/NetworkTroubleshooting/","title":"Network Troubleshooting","parent":"Windows TShoot","content":"Network Troubleshooting    Resources     Checking for tcpip packet loss on Windows PowerShell Network Monitoring Monitoring the Network Load with PowerShell  Checking for Packet Loss     Get Netstat with statistics  netstat -s -p tcp    "},{"id":79,"href":"/WindowsTshoot/RDPCryptoError/","title":"Rdpcrypto Error","parent":"Windows TShoot","content":"RDP Crypto Error      RDP Crypto error\n  Check permissions on C:\\ProgramData\\Microsoft\\Crypto\\RSA\\MachineKeys\n  "},{"id":80,"href":"/WindowsTshoot/SCOM/","title":"Scom","parent":"Windows TShoot","content":"SCOM    On endpoint Server     Stand up Server Ensure necessary FW rules are enabled Admin PowerShell to apply GPOs  gpupdate /force Check gpedit.msc  WSUS GPO Computer Configuration \u0026gt; Policies \u0026gt; Administrative Templates \u0026gt; Windows components \u0026gt; Windows Update     Open regedit Check Windows Update Settings  HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate  WUServer *WUStatusServer   If regkeys not set or not present try to set first   Admin PowerShell  wuaclt /detectnow   Check to see if the wuau (Windows Update) service is running Check the windows update logs  Get-WindowsUpdateLog  If error symsrv.dll missing is reported  Search C:\\Windows\\WinSxS for the file and copy over to C:\\Program Files\\Windows Defender        "},{"id":81,"href":"/APM/","title":"APM","parent":"","content":""},{"id":82,"href":"/ArcGis/","title":"ArcGis","parent":"","content":""},{"id":83,"href":"/Azure/","title":"Azure","parent":"","content":""},{"id":84,"href":"/Books/","title":"Books","parent":"","content":""},{"id":85,"href":"/categories/","title":"Categories","parent":"","content":""},{"id":86,"href":"/DevOpsTools/","title":"DevOpsTools","parent":"","content":""},{"id":87,"href":"/Fitness/","title":"Fitness","parent":"","content":""},{"id":88,"href":"/Formatting/","title":"Formatting","parent":"","content":""},{"id":89,"href":"/HomeLab/","title":"HomeLab","parent":"","content":""},{"id":90,"href":"/Ideas/","title":"Ideas","parent":"","content":""},{"id":91,"href":"/InterviewPrep/","title":"Interview Prep","parent":"","content":""},{"id":92,"href":"/Javascript/","title":"Javascript","parent":"","content":""},{"id":93,"href":"/Links/","title":"Links","parent":"","content":""},{"id":94,"href":"/Linux/","title":"Linux","parent":"","content":""},{"id":95,"href":"/Mental/","title":"Mental","parent":"","content":""},{"id":96,"href":"/Microservices/","title":"Microservices","parent":"","content":""},{"id":97,"href":"/OldNotes/","title":"OldNotes","parent":"","content":""},{"id":98,"href":"/PowerShell/","title":"PowerShell","parent":"","content":""},{"id":99,"href":"/Python/","title":"Python","parent":"","content":""},{"id":100,"href":"/Quotes/","title":"Quotes","parent":"","content":""},{"id":101,"href":"/Resume/","title":"Resume","parent":"","content":""},{"id":102,"href":"/ReverseEngineering/","title":"Reverse Engineering","parent":"","content":""},{"id":103,"href":"/SQL/","title":"SQL","parent":"","content":""},{"id":104,"href":"/SRE/","title":"SRE","parent":"","content":""},{"id":105,"href":"/SystemDesign/","title":"System Design","parent":"","content":""},{"id":106,"href":"/tags/","title":"Tags","parent":"","content":""},{"id":107,"href":"/WindowsTshoot/","title":"Windows TShoot","parent":"","content":""}]