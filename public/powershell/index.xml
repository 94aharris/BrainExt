<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShells on BrainExt</title>
    <link>localhost/powershell/</link>
    <description>Recent content in PowerShells on BrainExt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="localhost/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>localhost/PowerShell/PowerShell_BestPractices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/PowerShell/PowerShell_BestPractices/</guid>
      <description>PowerShell Best Practices    General Best Practices     Verb-Noun Common Verbs from get-verb Singular Noun What-If Outbuffer Measure-command Allow Empty Collection Test with Pester Make use of metadata to validate (e.g. Parameter Sets)  Done create code to perform actions you can get the metadata to perform. Use your time to develop code that benefits your organization CmdletBinding specifies function level metadata and explicitly creates an advanced function [Paarameter] specifies param level metadata and implicitly creates an advanced function    Get Error Info    get type for catching</description>
    </item>
    
    <item>
      <title></title>
      <link>localhost/PowerShell/PowerShell_IseTips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/PowerShell/PowerShell_IseTips/</guid>
      <description>PowerShell Ise Tips    Shortcuts     Shift+Alt - Multiline ctrl+k - comment ctrl+j - structures #region &amp;hellip; #endregion  </description>
    </item>
    
    <item>
      <title></title>
      <link>localhost/PowerShell/PowerShell_Links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/PowerShell/PowerShell_Links/</guid>
      <description>PowerShell Links    PowerShell Blogs     Kevin Marquette PowerShell &amp;lsquo;Explained&amp;rsquo; Blog  Best Practices     PowerShell Functions Best Practices MS DevBlog Functions Best Practices PowerShell Gallery Publishing Guidelines and Best Practices PSScript Analyzer Settings PS Best Practices and Style Guide Using Plaster to Quickly Template Projects About Splatting Parameters   Module Building     Module Basics Building PS Module Manifest Json Config Files  Flow Functions     Add What-If and Confirm Support to PS Scripts  Pester Testing     Pester Quickstart Pester Syntax and File Setup Pester Setup / Teardown Temp Environments Mock-ing Commands to Shim Data Layer Pester Tests &amp;lsquo;Dos and Donts&amp;rsquo; (at bottom) Beyond Pester 101: Unit Tests &amp;amp; Beyond Pester 102: Acceptance Tests Pester In Action: Playlist Operation Validation Framework  Debugging     Debugging PowerShell in VSCode  CIM     Details on all WMI/CIM Properties and Writables  PSObjects     Everything you Wanted to Know About PSObjects  Credentials with PowerShell     Supporting Credentials with PowerShell  </description>
    </item>
    
    <item>
      <title></title>
      <link>localhost/PowerShell/PowerShell_ModuleBuilding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/PowerShell/PowerShell_ModuleBuilding/</guid>
      <description>PowerShell Module Building    Directory Setup    ProjectRoot -DoStuffPro --Private ---format-stuff.ps1 ---calculate-stuff.ps1 --Public ---Get-Stuff.ps1 ---Set-Stuff.ps1 --DoStuffPro.psd1 --DoStuffPro.psm1 --config.json *optional -Tests --Get-Stuff.Tests.ps1 --Set-Stuff.Tests.ps1 -README.MD   Under the root folder setup the following folders  Project Name folder - for the contents Tests - for the pester tests README.md - for the info about the project   Under the Project Name Folder setup the following folders  Public - For the functions to make visible Private - For the functions to use internally projectname.</description>
    </item>
    
    <item>
      <title></title>
      <link>localhost/PowerShell/PowerShell_Pester/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/PowerShell/PowerShell_Pester/</guid>
      <description>PowerShell Pester    About    Pester is for testing Powershell scripts
 Test files are written in form filetotest.Tests.ps1  Get-Stuff.Tests.Ps1 Catagorization works like Get-Stuff.Unit.Tests.ps1 / Get-Stuff.Acceptance.Tests.ps1   Tests should be placed in the same directory as the files they are testing  Setup    Make Sure The File You Are dot Sourcing Contains a Function with the name you are calling&amp;hellip;
 Use a BeforeAll block to dot source the necessary files Use a Describe block to name and specify a test  BeforeAll { .</description>
    </item>
    
    <item>
      <title></title>
      <link>localhost/PowerShell/PowerShell_TipsTricks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/PowerShell/PowerShell_TipsTricks/</guid>
      <description>Generally Useful Commands    Quick PowerShell Hop Into Another Computer    Enter-PsSession ServerName01 #Alias etsn ServerName01 [&amp;lt;servername01&amp;gt;]: exit See All Commands from Session    get-history
See all available keybindings    ctrl+shift+alt+? 
Tab Completion     Tab Completion with Wild Cards*  *keyword* + TAB   Tab Completion with Menu  get-adl + ctrl+space    See Results Before Assigning to Variable    Get-ChildItem | Tee-Object -Variable var .</description>
    </item>
    
    <item>
      <title></title>
      <link>localhost/PowerShell/PowerShell_ToolMaking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/PowerShell/PowerShell_ToolMaking/</guid>
      <description>PowerShell ToolMaking    Tips     Remember Single Responsibility Principal  Make use of the pipeline You do not have Get-Service -Format HTML you have Get-Service | ConvertTo-Html Your functions shouldn&amp;rsquo;t handle for everything Remember how a pipeline behaves    Best Practices Style Guide     MS Encouraged Parameter Names MS Strongly Encouraged Guidelines Posh Powershell Style Guide PowerShell Gallery Publishing Guidelines MS PowerShell Docs Style Guide  </description>
    </item>
    
  </channel>
</rss>
