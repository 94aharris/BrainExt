<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SystemDesigns on BrainExt</title>
    <link>localhost/systemdesign/</link>
    <description>Recent content in SystemDesigns on BrainExt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="localhost/systemdesign/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>localhost/SystemDesign/DevOps_OrgThoughts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/SystemDesign/DevOps_OrgThoughts/</guid>
      <description>DevOps Thoughts    Links     Continuous Integration (Martin Fowler Blog)  CALMS     Devops summarized as CALMS  Culture Automation Lean Measurement Sharing    Culture     DevOps is a Tao  You can&amp;rsquo;t be it You can&amp;rsquo;t buy it You can package it It is a way It is a practice   You have to start small, and achieve buy in with wins  Scorecard your organization and re-evaluate every quarter   The first and formost priority is to align Managers, Development, and Operations teams to the same set of objectives, the #1 of which being improving the scorecard standing  The teams self score and not based on metrics (that could be gamed) BLAMELESS environment, the goal is not to establish blame but to improve the teams and organizations   Do you need SRE?</description>
    </item>
    
    <item>
      <title></title>
      <link>localhost/SystemDesign/DistributedComputing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/SystemDesign/DistributedComputing/</guid>
      <description>Distributed Computing    Fallacies of distributed computing     The network is reliable Latency is zero Bandwidth is infinite The network is secure Topology doesn&amp;rsquo;t change There is one administrator Transport cost is zero The network is homogeneous  CAP Theorem    It is impossible for a distributed data store to simultaneously provide more than 2 of the following
 Consistency  Every Read receives the most recent write or error   Availability  Every request receives a (non-error) response, without the guarantee that it contains the most recent write   Partition Tolerance  The system continues to operate despite an arbitrary number of messages being dropped (or delayed) by the network between nodes    You Cant Sacrifice Partition Tolerance Because the network is unreliable</description>
    </item>
    
    <item>
      <title></title>
      <link>localhost/SystemDesign/SystemDesignLinks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>localhost/SystemDesign/SystemDesignLinks/</guid>
      <description>System Design Links    General     System Design Primer Ops School Cirriculum Design System Checklist Numbers and Calculations Everyone Should Know  DevOps     Atlassian DevOps Framework DevOps Patterns and Anti-Patterns 12 DevOps Anti-Patterns Hacking Culture (building DevOps Culture) IT Revolution What is DevOps? (Agile Admins) Implement SRE in your organization in one year Cross Functional DevOps Teams Generate System Documentation Using Python We Don&amp;rsquo;t Use Kubernetes  Microsoft     Best Practices in Cloud Applications Application Architecture Design  Distributed Systems     Distributed Systems Lecture Distributed Computing for Young Bloods CAP - You Can&amp;rsquo;t Sacrifice Partition Tolerance PACELC Theorem (extended CAP) Parrallel Processing in Distributed Systems Intro to Big Data Processing  Microservices     Microservices Criticisms and Concerns Raspberry-pi-dramble Uber Engineering Microservices Architecture  Examples     Reddit System Design Following WSB Incident p1 Reddit System Design Following WSB Incident p2 Caching at Reddit  Heavy use of memcached  Key Value Store Slab allocation - certain sized chunks of memory   Workload Based Pools  scale pools independently based on utilization make reasonable failure predictions   Issues  consistency issues / race conditions No TTLs on warmup routes causing stale data Specify a TTL when warming up if your app relies on it      </description>
    </item>
    
  </channel>
</rss>
