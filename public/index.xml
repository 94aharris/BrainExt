<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BrainExt</title>
    <link>https://anthonybrainext.netlify.app/</link>
    <description>Recent content on BrainExt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://anthonybrainext.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/APM/AppDynamics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/APM/AppDynamics/</guid>
      <description>Application Insights    Overview    APM and Metrics offering with an on-prem component. Enterprise licensed. Pay for Infra. Can be used on Isolated Environment. Tested and popular.
Links      General PDFs
  Detailed On-Prem Architecture
  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/ArcGis/metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/ArcGis/metrics/</guid>
      <description>ArcGis Metrics    Steps     Either programatically or manually get a token to use in requests  http://server[:port]/arcgis/admin/generateToken Specify the web portal in the url field   Navigate to the server subsite admin page and test the token  Run https://127.0.0.1/&amp;lt;serversite&amp;gt;/&amp;lt;webadaptor&amp;gt;/admin/usagereports?f=json   Run a report to pull usage reports or logs  Usage reports can be used to see the site hits by product Logs can be used to see specific user hits per product Users may show as anonymous   Programatically pull the JSON with the token in order to evaluate Upsert the pulled data into a sql table and perform some analysis Enrich the pulled data with additional context (User info from AD, user location, etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Azure/AppInsights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Azure/AppInsights/</guid>
      <description>App Insights    Links     Add App Insights to Angular SPA Application Insights to JavaScript Add App Insights to Angular ..different take Add App Insights to Angular yet another way  Got it working this way    Notes     &amp;lsquo;Workspace Based&amp;rsquo; requires log analytics workspace Buffers user sessions so data not sent back to MS until page is closed Can use trace and log analytics  Angular Single Page App (SPA) Notes      Add instrumentation key to environments constants</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Azure/AppService/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Azure/AppService/</guid>
      <description>Azure App Service    Setup App Service    Getting Started Doc
Make Sure your App Service plan is set to the Free Tier
 Login to Azure and create new App Service Set the App Service to Free Tier (May have to turn off &amp;lsquo;Always on&amp;rsquo; if you already pushed your app)  Open VSCode Install the Azure App Service Extension Open the Extension and Authenticate with Azure Create a new .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Azure/RandomAzureResources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Azure/RandomAzureResources/</guid>
      <description>Random Azure Resources     Best Practices for Scaling Cloud Developer Basics  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Books/ReccomendedReading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Books/ReccomendedReading/</guid>
      <description>Reccomended Reading    Learning     A Mind for Numbers by Barbara Oakley  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Books/WayOfRockWarrior/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Books/WayOfRockWarrior/</guid>
      <description>Way of Rock Warrior    Key Tenants    Ego is killing you (no better / worse)    Real vs Phantom Fear    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/DevOpsTools/Ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/DevOpsTools/Ansible/</guid>
      <description>Ansible    Ansible is for the repeatable configuration of a server. Not for deploying the Virtual Machine, but configuring the machine once it is a running virtual machine. For the deployment of the VM see Vagrant</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/DevOpsTools/Vagrant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/DevOpsTools/Vagrant/</guid>
      <description>Vagrant    vagrant is for virtuals
Vagrant is a utility for provisioning and managing virtual machine environments. It does not do the configuration &amp;lsquo;inside&amp;rsquo; the VM. See Ansible
Resources     Tutorials from Hashicorp Vagrant Cheetsheet  Basics     Define a Vagrantfile cd into the folder with the file run execution with vagrant up  check for existing storage pools
 virsh pool-list --all  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Fitness/MealPrepBasics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Fitness/MealPrepBasics/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Fitness/NutritionBasics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Fitness/NutritionBasics/</guid>
      <description>Nutrition Basics    Things I&amp;rsquo;ve learned about nutrition for fitness and how I apply them.
My Key Tenants    1. This is a Lifestyle    This is not a diet. It is a lifestyle. Things may ebb and flow as you adjust to meet certain goals, but you must find something that works for you long term. Not long enough to lose 10 pounds. Feed your soul occasionally (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Fitness/Recipies/QuickSnacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Fitness/Recipies/QuickSnacks/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Fitness/Recipies/StandardBreakfast/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Fitness/Recipies/StandardBreakfast/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Fitness/Recipies/ThaiChicken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Fitness/Recipies/ThaiChicken/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Fitness/WorkoutBasics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Fitness/WorkoutBasics/</guid>
      <description>Workout Basics    Strength    Strength Curve Basics    Hypertrophy (Big vs Strong)    The &amp;lsquo;Big 3&amp;rsquo;    The &amp;lsquo;Super 6&amp;rsquo;    Cardio    Aerobic - I Can Breath     Maximum Aerobic Heart Rate  Anaerobic - I Can&amp;rsquo;t Breath    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Fitness/WorkoutRoutines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Fitness/WorkoutRoutines/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Formatting/HowToMarkdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Formatting/HowToMarkdown/</guid>
      <description>How to Markdown    Useful Markdown Links     MarkdownCheatSheet Full Markdown Guide Markdown Fireball   This is done This is Not Done :(  Code    Use for bits of code
bit of code
Use for lots of code (include language)
Lot of code Oh it&amp;#39;s a lot Images    Table       Assesment Q1 Q2 Q3     RT 1 1 2   ER 2 3 3   MM 1 2 2    In Document Links to Headers    The IDs are generated from the content of the header according to the following rules:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Formatting/Pandoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Formatting/Pandoc/</guid>
      <description>Pandoc    Overview of how I install and use Pandoc for Markdown -&amp;gt; whatever conversion.
Resources     Pandoc Docs Install Tex  Usage      Convert from markdown to format
 pandoc &amp;lt;file&amp;gt;.md -f markdown -t &amp;lt;destformat&amp;gt; -o &amp;lt;outputfilename&amp;gt;&amp;lt;.extension&amp;gt;    PDF Specific Conversion
 To convert to pdf, you&amp;rsquo;ll need to install tex (Loooong time) pandoc .\PythonBasics.md -f markdown -t pdf -o .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/HomeLab/BlogSetup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/HomeLab/BlogSetup/</guid>
      <description>Blog Setup    Resources     Homebrew on Linux Installing Hugo Hugo Quickstart  Blog Stack Overview     Using Netlify Using Hugo Using Centos 8  Setting up Hugo    Install Homebrew to the computer
/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34; Add brew command to path
test -d ~/.linuxbrew &amp;amp;&amp;amp; eval $(~/.linuxbrew/bin/brew shellenv) test -d /home/linuxbrew/.linuxbrew &amp;amp;&amp;amp; eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) test -r ~/.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/HomeLab/BrainExtApp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/HomeLab/BrainExtApp/</guid>
      <description>BrainExt Application    Resources     Gatsby Digital Garden (example) RoamSearch (example) Gitbook(Example) Everything I Know (Example)  His other page Learn-Anything    Potential Design     Frontend  Main Page with center content, sidebar on left side, top nav / search bar Sidebar has everything organized by folder / files Like the idea of the on-page graph to navigate by   Build Process  Build service to translate .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/HomeLab/HomeLabOverview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/HomeLab/HomeLabOverview/</guid>
      <description>Home Lab Overview    Big Server     Dell PowerEdge t605  User Manual Specs  24 GB RAM 4 TB Disk Space 2 Quad Core Processors OS: Centos 7   Notes  Memory is not optimally configured, future state would be to get it in a good configuration Windows Server 2012 is installed on a disconnected HDD Need to install NTFS reader to read the other drives (onto Centos 7) Need to bring up the ethernet interface by default as part of startup   Starting Up  Plug her in Boot her up F1 past the memory warning nmcli d - get the ethernet interface sudo ifup &amp;lt;ethdevice&amp;gt; - Bring up the ethernet      Laptop     Dell Something or other  Specs  6 GB RAM 1 TB Disk OS: Centos 8 with Dual boot to Windows 10   Notes  Disk is starting to fail&amp;hellip; Battery is starting to fail&amp;hellip; Possible drive failure on 1.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/HomeLab/KubernetesServer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/HomeLab/KubernetesServer/</guid>
      <description>Kubernetes Server    Overview    Get my big server running Kernel Virtual Machines (KVM) so I can use it to host Kubernetes / Docker. This will be so I can spin things up / blow them away without a ton of reconfiguration, ton of Azure spend, or bunch of RaspberryPi&amp;rsquo;s (currently).
I would like everything to be repeatable as much as possible (e.g. Ansible config or other) so the server isn&amp;rsquo;t a snowflake.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Ideas/ShrugGuyApi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Ideas/ShrugGuyApi/</guid>
      <description>ShrugGuyApi    Thoughts     Api to provide ShrugGuy Azure App Service Return a Shrug in html, json Add other ascii memes in other formats Add other content / pic / gif Add a /random option Add an option to get random based on mood Upload and get back sentiment of meme  Architecture    Web Queue Worker </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Ideas/TransferStuff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Ideas/TransferStuff/</guid>
      <description>Transfer Stuff    Overview    How to move stuff from one place to another
Hugging Face    git bash
cd d: cd workspaces mkdir huggingface git clone https://huggingface.co/repo D:\\workspaces\\huggingface\\reponame --depth 1  &amp;ndash;depth 1 is to save bandwidth and copies default main / master. Use &amp;ndash;branch &amp;lt;name&amp;gt; to otherwise specify
Scan, zip, transfer
R Packages    from R-Studio on an internet connected computer&amp;hellip;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/00-StudyPlan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/00-StudyPlan/</guid>
      <description>Study Plan    Overview    Leet Code Daily - Hacker Ranker
 System Design - 2 weeks (July 1 - 18)  Overview Topics Interview Question Steps Back of Envelope Calculation Scalability for Dummies High Level Tradeoffs Consistency Patterns Availability Patterns Non-Abstract Large System Design Distributed System Patterns Batch Computational Patterns DNS CDN Load Balancer Reverse Proxy Application Layer Database Cache Asynchronism Communication Security Non-Abstract Large System Design Possibly separate this into a separate section also (distributed systems)   Linux - 3 weeks (July 19 - August 7)  Shell CentOS Signals   Cloud Interview - 2 Weeks (August 9 - 20)  Concepts Azure Tools AWS Tools   Leet Code - 2 weeks (August 23 - September 3)  Practice Practice Practice   Algos / Data Struts - 2 weeks (August 23 - September 3)  Concepts Big-O Arrays and Strings Linked Lists Stacks and Queues Trees and Graphs Common Search Algorithms Recursion and Backtracking   DevOps - 1 Week (September 6 - 11)  Concepts / Operational Excellence Kubernetes Docker CI/CD Jenkins Ansible Vagrant   Networking Refresher - 1 week (September 13 - 18)  TCP/IP Common Ports and Protocols &amp;ldquo;What Happens When&amp;hellip;&amp;rdquo; Common Network Troubleshooting / Tools Common Network Topologies Practice Network Questions   Databases - 1 Week (September 20 - 25)  SQL Review No SQL DBs RDBMS and Other types of databases Database Reliability Engineering and Database Internals   Review / Practice Qs - 2 Weeks (September 26 - October 6)  Flash Cards Cheat Sheets Organize Notes    Job Hunt!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/01-SystemDesignInterview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/01-SystemDesignInterview/</guid>
      <description>System Design     Remember Everything is a Tradeoff
 Contents     Resources Interview Question Steps Back of the Envelope Calculations Scalability for Dummies High Level Tradeoffs to Remember Non-Abstract Large System Design Important Tools to Know  Resources     System Design Primer Please stop calling databases CP or AP Transactions Across Datacenters How Google Serves Data From Multiple Datacenters Google Pro Back of Envelope Calculations Palantir - How to rock a systems design interview Numbers every programmer should know Powers of two table What Happens When&amp;hellip; SRE Cheat Sheets Distributed Systems Primer by Loyola SRE Flash Cards How to get into SRE My Path to Site Reliablity Management Google Book - Non Abstract Large System Design Big O Cheat Sheet You&amp;rsquo;re Doing it Wrong (server performance rethought) Scaling Instagram Infrastructure (video) Scalability, availability, stability patterns (slideshare) DNS Architecture 10 Scalable System Design Patterns No SQL Patterns BigTable Model with Cassandra and HBase NGINX Guide to Designing for Scale HAProxy Architecture Guide   Interview Question Steps    1.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/02-LinuxInterview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/02-LinuxInterview/</guid>
      <description>Linux Interview Study Guide    Resource     Linux HackerRank  Common Commands and Purpose    Bash    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/03-CloudInterview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/03-CloudInterview/</guid>
      <description>Cloud Interview    General    AWS    Azure    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/04-LeetCode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/04-LeetCode/</guid>
      <description>Leet Code    Resources     HackerRanker Interview Prep Kit  Every Day!   Two Pointer Technique Cracking Coding Skills (Cheat Sheet) Soft Skills (Cheat Sheet) Cracking Google Interview Prep (Blog)  Overview     Use a dynamic programming language. My choice is Python  Maybe shake the rust off Java and C# just to say be able to &amp;lsquo;hello world&amp;rsquo; Would love to use PowerShell instead&amp;hellip; but oh well   Prioritize simplicity and readability over performance first then Optimize  Interview Overview      Different errors matter differently</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/05-Algos_DataStructs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/05-Algos_DataStructs/</guid>
      <description>Algos and DataStructures    Resources     Big-O Simple Explanation  General Algorithmic Concepts    Big O    Space and time complexity of a solution as the input (n) gets larger. The &amp;lsquo;Worse Case&amp;rsquo;
Multi-Part Algorithms     Multiply Big O when you do x for each y  Nested for loops Double Loop with complexity of O(n) each is a total of O(n*n) = O(n^2)   Add Big O when you do this then that  Do one thing after the other Sort the array O(n log n) then traverse O(n) is O((n log n) + n) = O(n log n)    O(1) - Constant Time     constant time to run algorithm Math equations Print statements Hash access  O(n) - Linear Time     Time increases at same pace as input foreach, map, and reduce  O(log n) - Logarithmic Time     Running time in proportion to the Log of the input size run time barelly increases as you exponentially increase the input Binary Search  O(n log n) - Asymptotic Time Complexity     when you need to do work O(log n) for each item building perfectly balanced binary tree or traversing a binary tree Mergesort / quicksort  O(n^2) - Quadratic Time     Time is squared size of the output commonly double loop Bubble Sort  Arrays and Strings    Hash Tables     Map key to value for efficient lookup Hashes the key into a code (int) Map the code (int) into an array index then use for lookup At each index is a linked list of values Assumed that lookup runtime is O(1) but high collision could theoretically be as high as O(n)  Array List     Resizable array Insertion is O(1) so inserting n items is O(n)  Strings     Immutable string copy can have bad performance Mutable strings or Stringbuilder is a better performance option  Linked Lists    Overview     Sequence of nodes Singly Linked - each node points to the next Doubly Linked - each node points to the next and the previous You can add and remove items from the start and end of list in constant time  Singly Linked List Example in Python    class Node: def __init__(self, data): self.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/06-DevOpsInterview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/06-DevOpsInterview/</guid>
      <description>DevOps Interview    Reading     Highly Effective Environments and Case Studies  Monitoring    Signals     Googles 4-Golden Signals  Latency Traffic Errors Saturation   RED  Rate Errors Duration   USE  Utilization Saturation Errors    OKR    Objectives and Key Results</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/07-Networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/07-Networking/</guid>
      <description>Networking    Resources     Digital Ocean Networking Tutorials Primer to Computer Networking TCP/IP Illustrated Cloudflare Learning Center  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/08-Databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/08-Databases/</guid>
      <description>Databases    Resources     SQL HackerRank  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/09-Review/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/09-Review/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/10-GeneralInterview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/10-GeneralInterview/</guid>
      <description>General Interview    Resources     How to pass the engineering interview in 2021 Interview Cake (Programming Interview Tips)  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/Extras/Checklist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/Extras/Checklist/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/Extras/coding-interview-university/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/Extras/coding-interview-university/</guid>
      <description>Copy Pastad from https://github.com/jwasham/coding-interview-university for ease of use    Coding Interview University     I originally created this as a short to-do list of study topics for becoming a software engineer, but it grew to the large list you see today. After going through this study plan, I got hired as a Software Development Engineer at Amazon! You probably won&amp;rsquo;t have to study as much as I did.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/Extras/CrackingCodingInterviewNotes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/Extras/CrackingCodingInterviewNotes/</guid>
      <description>Cracking the Coding Interview Notes    Big O    Technical Questions    Look for BUD    DIY    Simplify and Generalize    Base Case and Build    Data Structure Brainstorm    Best Conceivable Runtime    What Good Code Looks Like     Correct Efficient Simple Readable Maintainable  Data Structures    Arrays and Strings     Hash Tables ArrayList &amp;amp; ResizableArray StringBuilder  Linked Lists     Creating a Linked List Deleting a Node from a Singly Linked List &amp;ldquo;Runner&amp;rdquo; Technique Recursive Problem  Stacks and Queues     Implement a Stack Implement a Queue  Trees and Graphs     Types of Trees Binary Tree Traversal Binary Heaps (Min-Heaps / Max-Heaps) Tries (Prefix Trees) Graphs Graph Search  Concepts and Al    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/Extras/Flashcards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/Extras/Flashcards/</guid>
      <description>FlashCards    Use Anki Decks</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/Extras/Glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/Extras/Glossary/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/Extras/OperationalExcellenceAssesment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/Extras/OperationalExcellenceAssesment/</guid>
      <description>Operational Excellence Assessment    Overview    How to Use    An outline operational assessment for a technical organization. Derived from &amp;ldquo;The Practice of Cloud System Administration&amp;rdquo;
Example Matrix
   Assesment Q1 Q2 Q3     RT 1 1 2   ER 2 3 3   MM 1 2 2   &amp;hellip;       Contents     Regular Tasks (RT) Emergency Response (ER) Monitoring and Metrics (MM) Capacity Planning (CP) Change Management (CM) New Product Introduction and Removal (NPI/NPR) Service Deployment and Decommissioning (SDD) Performance and Efficiency (PE) Service Delivery: Build Phase (SDBP) Service Delivery: Deployment Phase (SDDP) Toil Reduction (TR) Disaster Preparedness (DP)  &amp;hellip;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/InterviewPrep/LinksToRead/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/InterviewPrep/LinksToRead/</guid>
      <description>Links To Read    Great read! - [ ] My Path to Site Reliability Management
Links that still need to be read, digested, and sorted
System Design     https://blog.pramp.com/how-to-succeed-in-a-system-design-interview-27b35de0df26 System Design Checklist System Design Primer Scalable Web Architecture Distributed Systems Reading List  Direct PDF Designing Distributed Systems Labs Good K8S Resource!   Designing Distributed Systems Free Book High Scalability Best of All Time (Blog) System Design Interview Checklist System Design Interview in 8 Steps Cracking System Design Resources for System Design Interview Prep System Design for Advanced Beginners Acing your Architecture Interview Architecture Interview System Design Interview Concepts to Know All Things Distributed (Blog) Real Big Architecture Video Series  Read Designing Data Intensive Applications Book Get System Design Interview Book</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Javascript/Angular/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Javascript/Angular/</guid>
      <description>Angular    Running the App     Do this stuff  npm install   Still Error? Try this instead if you are using a cache!  npm install --no-audits --prefer-offline   Next run  npm build   Next  ng build   Serve the app up  ng serve --configuration=xxxx    Testing Framework Using Jest     navigate to root of project Create jest.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Javascript/beginner_stuff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Javascript/beginner_stuff/</guid>
      <description>Beginner Javascript     Javascript loads before the page does, if you run into a lot of undefined use an onload or put the script down lower  Function      Use functions for help controlling code flow
 for (var i=0; i &amp;lt; myarr.length; i++) { doThisStuff(myarr[i]) } function doThisStuff(arrThing) { console.log(arrThing.innerHtml) }    Getting Elements Out of A Table     The below can add an ID to a table row based on a matching element in the table Then use and #id in the css to add specific styling  ~</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Links/CoolLinks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Links/CoolLinks/</guid>
      <description>Cool Links    Learning     How to Learn Stuff Quickly  Computer Stuff    Computer Funny     Falshoods CS Students Believe Lessons Ops Learns the Hard Way Fancy Pants  Cool Computer People     Netmeister ze cool architect #1 Coder in Sweden Bob Monjian (Postgresql creator Blog)  Individuals    Paul Graham     Makers Schedule, Managers Schedule Fierce Nerds Think for Yourself  Work     Embrace the Grind Career Planning Planning a High Impact Career Career Planning In Depth Always be Quitting Efficiency is the Enemy Are Beliefs Like Clothes?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Linux/LinuxCentos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Linux/LinuxCentos/</guid>
      <description>Centos Linux    How do I learn to be a Linux sysAdmin (iConrads)
Commands to know     systemctl nmcli lsmod grep yum  Modifying Folders and Files     mkdir  create directory   rm  removes item rm &amp;lt;filename&amp;gt; remove recursively rm &amp;lt;foldername&amp;gt; -r remove everything, no prompt rm &amp;lt;foldername&amp;gt; -r -d -f    Mounting Disk     Mount Disk  check disk mounts lsblk</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Linux/LinuxSignlals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Linux/LinuxSignlals/</guid>
      <description>Linux Signals    Resources     Linux Signals Overview  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Mental/ComputationalThinking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Mental/ComputationalThinking/</guid>
      <description>Computational Thinking    Overview     Abstraction Automation Analysis  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Mental/RandomTips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Mental/RandomTips/</guid>
      <description>Random Tips    IT Tips     Programming is a people problem more than an IT problem Remember Black Swan events Use &amp;lsquo;Boring&amp;rsquo; Tech Multi-tasking does not exist. Do one thing well or many things poorly &amp;ldquo;Whole Ass one thing don&amp;rsquo;t half ass many&amp;rdquo; - RS Perfect is the enemy of the Good. Worse is Better corralary &amp;lsquo;Good Enough&amp;rsquo; is the enemy of &amp;lsquo;actually good&amp;rsquo; Beware Dunning Kruger Murder your darlings Don&amp;rsquo;t be a jerk.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Mental/StressReduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Mental/StressReduction/</guid>
      <description>Stress Reduction    Tips (Results May Vary)     Narccacistic Personality Reduce Evening Exercise Less Heavy Meals Create better sleep routine Meditate Stay Hydrated No Devices before bed Mindfullness  Pay Attention to the Now Move Slower Fagit about it Speak up   GTT  &amp;lsquo;next step&amp;rsquo; 2-min rule    Links     7 things to make life efforless Lazy Manifesto  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Microservices/Kubernetes/BasicKubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Microservices/Kubernetes/BasicKubernetes/</guid>
      <description>Basic Kubernetes    Resources     KataCoda - Kubernetes Kubernetes 101 (learn Kubernetes in 10 Days) Kubernetes the Hard Way MiniKube Kubernetes Learning Path Kubernetes Tutorials(Interactive) Kubernetes Lab with KVM K8S on Centos 7 Getting Started with KVM and K8s Learn Kubernetes Basics   Overview    Kubernetes is an Orchestration and Control Plane for docker images. Similar to docker swarm.
Key Terms    Pods     Basic unit for running containers inside of Kubernetes Provides a way to set environment variables, mount storage, and feed information into a container Pods are responsible for running the container and every pod holds at least one container and controls the execution of that container when all containers exit the pod dies  Replica Sets     Ensures that a set of identially configured Pods are running at the desired replica count Replaces one if one pod dies &amp;ldquo;low-level&amp;rdquo; type in kubernetes, less referred to than &amp;lsquo;Deployments&amp;rsquo; and DaemonSets  Secrets     Used to store non-public information such as tokens, certs, or passwords attached to Pods at runtime Base 64 encoded at rest but decoded when attached to a pod attached as files or environment variables Use add-on encryption for actual encryption (not just encoded)  Deployments     High level abstraction that controls deploying and maintaining a set of Pods Uses a ReplicaSet to keep the Pods running, but offers sophisticated logic for deploying, updating, and scaling a set of Pods Support rolling updates and rollbacks Rollouts can be paused  DaemonSets     Provide a way to ensure that a copy of a Pod is running on every node in the cluster Adjusts as a cluster grows / shrinks, DaemonSet spreads these specific Pods across all the nodes One frequent patterns is to install or configure software on each host node  Ingresses     Route traffic to and from the cluster declare that traffic ought to be channeled from the outside of the cluster into destinations inside the cluster Provide a single SSL endpoint for many applications Many different implementations for customization  CronJobs     Provide a method for scheduling execution of Pods Used for running periodic tasks like backups, reports, and automated tests Use common Cron syntax Part of the Batch API for creating short lived non-server tools  Custom Resource Definitions (CRD)     Provide an extension mechanism that cluster operators and developers can use to create own resource type Defines a new resource type, tells Kubernetes about it Once a new resource type is added, a new instance of that resource may be created Common pattern is to create a custom controller that watches for new CRD instances and responds accordingly   Launching Single Node Cluster    Uses Minikube</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Microservices/Microservices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Microservices/Microservices/</guid>
      <description>Microservices    Resources     What I Wish I Knew About Microservices  What I Wish I Knew Notes     Costs of Microservices  You are using a distributed system (complex) Everything is an RPC Everything is a tradeoff You end up building around problems rather than solving them You trade complexity for politics You keep your biases (I like this language / tool / framework)   RPC  HTTP / REST Gets complicated quickly  Why are you using HTTP symantics?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/OldNotes/2019July_GreenNotebook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/OldNotes/2019July_GreenNotebook/</guid>
      <description>July 2019 - July 2020 Notebook    Oct    Alerting     4 Golden signals  Latency Traffic Errors Saturation   Actional Alerts   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/PowerShell/PowerShell_BestPractices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/PowerShell/PowerShell_BestPractices/</guid>
      <description>PowerShell Best Practices    General Best Practices     Verb-Noun Common Verbs from get-verb Singular Noun What-If Outbuffer Measure-command Allow Empty Collection Test with Pester Make use of metadata to validate (e.g. Parameter Sets)  Done create code to perform actions you can get the metadata to perform. Use your time to develop code that benefits your organization CmdletBinding specifies function level metadata and explicitly creates an advanced function [Paarameter] specifies param level metadata and implicitly creates an advanced function    Get Error Info    get type for catching</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/PowerShell/PowerShell_IseTips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/PowerShell/PowerShell_IseTips/</guid>
      <description>PowerShell Ise Tips    Shortcuts     Shift+Alt - Multiline ctrl+k - comment ctrl+j - structures #region &amp;hellip; #endregion  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/PowerShell/PowerShell_Links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/PowerShell/PowerShell_Links/</guid>
      <description>PowerShell Links    PowerShell Blogs     Kevin Marquette PowerShell &amp;lsquo;Explained&amp;rsquo; Blog  Best Practices     PowerShell Functions Best Practices MS DevBlog Functions Best Practices PowerShell Gallery Publishing Guidelines and Best Practices PSScript Analyzer Settings PS Best Practices and Style Guide Using Plaster to Quickly Template Projects About Splatting Parameters   Module Building     Module Basics Building PS Module Manifest Json Config Files  Flow Functions     Add What-If and Confirm Support to PS Scripts  Pester Testing     Pester Quickstart Pester Syntax and File Setup Pester Setup / Teardown Temp Environments Mock-ing Commands to Shim Data Layer Pester Tests &amp;lsquo;Dos and Donts&amp;rsquo; (at bottom) Beyond Pester 101: Unit Tests &amp;amp; Beyond Pester 102: Acceptance Tests Pester In Action: Playlist Operation Validation Framework  Debugging     Debugging PowerShell in VSCode  CIM     Details on all WMI/CIM Properties and Writables  PSObjects     Everything you Wanted to Know About PSObjects  Credentials with PowerShell     Supporting Credentials with PowerShell  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/PowerShell/PowerShell_ModuleBuilding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/PowerShell/PowerShell_ModuleBuilding/</guid>
      <description>PowerShell Module Building    Directory Setup    ProjectRoot -DoStuffPro --Private ---format-stuff.ps1 ---calculate-stuff.ps1 --Public ---Get-Stuff.ps1 ---Set-Stuff.ps1 --DoStuffPro.psd1 --DoStuffPro.psm1 --config.json *optional -Tests --Get-Stuff.Tests.ps1 --Set-Stuff.Tests.ps1 -README.MD   Under the root folder setup the following folders  Project Name folder - for the contents Tests - for the pester tests README.md - for the info about the project   Under the Project Name Folder setup the following folders  Public - For the functions to make visible Private - For the functions to use internally projectname.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/PowerShell/PowerShell_Pester/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/PowerShell/PowerShell_Pester/</guid>
      <description>PowerShell Pester    About    Pester is for testing Powershell scripts
 Test files are written in form filetotest.Tests.ps1  Get-Stuff.Tests.Ps1 Catagorization works like Get-Stuff.Unit.Tests.ps1 / Get-Stuff.Acceptance.Tests.ps1   Tests should be placed in the same directory as the files they are testing  Setup    Make Sure The File You Are dot Sourcing Contains a Function with the name you are calling&amp;hellip;
 Use a BeforeAll block to dot source the necessary files Use a Describe block to name and specify a test  BeforeAll { .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/PowerShell/PowerShell_TipsTricks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/PowerShell/PowerShell_TipsTricks/</guid>
      <description>Generally Useful Commands    Quick PowerShell Hop Into Another Computer    Enter-PsSession ServerName01 #Alias etsn ServerName01 [&amp;lt;servername01&amp;gt;]: exit See All Commands from Session    get-history
See all available keybindings    ctrl+shift+alt+? 
Tab Completion     Tab Completion with Wild Cards*  *keyword* + TAB   Tab Completion with Menu  get-adl + ctrl+space    See Results Before Assigning to Variable    Get-ChildItem | Tee-Object -Variable var .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/PowerShell/PowerShell_ToolMaking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/PowerShell/PowerShell_ToolMaking/</guid>
      <description>PowerShell ToolMaking    Tips     Remember Single Responsibility Principal  Make use of the pipeline You do not have Get-Service -Format HTML you have Get-Service | ConvertTo-Html Your functions shouldn&amp;rsquo;t handle for everything Remember how a pipeline behaves    Best Practices Style Guide     MS Encouraged Parameter Names MS Strongly Encouraged Guidelines Posh Powershell Style Guide PowerShell Gallery Publishing Guidelines MS PowerShell Docs Style Guide  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Python/Pip_Tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Python/Pip_Tips/</guid>
      <description>Pip Tips    Downloading Packages     Pip Download Docs downloading packages and dependencies  pip download \&amp;lt;packageName\&amp;gt;   downloading packages for specific platform  must use &amp;ndash;only-binary:all: as well pip download --platform manylinux1_x86_64 --only-binary=:all: --python 38 SomePackage   valid platforms  linux_x86_64 manylinux1_x86_64 win32 win_amd64   specify python version  --python-version 37   specify package version  SomePackage==1.0    Errors and Resolutions     On pip install &amp;ldquo;ERROR: Cannot uninstall &amp;lsquo;PyYAML&amp;rsquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Python/PythonBasics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Python/PythonBasics/</guid>
      <description>Python Basics    Links     W3 Schools Python Python Zero to Mastery HackerRank Python  Learning Checklist     Simple Logic, Function setup, Error Handling, Flow Control Objects and Polymorphism Network Interfaces All the methods of the 4 data types  Python &amp;lsquo;Gotchas&amp;rsquo;     Indentation&amp;hellip; remember the : Case Sensitive Methods and Functions  Some Info      All Built in Data Types</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Quotes/Quotes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Quotes/Quotes/</guid>
      <description>Quotes     Customers don&amp;rsquo;t measure you on how hard you tried, they measure you on what you delivered
 ~Steve Jobs
 You&amp;rsquo;ve got to start with the customer experience and work back toward the technology - not the other way around
 ~ Steve Jobs
 Every man has two lives, and the second one starts when he realizes that he only has one.
 ~ Confucius</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/README/</guid>
      <description>This is a personal Wiki (aka Digital Gargen)
Inspired by - https://github.com/nikitavoloboev/knowledge/blob/master/SUMMARY.md</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/Resume/ResumeTips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/Resume/ResumeTips/</guid>
      <description>Resume Tips    Resources     45 Quick Resume Changes Every Question about Every Skill on your Resume Powerful Action Verbs for your Resume Make Sure Resume Bullets Matter   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/ReverseEngineering/Ghidra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/ReverseEngineering/Ghidra/</guid>
      <description>Ghidra Software Reverse Engineering    Resources     Ghidra Homepage  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SQL/DesignConsiderations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SQL/DesignConsiderations/</guid>
      <description>Design Considerations    General Database Design    Links     Microsoft SQL Server Index Architecture and Design Guide Checklist for Designing and Reviewing SQL Server Architecture SQL Server Database Design Best Practices Tutorial Microsoft Database Engine Tuning Advisor  One Database with Multiple Schema or Multiple Databases    Links     Multiple Schema Versus Multiple Databases  Considerations     Are most users in the same location or using the same access path?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SQL/Postgresql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SQL/Postgresql/</guid>
      <description>Postgresql    Links     PostgreSQL: Introduction and Concepts PostgreSQL: Database Tuning PostgreSQL: Future of Sharding Other momjian presentations(tuning) Other momjian presentations (Administration)  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SQL/RenameSqlServer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SQL/RenameSqlServer/</guid>
      <description>Renaming a Server Hosting SQL    Links    MS Docs
Steps      Ensure that a certificate has been requested and updated containing the new name for secure SQL comms
  Have DNS create the new A Record
  Rename the Server
  Have DNS drop the old A Record
  Have DNS create the CNAME pointing to the New A Record</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SQL/SSPI_for_AG/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SQL/SSPI_for_AG/</guid>
      <description>SSPI for Availability Group    Link     Configure Kerberos for Avvailability Groupos  Notes    BLUF: To allow kerberos auth you need to create Server Principal Names for the SQL Servers and the AG listener for both the instance name and the listening ports for the service account
 assumptions  SQL Server 2016 SQL is running on 1433 Listener is running on 5100   Create SPN for  domain\sqlserviceacct  MSSQLSvc/node1.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SQL/TroubleshootingSql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SQL/TroubleshootingSql/</guid>
      <description>Throubleshooting SQL    Resources     RedGate TroubleShooting SQL Server  Early Analysis    sys.dm_os_wait_stats     Identify any major resource waits in the system and os level  sys.dm_io_virtual_file_stats     Evidence of high latency associated with read / write operations Tell how much I/O is being performed by SQL How the I/O load is distributed Can be used with Physical Disk\Avg.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SRE/SRE_Links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SRE/SRE_Links/</guid>
      <description>Links    SRE Teams     How to get Started / Organize your SRE Team Start and Asses your SRE Journey Building Blocks for SRE Implementing SLOs On-Call SRE Team Lifecycles SRE Reaching Beyond Walls SRE Documentation Organizing an SRE Team SRE Team Lifecycle Amazon Principles 12 -Factor App Overview of SRE Best Practices Google SRE Book Google SRE Workbook Dropbox SRE Career Ladder  Tools     List of Awsome SRE Tools  Random      Cascading Failures(Video)</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SRE/SRE_WhitePaper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SRE/SRE_WhitePaper/</guid>
      <description>SRE Whitepaper / PPT Outline    Generate SRE WhitePaper / PPT    Generate Docs     Service Overview Charter Playbook Service Documentation Best Practices Doc Postmortem Framework Production Readiness Review  Document Repository     Where would they go? DevOps would be good (wiki and repo) but not in prod A share would be good, but there is not an easy way to search A wiki would be good, but there is not a good way to store long scripts (would have to link) Should be able to replicate to other environments for ease of access  Key Tenants     Blameless Postmortems Management Buy-In Eliminate Toil Defined SLOs Defined Monitoring and Metrics &amp;lsquo;Operational Excellence&amp;rsquo; Public facing metrics (status Dashboard)  Team Organization     1 Week On-Call Kitchen Sink Type Org  TimeLine     Create plan pending mgmt buy in  Devils Advocate     What is Bad / What could go wrong?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SystemDesign/DevOps_OrgThoughts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SystemDesign/DevOps_OrgThoughts/</guid>
      <description>DevOps Thoughts    Links     Continuous Integration (Martin Fowler Blog)  CALMS     Devops summarized as CALMS  Culture Automation Lean Measurement Sharing    Culture     DevOps is a Tao  You can&amp;rsquo;t be it You can&amp;rsquo;t buy it You can package it It is a way It is a practice   You have to start small, and achieve buy in with wins  Scorecard your organization and re-evaluate every quarter   The first and formost priority is to align Managers, Development, and Operations teams to the same set of objectives, the #1 of which being improving the scorecard standing  The teams self score and not based on metrics (that could be gamed) BLAMELESS environment, the goal is not to establish blame but to improve the teams and organizations   Do you need SRE?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SystemDesign/DistributedComputing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SystemDesign/DistributedComputing/</guid>
      <description>Distributed Computing    Fallacies of distributed computing     The network is reliable Latency is zero Bandwidth is infinite The network is secure Topology doesn&amp;rsquo;t change There is one administrator Transport cost is zero The network is homogeneous  CAP Theorem    It is impossible for a distributed data store to simultaneously provide more than 2 of the following
 Consistency  Every Read receives the most recent write or error   Availability  Every request receives a (non-error) response, without the guarantee that it contains the most recent write   Partition Tolerance  The system continues to operate despite an arbitrary number of messages being dropped (or delayed) by the network between nodes    You Cant Sacrifice Partition Tolerance Because the network is unreliable</description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/SystemDesign/SystemDesignLinks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/SystemDesign/SystemDesignLinks/</guid>
      <description>System Design Links    General     System Design Primer Ops School Cirriculum Design System Checklist Numbers and Calculations Everyone Should Know  DevOps     Atlassian DevOps Framework DevOps Patterns and Anti-Patterns 12 DevOps Anti-Patterns Hacking Culture (building DevOps Culture) IT Revolution What is DevOps? (Agile Admins) Implement SRE in your organization in one year Cross Functional DevOps Teams Generate System Documentation Using Python We Don&amp;rsquo;t Use Kubernetes  Microsoft     Best Practices in Cloud Applications Application Architecture Design  Distributed Systems     Distributed Systems Lecture Distributed Computing for Young Bloods CAP - You Can&amp;rsquo;t Sacrifice Partition Tolerance PACELC Theorem (extended CAP) Parrallel Processing in Distributed Systems Intro to Big Data Processing  Microservices     Microservices Criticisms and Concerns Raspberry-pi-dramble Uber Engineering Microservices Architecture  Examples     Reddit System Design Following WSB Incident p1 Reddit System Design Following WSB Incident p2 Caching at Reddit  Heavy use of memcached  Key Value Store Slab allocation - certain sized chunks of memory   Workload Based Pools  scale pools independently based on utilization make reasonable failure predictions   Issues  consistency issues / race conditions No TTLs on warmup routes causing stale data Specify a TTL when warming up if your app relies on it      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/WindowsTshoot/GroupPolicy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/WindowsTshoot/GroupPolicy/</guid>
      <description>Group Policy    GPResult    See existing group policy from a computer
# User and computer policy in console gpresult /r  # Computer onlly policy gpresult /r /scope computer # save as html to file gpresult /r /h gpreport.html </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/WindowsTshoot/NetworkTroubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/WindowsTshoot/NetworkTroubleshooting/</guid>
      <description>Network Troubleshooting    Resources     Checking for tcpip packet loss on Windows PowerShell Network Monitoring Monitoring the Network Load with PowerShell  Checking for Packet Loss     Get Netstat with statistics  netstat -s -p tcp    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/WindowsTshoot/RDPCryptoError/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/WindowsTshoot/RDPCryptoError/</guid>
      <description>RDP Crypto Error      RDP Crypto error
  Check permissions on C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys
  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://anthonybrainext.netlify.app/WindowsTshoot/SCOM/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anthonybrainext.netlify.app/WindowsTshoot/SCOM/</guid>
      <description>SCOM    On endpoint Server     Stand up Server Ensure necessary FW rules are enabled Admin PowerShell to apply GPOs  gpupdate /force Check gpedit.msc  WSUS GPO Computer Configuration &amp;gt; Policies &amp;gt; Administrative Templates &amp;gt; Windows components &amp;gt; Windows Update     Open regedit Check Windows Update Settings  HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate  WUServer *WUStatusServer   If regkeys not set or not present try to set first   Admin PowerShell  wuaclt /detectnow   Check to see if the wuau (Windows Update) service is running Check the windows update logs  Get-WindowsUpdateLog  If error symsrv.</description>
    </item>
    
  </channel>
</rss>
